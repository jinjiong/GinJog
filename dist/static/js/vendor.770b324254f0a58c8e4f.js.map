{"version":3,"sources":["webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/_video.js@7.5.5@video.js/dist/video.js","webpack:///./node_modules/_vue-awesome-swiper@3.1.3@vue-awesome-swiper/dist/vue-awesome-swiper.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_global@4.3.2@global/window.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/_wowjs@1.1.3@wowjs/dist/wow.js","webpack:///./node_modules/_global@4.3.2@global/document.js","webpack:///./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.js"],"names":["warn","condition","message","isError","err","Object","prototype","toString","call","indexOf","extend","a","b","key","View","name","functional","props","type","String","default","render","_","ref","children","parent","data","routerView","h","$createElement","route","$route","cache","_routerViewCache","depth","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_inactive","$parent","routerViewDepth","matched","component","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","init","propsToPass","config","params","undefined","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","replace","decode","decodeURIComponent","parseQuery","query","res","trim","split","forEach","param","parts","shift","length","join","Array","isArray","push","stringifyQuery","obj","keys","map","result","val2","filter","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","e","meta","path","hash","fullPath","getFullPath","unshift","formatMatch","freeze","value","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","_Vue","toTypes","eventTypes","Link","to","required","tag","exact","Boolean","append","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","findAnchor","child","i","$slots","isStatic","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","install","Vue","installed","isDef","v","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","history","destroyed","defineProperty","get","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","resolvePath","relative","base","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","parse","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","index","defaultDelimiter","delimiter","exec","m","escaped","offset","slice","next","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","JSON","stringify","j","attachKeys","re","flags","sensitive","strict","end","endsWithDelimiter","groups","source","match","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","normalizeLocation","raw","_normalized","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","positionStore","setupScroll","replaceState","getStateKey","origin","addEventListener","saveScrollPosition","state","_key","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","isObject","selector","el","document","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","Time","performance","now","Date","genKey","toFixed","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","concat","apply","called","args","arguments","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","Math","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","configurable","registerHook","list","$once","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","version","use","__webpack_exports__","global","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","parseFloat","floor","isFinite","isPromise","toNumber","isNaN","makeMap","expectsLowerCase","toLowerCase","isBuiltInTag","isReservedAttribute","remove","item","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","Function","ctx","boundFn","_length","toArray","start","ret","_from","toObject","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","getTime","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","enumerable","writable","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","Reflect","ownKeys","Set","set","has","add","clear","uid","Dep","id","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","popTarget","VNode","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","node","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","method","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","src","vmCount","copyAugment","walk","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","hooks","dedupeHooks","mergeAssets","key$1","methods","inject","computed","provide","defaultStrat","mergeOptions","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","info","cur","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","callbacks","flushCallbacks","copies","Promise","p","MutationObserver","setImmediate","counter","observer","textNode","createTextNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","old","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","_isVList","resolveInject","provideKey","_provided","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","done","renderSlot","bindObject","nodes","scopedSlotFn","$scopedSlots","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","listeners","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","renderContext","mergeProps","componentVNodeHooks","hydrating","_isDestroyed","mountedNode","_isComponent","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","factory","errorComp","owner","currentRenderingInstance","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","clearTimeout","ensureCtor","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","style","registerDeepBindings","_createElement","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","handlers","_hasHookEvent","$emit","waiting","flushing","currentFlushTimestamp","getNow","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","before","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","Number","mounted","parseInt","configDef","delete","observable","plugin","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","selected","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","range","pluckModuleFunction","modules","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","ownerDocument","updateDOMListeners","change","normalizeEvents","svgContainer","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","innerHTML","firstChild","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","addClass","classList","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","childrenMatch","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","element","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","baseOptions","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","self","ctrl","alt","genHandlers","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","componentName","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","staticProps","dynamicProps","createFunction","errors","createCompileToFunctionFn","compiled","fnGenErrors","baseCompile","div","finalOptions","tips","tip","compileToFunctions","getShouldDecode","idToTemplate","mount","outerHTML","container","getOuterHTML","window$1","_inheritsLoose","subClass","superClass","_setPrototypeOf","setPrototypeOf","_construct","Parent","Class","construct","sham","Proxy","isNativeReflectConstruct","_assertThisInitialized","ReferenceError","_taggedTemplateLiteralLoose","strings","LogByTypeFactory","log","level","lvl","levels","lvlRegExp","createLogger","logByType","_len","subname","off","debug","DEFAULT","fname","historyItem","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","clean","tsml","sa","object","each","assign","sources","isPlain","computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","isEl","isInFrame","createQuerier","createEl","properties","attributes","content","propName","attrName","appendContent","innerText","prependTo","hasClass","classToCheck","contains","className","classToAdd","classToRemove","toggleClass","classToToggle","predicate","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","k","height","width","findPosition","box","docEl","clientLeft","scrollLeft","clientTop","scrollTop","round","getPointerPosition","boxW","offsetWidth","boxH","boxY","boxX","pageY","pageX","changedTouches","min","emptyEl","normalizeContent","insertContent","isSingleLeftClick","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","hasData","removeData","_cleanUpEvents","elem","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","_supportsPassive","passiveEvents","guid","handlersCopy","attachEvent","removeType","t","elemData","bubbles","targetData","one","func","videojs","Events","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","EVENT_MAP","createStyleElement","styleSheet","bound","throttle","debounce","debounced","_later","cancel","EventTarget","allowedEvents_","ael","queueTrigger","_this","Map","oldTimeout","size","isEvented","eventBusEl_","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","string","Component","play","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","dispose","localize","defaultValue","language","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","prefixedAPI","MediaError","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","tuple","reviver","json","silencePromise","trackToJson_","track","acc","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","createCommonjsModule","module","exports","keycode","searchInput","hasKeyCode","names","foundNamedKey","codes","isEventKey","nameOrCode","backspace","pause/break","caps lock","page up","page down","home","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","cmd","fromCharCode","title","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","addToBody","host","protocol","details","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","isFunction_1","toString$1","alert","confirm","prompt","trim_1","fnToStr","constructorRegex","isES6ClassFn","fnStr","toStr","hasToStringTag","isCallable","tryFunctionObject","strClass","toStr$1","forEach_1","thisArg","receiver","array","forEachArray","forEachString","forEachObject","parseHeaders","headers","row","immutable","hasOwnProperty$1","xhr","createXHR","initParams","uri","_createXHR","response","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","setRequestHeader","isEmpty","beforeSend","send","forEachArray$1","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","unescape","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","StyleBox","CueStyleBox","styleOptions","cueDiv","color","backgroundColor","bottom","writingMode","unicodeBidi","applyStyles","direction","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","count","computeLinePos","axis","maxPosition","initialAxis","abs","ceil","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","reference","getSimpleBoxPosition","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","buffer","TextDecoder","reportOrThrowError","collectNextLine","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","vtt","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","jpg","jpeg","gif","png","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","accum","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","fsApi","isFs","fullscreenElement","fullscreen","msMatchesSelector","inactivityTimeout","defaultPlaybackRate","media","set$1","reduceRight","_this8","PromiseClass","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","writeable","subClassMethods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","fragment","baseURLPath","newPath","_extends$1","_inheritsLoose$1","_assertThisInitialized$1","Stream","pipe","destination","LineStream","_Stream","nextNewline","parseAttributes","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","addParser","customType","dataParser","addTagMapper","lineStream","parseStream","currentMap","uris","currentUri","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","custom","chunk","isObject$1","merge","objects","lists","mergeDiscontiguousPlaylists","_acc$name$segments","contentProtection","formatVideoPlaylist","_ref3","_attributes3","CODECS","codecs","bandwidth","periodIndex","resolvedUri","urlToolkit$1","resolveUrl","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","clientOffset","availabilityStartTime","_attributes$timescale","timescale","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","segmentTime","nextS","segmentRange","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","initSegment","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","segmentInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseAttributes$1","parseFn","_findBox","parseType","dinf","esds","ftyp","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","Uint8Array","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","_attributes","formatAudioPlaylist","_attributes2","organizeVttPlaylists","toM3u8","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","toUnsigned$1","probe","findBox","subresults","results","byteLength","subarray","trafs","baseTimes","tfhd","scale","tfdt","pow","videoTrackIds","hdlrs","tkhds","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","UINT32_MAX","avc1","avcC","btrt","dref","mdat","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","bytes","samples","dependsOn","isDependedOn","hasRedundancy","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","Stream$1","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalUnitType","currentGop","gops","nalCount","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","sampleRate","timestamp","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","idx","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","startIndex","endIndex","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","type$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES$1","parseSyncSafeInteger$1","utils","isLikelyAacData","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","parseSampleRate","parseAacTimestamp","percentEncode$1","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","timelineStartPts","cueTime","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","inspectMp4","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parseMp4Date","parseSampleFlags","parse$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","nals","avcStream","avcView","nalParse","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","Uint16Array","mp4Inspector","inspect","ab","ArrayBuffer","z","textify","inspectedMp4","indent","byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","mp4_6","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover$1","probe$2","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","classCallCheck","Constructor","createClass","protoProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","Stream$2","AsyncStream","jobs","timeout_","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","padded","resolveUrl$1","resolveManifestRedirect","handleManifestRedirect","req","responseURL","classCallCheck$1","createClass$1","inherits$1","possibleConstructorReturn$1","slicedToArray","_arr","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","backwardDuration","forwardDuration","sumDurations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","utils$1","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","probe$$1","parse$$1","mp4$$1","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","mediaRequest_","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","logger","noop$1","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupQualityLevels_","qualityLevels_","addQualityLevel","get$1","HlsSourceHandler","supportedType","__webpack_require__","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","esModule","swiperSlide","swiper","Swiper","globalOptions","slideClass","attached","wrapperClass","mountInstance","beforeDestroy","navigation","pagination","bindEvents","g","eval","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","scriptExports","Util","WeakMap","getComputedStyleRX","me","defaults","isMobile","agent","bubble","detail","customEvent","initCustomEvent","createEventObject","eventType","emitEvent","addEvent","removeEvent","innerHeight","clientHeight","MozWeakMap","WebkitMutationObserver","MozMutationObserver","notSupported","pseudo","_char","currentStyle","WOW","scrollCallback","scrollHandler","resetAnimation","scrolled","scrollContainer","animationNameCache","wowEvent","boxClass","animateClass","mobile","live","finished","stopped","resetStyle","applyStyle","len1","len2","ref1","results1","addedNodes","doSync","childList","subtree","iteration","animate","customStyle","visibility","cacheAnimationName","vendorSet","animationDuration","animationDelay","animationIterationCount","animationName","cachedAnimationName","vendors","vendor","vendorCSS","getPropertyCSSValue","isVisible","viewBottom","viewTop","_util","doccy","topLevel","minDoc","getElementById","CustomEvent","Image","screen","Dom7","els","tempParent","toCreate","unique","uniqueArray","Methods","toggle","removeAttr","dom7ElementDataStorage","dataKey","elStyle","webkitTransform","webkitTransitionDuration","targetSelector","handleLiveEvent","eventData","dom7EventData","parents","handleEvent","event$1","dom7LiveListeners","proxyListener","dom7Listeners","dom7proxy","cancelable","dataIndex","transitionEnd","fireCallBack","outerWidth","includeMargins","outerHeight","scrollY","scrollX","compareWith","webkitMatchesSelector","previousSibling","eq","returnIndex","tempDiv","prepend","nextElementSibling","nextAll","nextEls","previousElementSibling","prevAll","prevEls","find","foundElements","toAdd","methodName","testDiv","Utils","deleteProps","getTranslate","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","m41","m42","parseUrlQuery","urlToParse","paramsPart","len$1","nextSource","keysArray","nextIndex","nextKey","Support","touch","Modernizr","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","passiveListener","gestures","Browser","isSafari","isUiWebView","SwiperClass","eventsListeners","staticAccessors","f7proxy","eventHandler","useModulesParams","instanceParams","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","installModule","proto","updateSize","clientWidth","isHorizontal","isVertical","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","slidesPerView","slidesPerColumnFill","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","centeredSlides","slidesPerGroup","effect","setWrapperSize","slidesGridItem","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","setBreakpoint","freeMode","newTranslate","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideBlankClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","originalEvent","isTouchEvent","isTouched","isMoved","allowClick","currentX","targetTouches","currentY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","atan2","PI","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","lastMoveEvent","velocityEvent","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","stopIndex","groupSize","onClick","detachEvents","breakpoint","getBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","complete","imagesLoaded","imagesToLoad","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","Resize","resize","orientationChangeHandler","attach","ObserverFunc","mutations","observerUpdate","observers","observeParents","containerParents","observeSlideChildren","Observer$1","Virtual","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","renderExternal","slidesToRender","prependIndexes","appendIndexes","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","Keyboard$1","Mousewheel","lastScrollTime","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","autoplayDisableOnInteraction","eventsTarged","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","nextEl","Pagination","paginationType","bullets","firstIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scaleX","scaleY","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","divider","moveDivider","setDragPosition","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Parallax","setTransform","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","in","touchX","touchY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","minIndex","Controller","LinearSpline","guess","i1","i3","binarySearch","interpolate","getInterpolateFunction","controller","spline","setTranslate$1","multiplier","controlledTranslate","controlled","setControlledTranslate","by","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","addElLabel","disableEl","enableEl","onEnterKey","$targetEl","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","hashNavigation","paths","getPathValues","scrollToSlide","setHistoryPopState","pathArray","setHistory","slugify","includes","currentState","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","offsetMultiplier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","toEdge","fromEdge","isHidden","bulletElement","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","dragClass","containerClass","zoomedSlideClass","doubleTap","loadOnTransitionStart","preloaderClass","scrollbarDragMove","notificationClass","paginationUpdate","disableOnInteraction","beforeTransitionStart","sliderFirstMove","slideChange"],"mappings":"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","file":"static/js/vendor.770b324254f0a58c8e4f.js","sourcesContent":["/*!\n  * vue-router v3.0.6\n  * (c) 2019 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode && parent.$vnode.data;\n      if (vnodeData) {\n        if (vnodeData.routerView) {\n          depth++;\n        }\n        if (vnodeData.keepAlive && parent._inactive) {\n          inactive = true;\n        }\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    if (params.pathMatch) { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    return extend({}, raw)\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) { href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex); }\n    else { href = decodeURI(href); }\n  } else {\n    if (searchIndex > -1) { href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex); }\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 1","/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving the component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*(?:[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 1","/**\n * @license\n * Video.js 7.5.5 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('global/window'), require('global/document')) :\n  typeof define === 'function' && define.amd ? define(['global/window', 'global/document'], factory) :\n  (global = global || self, global.videojs = factory(global.window, global.document));\n}(this, function (window$1, document) {\n  window$1 = window$1 && window$1.hasOwnProperty('default') ? window$1['default'] : window$1;\n  document = document && document.hasOwnProperty('default') ? document['default'] : document;\n\n  var version = \"7.5.5\";\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _taggedTemplateLiteralLoose(strings, raw) {\n    if (!raw) {\n      raw = strings.slice(0);\n    }\n\n    strings.raw = raw;\n    return strings;\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n\n  var history = [];\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n\n  var LogByTypeFactory = function LogByTypeFactory(name, log) {\n    return function (type, level, args) {\n      var lvl = log.levels[level];\n      var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n      if (type !== 'log') {\n        // Add the type to the front of the message when it's not \"log\".\n        args.unshift(type.toUpperCase() + ':');\n      } // Add console prefix after adding to history.\n\n\n      args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n      if (history) {\n        history.push([].concat(args));\n      } // If there's no console then don't try to output messages, but they will\n      // still be stored in history.\n\n\n      if (!window$1.console) {\n        return;\n      } // Was setting these once outside of this function, but containing them\n      // in the function makes it easier to test cases where console doesn't exist\n      // when the module is executed.\n\n\n      var fn = window$1.console[type];\n\n      if (!fn && type === 'debug') {\n        // Certain browsers don't have support for console.debug. For those, we\n        // should default to the closest comparable log.\n        fn = window$1.console.info || window$1.console.log;\n      } // Bail out if there's no console or if this type is not allowed by the\n      // current logging level.\n\n\n      if (!fn || !lvl || !lvlRegExp.test(type)) {\n        return;\n      }\n\n      fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n    };\n  };\n\n  function createLogger(name) {\n    // This is the private tracking variable for logging level.\n    var level = 'info'; // the curried logByType bound to the specific log and history\n\n    var logByType;\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n\n    var log = function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logByType('log', level, args);\n    }; // This is the logByType helper that the logging methods below use\n\n\n    logByType = LogByTypeFactory(name, log);\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n\n    log.createLogger = function (subname) {\n      return createLogger(name + ': ' + subname);\n    };\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n\n\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n\n    log.level = function (lvl) {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n        }\n\n        level = lvl;\n      }\n\n      return level;\n    };\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n\n\n    log.history = function () {\n      return history ? [].concat(history) : [];\n    };\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n\n\n    log.history.filter = function (fname) {\n      return (history || []).filter(function (historyItem) {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n      });\n    };\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n\n\n    log.history.clear = function () {\n      if (history) {\n        history.length = 0;\n      }\n    };\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n\n\n    log.history.disable = function () {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n\n\n    log.history.enable = function () {\n      if (history === null) {\n        history = [];\n      }\n    };\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n\n\n    log.error = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return logByType('error', level, args);\n    };\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n\n\n    log.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return logByType('warn', level, args);\n    };\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n\n\n    log.debug = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return logByType('debug', level, args);\n    };\n\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  var log = createLogger('VIDEOJS');\n  var createLogger$1 = log.createLogger;\n\n  function clean(s) {\n    return s.replace(/\\n\\r?\\s*/g, '');\n  }\n\n  var tsml = function tsml(sa) {\n    var s = '',\n        i = 0;\n\n    for (; i < arguments.length; i++) {\n      s += clean(sa[i]) + (arguments[i + 1] || '');\n    }\n\n    return s;\n  };\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  var toString = Object.prototype.toString;\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n\n  var keys = function keys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n  };\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n\n\n  function each(object, fn) {\n    keys(object).forEach(function (key) {\n      return fn(object[key], key);\n    });\n  }\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n\n  function reduce(object, fn, initial) {\n    if (initial === void 0) {\n      initial = 0;\n    }\n\n    return keys(object).reduce(function (accum, key) {\n      return fn(accum, object[key], key);\n    }, initial);\n  }\n  /**\n   * Object.assign-style object shallow merge/extend.\n   *\n   * @param  {Object} target\n   * @param  {Object} ...sources\n   * @return {Object}\n   */\n\n  function assign(target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    if (Object.assign) {\n      return Object.assign.apply(Object, [target].concat(sources));\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isObject(value) {\n    return !!value && typeof value === 'object';\n  }\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isPlain(value) {\n    return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @function\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var cs = window$1.getComputedStyle(el);\n      return cs ? cs[prop] : '';\n    }\n\n    return '';\n  }\n\n  function _templateObject() {\n    var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n    _templateObject = function _templateObject() {\n      return data;\n    };\n\n    return data;\n  }\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n\n  function isNonBlankString(str) {\n    return typeof str === 'string' && /\\S/.test(str);\n  }\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n\n\n  function throwIfWhitespace(str) {\n    if (/\\s/.test(str)) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n  /**\n   * Produce a regular expression for matching a className within an elements className.\n   *\n   * @private\n   * @param  {string} className\n   *         The className to generate the RegExp for.\n   *\n   * @return {RegExp}\n   *         The RegExp that will check for a specific `className` in an elements\n   *         className.\n   */\n\n\n  function classRegExp(className) {\n    return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n  }\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n\n\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window$1.document;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n\n  function isEl(value) {\n    return isObject(value) && value.nodeType === 1;\n  }\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window$1.parent !== window$1.self;\n    } catch (x) {\n      return true;\n    }\n  }\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n\n      var ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  function createEl(tagName, properties, attributes, content) {\n    if (tagName === void 0) {\n      tagName = 'div';\n    }\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      var val = properties[propName]; // See #2176\n      // We originally were accepting both properties and attributes in the\n      // same object, but that doesn't work so well.\n\n      if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n        log.warn(tsml(_templateObject(), propName, val));\n        el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n        // method for it.\n      } else if (propName === 'textContent') {\n        textContent(el, val);\n      } else {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n\n    if (content) {\n      appendContent(el, content);\n    }\n\n    return el;\n  }\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n\n    return el;\n  }\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n\n    if (element.classList) {\n      return element.classList.contains(classToCheck);\n    }\n\n    return classRegExp(classToCheck).test(element.className);\n  }\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {string} classToAdd\n   *         Class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n\n  function addClass(element, classToAdd) {\n    if (element.classList) {\n      element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n      // in the case of classList not being supported.\n    } else if (!hasClass(element, classToAdd)) {\n      element.className = (element.className + ' ' + classToAdd).trim();\n    }\n\n    return element;\n  }\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {string} classToRemove\n   *         Class name to remove\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n\n  function removeClass(element, classToRemove) {\n    if (element.classList) {\n      element.classList.remove(classToRemove);\n    } else {\n      throwIfWhitespace(classToRemove);\n      element.className = element.className.split(/\\s+/).filter(function (c) {\n        return c !== classToRemove;\n      }).join(' ');\n    }\n\n    return element;\n  }\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n\n  function toggleClass(element, classToToggle, predicate) {\n    // This CANNOT use `classList` internally because IE11 does not support the\n    // second parameter to the `classList.toggle()` method! Which is fine because\n    // `classList` will be used by the add/remove functions.\n    var has = hasClass(element, classToToggle);\n\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n\n    if (typeof predicate !== 'boolean') {\n      predicate = !has;\n    } // If the necessary class operation matches the current state of the\n    // element, no action is required.\n\n\n    if (predicate === has) {\n      return;\n    }\n\n    if (predicate) {\n      addClass(element, classToToggle);\n    } else {\n      removeClass(element, classToToggle);\n    }\n\n    return element;\n  }\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      var attrValue = attributes[attrName];\n\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n\n  function getAttributes(tag) {\n    var obj = {}; // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n\n    var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      var attrs = tag.attributes;\n\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var attrName = attrs[i].name;\n        var attrVal = attrs[i].value; // check for known booleans\n        // the matching element property will return a value for typeof\n\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n\n        obj[attrName] = attrVal;\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n  /**\n   * Attempt to block the ability to select text.\n   */\n\n  function blockTextSelection() {\n    document.body.focus();\n\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n  /**\n   * Turn off text selection blocking.\n   */\n\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      var rect = el.getBoundingClientRect();\n      var result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n\n      return result;\n    }\n  }\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n\n  function findPosition(el) {\n    var box;\n\n    if (el.getBoundingClientRect && el.parentNode) {\n      box = el.getBoundingClientRect();\n    }\n\n    if (!box) {\n      return {\n        left: 0,\n        top: 0\n      };\n    }\n\n    var docEl = document.documentElement;\n    var body = document.body;\n    var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n    var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n    var left = box.left + scrollLeft - clientLeft;\n    var clientTop = docEl.clientTop || body.clientTop || 0;\n    var scrollTop = window$1.pageYOffset || body.scrollTop;\n    var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n    return {\n      left: Math.round(left),\n      top: Math.round(top)\n    };\n  }\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n\n  function getPointerPosition(el, event) {\n    var position = {};\n    var box = findPosition(el);\n    var boxW = el.offsetWidth;\n    var boxH = el.offsetHeight;\n    var boxY = box.top;\n    var boxX = box.left;\n    var pageY = event.pageY;\n    var pageX = event.pageX;\n\n    if (event.changedTouches) {\n      pageX = event.changedTouches[0].pageX;\n      pageY = event.changedTouches[0].pageY;\n    }\n\n    position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n    position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n    return position;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n\n  function isTextNode(value) {\n    return isObject(value) && value.nodeType === 3;\n  }\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    return el;\n  }\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    } // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n\n\n    return (Array.isArray(content) ? content : [content]).map(function (value) {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      if (isEl(value) || isTextNode(value)) {\n        return value;\n      }\n\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(function (value) {\n      return value;\n    });\n  }\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(function (node) {\n      return el.appendChild(node);\n    });\n    return el;\n  }\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n      return true;\n    }\n\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n      return true;\n    }\n\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n\n  var $ = createQuerier('querySelector');\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n\n  var $$ = createQuerier('querySelectorAll');\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$\n  });\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n\n  /**\n   * Unique ID for an element or function\n   * @type {Number}\n   */\n  var _guid = 1;\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n\n  var elData = {};\n  /*\n   * Unique attribute name to store an element's guid in\n   *\n   * @type {String}\n   * @constant\n   * @private\n   */\n\n  var elIdAttr = 'vdata' + new Date().getTime();\n  /**\n   * Returns the cache object where data for an element is stored\n   *\n   * @param {Element} el\n   *        Element to store data for.\n   *\n   * @return {Object}\n   *         The cache object for that el that was passed in.\n   */\n\n  function getData(el) {\n    var id = el[elIdAttr];\n\n    if (!id) {\n      id = el[elIdAttr] = newGUID();\n    }\n\n    if (!elData[id]) {\n      elData[id] = {};\n    }\n\n    return elData[id];\n  }\n  /**\n   * Returns whether or not an element has cached data\n   *\n   * @param {Element} el\n   *        Check if this element has cached data.\n   *\n   * @return {boolean}\n   *         - True if the DOM element has cached data.\n   *         - False otherwise.\n   */\n\n  function hasData(el) {\n    var id = el[elIdAttr];\n\n    if (!id) {\n      return false;\n    }\n\n    return !!Object.getOwnPropertyNames(elData[id]).length;\n  }\n  /**\n   * Delete data for the element from the cache and the guid attr from getElementById\n   *\n   * @param {Element} el\n   *        Remove cached data for this element.\n   */\n\n  function removeData(el) {\n    var id = el[elIdAttr];\n\n    if (!id) {\n      return;\n    } // Remove all stored data\n\n\n    delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n    try {\n      delete el[elIdAttr];\n    } catch (e) {\n      if (el.removeAttribute) {\n        el.removeAttribute(elIdAttr);\n      } else {\n        // IE doesn't appear to support removeAttribute on the document element\n        el[elIdAttr] = null;\n      }\n    }\n  }\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n\n  function _cleanUpEvents(elem, type) {\n    var data = getData(elem); // Remove the events of a particular type if there are none left\n\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type]; // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n      // Remove the meta-handler from the element\n\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    } // Remove the events object if there are no types left\n\n\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    } // Finally remove the element data if there is no data left\n\n\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      removeData(elem);\n    }\n  }\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n\n\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n\n\n  function fixEvent(event) {\n    function returnTrue() {\n      return true;\n    }\n\n    function returnFalse() {\n      return false;\n    } // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n    if (!event || !event.isPropagationStopped) {\n      var old = event || window$1.event;\n      event = {}; // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      } // The event occurred on this element\n\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      } // Handle which other element the event is related to\n\n\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      } // Stop the default browser action\n\n\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false; // Stop the event from bubbling\n\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = document.documentElement;\n        var body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } // Handle key presses\n\n\n      event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    } // Returns fixed-up instance\n\n\n    return event;\n  }\n  /**\n   * Whether passive event listeners are supported\n   */\n\n  var _supportsPassive = false;\n\n  (function () {\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  })();\n  /**\n   * Touch events Chrome expects to be passive\n   */\n\n\n  var passiveEvents = ['touchstart', 'touchmove'];\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n\n    var data = getData(elem); // We need a place to store all our handler data\n\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n      data.disabled = false;\n\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n\n        event = fixEvent(event);\n        var handlers = data.handlers[event.type];\n\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          var handlersCopy = handlers.slice(0);\n\n          for (var m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        var options = false;\n\n        if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!hasData(elem)) {\n      return;\n    }\n\n    var data = getData(elem); // If no events exist, nothing to unbind\n\n    if (!data.handlers) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    } // Utility function\n\n\n    var removeType = function removeType(el, t) {\n      data.handlers[t] = [];\n\n      _cleanUpEvents(el, t);\n    }; // Are we removing all bound events?\n\n\n    if (type === undefined) {\n      for (var t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n\n      return;\n    }\n\n    var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n    if (!handlers) {\n      return;\n    } // If no listener was provided, remove all listeners for type\n\n\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    } // We're only removing a single handler\n\n\n    if (fn.guid) {\n      for (var n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n\n    _cleanUpEvents(elem, type);\n  }\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    var elemData = hasData(elem) ? getData(elem) : {};\n    var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n    // handler;\n    // If an event name was passed as a string, creates an event out of it\n\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    } // Normalizes the event properties.\n\n\n    event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n\n\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true; // Executes the default action.\n\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        } // Re-enables event dispatching.\n\n\n        targetData.disabled = false;\n      }\n    } // Inform the triggerer if the default was prevented by returning false\n\n\n    return !event.defaultPrevented;\n  }\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  var _windowLoaded = false;\n  var videojs;\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n\n  var autoSetup = function autoSetup() {\n    // Protect against breakage in non-browser environments and check global autoSetup option.\n    if (!isReal() || videojs.options.autoSetup === false) {\n      return;\n    }\n\n    var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n    if (mediaEls && mediaEls.length > 0) {\n      for (var i = 0, e = mediaEls.length; i < e; i++) {\n        var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs(mediaEl);\n            }\n          } // If getAttribute isn't defined, we need to wait for the DOM.\n\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      } // No videos were found, so keep looping unless page is finished loading.\n\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n\n\n  function autoSetupTimeout(wait, vjs) {\n    if (vjs) {\n      videojs = vjs;\n    }\n\n    window$1.setTimeout(autoSetup, wait);\n  }\n\n  if (isReal() && document.readyState === 'complete') {\n    _windowLoaded = true;\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * @listens load\n     */\n    one(window$1, 'load', function () {\n      _windowLoaded = true;\n    });\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  var createStyleElement = function createStyleElement(className) {\n    var style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n\n  var setTextContent = function setTextContent(el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  /**\n   * Bind (a.k.a proxy or context). A simple method for changing the context of\n   * a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n\n  var bind = function bind(context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    } // Create the new function that changes the context\n\n\n    var bound = function bound() {\n      return fn.apply(context, arguments);\n    }; // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n\n\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n\n  var throttle = function throttle(fn, wait) {\n    var last = Date.now();\n\n    var throttled = function throttled() {\n      var now = Date.now();\n\n      if (now - last >= wait) {\n        fn.apply(void 0, arguments);\n        last = now;\n      }\n    };\n\n    return throttled;\n  };\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n\n  var debounce = function debounce(func, wait, immediate, context) {\n    if (context === void 0) {\n      context = window$1;\n    }\n\n    var timeout;\n\n    var cancel = function cancel() {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n    /* eslint-disable consistent-this */\n\n\n    var debounced = function debounced() {\n      var self = this;\n      var args = arguments;\n\n      var _later = function later() {\n        timeout = null;\n        _later = null;\n\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(_later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  /**\n   * @file src/js/event-target.js\n   */\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n\n  var EventTarget = function EventTarget() {};\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {Object} EventTarget~Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n\n\n  EventTarget.prototype.allowedEvents_ = {};\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  EventTarget.prototype.on = function (type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    on(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n\n\n  EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n\n  EventTarget.prototype.off = function (type, fn) {\n    off(this, type, fn);\n  };\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n\n\n  EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n\n  EventTarget.prototype.one = function (type, fn) {\n    // Remove the addEventListener alialing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    one(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n\n\n  EventTarget.prototype.trigger = function (event) {\n    var type = event.type || event; // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n\n    if (typeof event === 'string') {\n      event = {\n        type: type\n      };\n    }\n\n    event = fixEvent(event);\n\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n\n    trigger(this, event);\n  };\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n\n\n  EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n  var EVENT_MAP;\n\n  EventTarget.prototype.queueTrigger = function (event) {\n    var _this = this;\n\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n\n    var type = event.type || event;\n    var map = EVENT_MAP.get(this);\n\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n\n    var oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    var timeout = window$1.setTimeout(function () {\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(_this);\n      }\n\n      _this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  };\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n\n  var isEvented = function isEvented(object) {\n    return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n      return typeof object[k] === 'function';\n    });\n  };\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n\n\n  var addEventedCallback = function addEventedCallback(target, callback) {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n\n      target.eventedCallbacks.push(callback);\n    }\n  };\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n\n\n  var isValidEventType = function isValidEventType(type) {\n    return (// The regex here verifies that the `type` contains at least one non-\n      // whitespace character.\n      typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n    );\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   */\n\n\n  var validateTarget = function validateTarget(target) {\n    if (!target.nodeName && !isEvented(target)) {\n      throw new Error('Invalid target; must be a DOM node or evented object.');\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   */\n\n\n  var validateEventType = function validateEventType(type) {\n    if (!isValidEventType(type)) {\n      throw new Error('Invalid event type; must be a non-empty string or array.');\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   */\n\n\n  var validateListener = function validateListener(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Invalid listener; must be a function.');\n    }\n  };\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n\n\n  var normalizeListenArgs = function normalizeListenArgs(self, args) {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    var target;\n    var type;\n    var listener;\n\n    if (isTargetingSelf) {\n      target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n\n      if (args.length >= 3) {\n        args.shift();\n      }\n\n      type = args[0];\n      listener = args[1];\n    } else {\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n\n    validateTarget(target);\n    validateEventType(type);\n    validateListener(listener);\n    listener = bind(self, listener);\n    return {\n      isTargetingSelf: isTargetingSelf,\n      target: target,\n      type: type,\n      listener: listener\n    };\n  };\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n\n\n  var listen = function listen(target, method, type, listener) {\n    validateTarget(target);\n\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n\n\n  var EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on: function on$$1() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _normalizeListenArgs = normalizeListenArgs(this, args),\n          isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n          target = _normalizeListenArgs.target,\n          type = _normalizeListenArgs.type,\n          listener = _normalizeListenArgs.listener;\n\n      listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        var removeListenerOnDispose = function removeListenerOnDispose() {\n          return _this.off(target, type, listener);\n        }; // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n\n\n        removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n\n        var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n          return _this.off('dispose', removeListenerOnDispose);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one: function one$$1() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n          isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n          target = _normalizeListenArgs2.target,\n          type = _normalizeListenArgs2.type,\n          listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener); // Targeting another evented object.\n      } else {\n        var wrapper = function wrapper() {\n          _this2.off(target, type, wrapper);\n\n          for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            largs[_key3] = arguments[_key3];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off: function off$$1(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n      } else {\n        var target = targetOrType;\n        var type = typeOrListener; // Fail fast and in a meaningful way!\n\n        validateTarget(target);\n        validateEventType(type);\n        validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n        listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n\n        this.off('dispose', listener);\n\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger: function trigger$$1(event, hash) {\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n\n  function evented(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n      }\n\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n\n    assign(target, EventedMixin);\n\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    } // When any evented object is disposed, it removes all its listeners.\n\n\n    target.on('dispose', function () {\n      target.off();\n      window$1.setTimeout(function () {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n\n  var StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState: function setState(stateUpdates) {\n      var _this = this;\n\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n\n      var changes;\n      each(stateUpdates, function (value, key) {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (_this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: _this.state[key],\n            to: value\n          };\n        }\n\n        _this.state[key] = value;\n      }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes: changes,\n          type: 'statechanged'\n        });\n      }\n\n      return changes;\n    }\n  };\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n\n  function stateful(target, defaultState) {\n    assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n\n    target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n\n    return target;\n  }\n\n  /**\n   * @file to-title-case.js\n   * @module to-title-case\n   */\n\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n  function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n\n  function titleCaseEquals(str1, str2) {\n    return toTitleCase(str1) === toTitleCase(str2);\n  }\n\n  /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @static\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n\n  function mergeOptions() {\n    var result = {};\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n\n        result[key] = mergeOptions(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n\n  var Component =\n  /*#__PURE__*/\n  function () {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * paramters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    function Component(player, options, ready) {\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      } // Hold the reference to the parent component via `addChild` method\n\n\n      this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n      this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n      options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n      this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        var id = player && player.id && player.id() || 'no_player';\n        this.id_ = id + \"_component_\" + newGUID();\n      }\n\n      this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      } // if evented is anything except false, we want to mixin in evented\n\n\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n      }\n\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {}; // Add any child components in options\n\n      if (options.initChildren !== false) {\n        this.initChildren();\n      }\n\n      this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n      // finished for all children that run this constructor\n\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.dispose = function dispose() {\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up\n       */\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      }); // Dispose all children.\n\n      if (this.children_) {\n        for (var i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      } // Delete child references\n\n\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n\n        removeData(this.el_);\n        this.el_ = null;\n      } // remove reference to the player after disposing of the element\n\n\n      this.player_ = null;\n    }\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    ;\n\n    _proto.player = function player() {\n      return this.player_;\n    }\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:mergeOptions}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.options = function options(obj) {\n      log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n      if (!obj) {\n        return this.options_;\n      }\n\n      this.options_ = mergeOptions(this.options_, obj);\n      return this.options_;\n    }\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    ;\n\n    _proto.el = function el() {\n      return this.el_;\n    }\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    ;\n\n    _proto.localize = function localize(string, tokens, defaultValue) {\n      if (defaultValue === void 0) {\n        defaultValue = string;\n      }\n\n      var code = this.player_.language && this.player_.language();\n      var languages = this.player_.languages && this.player_.languages();\n      var language = languages && languages[code];\n      var primaryCode = code && code.split('-')[0];\n      var primaryLang = languages && languages[primaryCode];\n      var localizedString = defaultValue;\n\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          var value = tokens[index - 1];\n          var ret = value;\n\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n\n          return ret;\n        });\n      }\n\n      return localizedString;\n    }\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    ;\n\n    _proto.contentEl = function contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    ;\n\n    _proto.id = function id() {\n      return this.id_;\n    }\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    ;\n\n    _proto.name = function name() {\n      return this.name_;\n    }\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    ;\n\n    _proto.children = function children() {\n      return this.children_;\n    }\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    ;\n\n    _proto.getChildById = function getChildById(id) {\n      return this.childIndex_[id];\n    }\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    ;\n\n    _proto.getChild = function getChild(name) {\n      if (!name) {\n        return;\n      }\n\n      name = toTitleCase(name);\n      return this.childNameIndex_[name];\n    }\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options, index) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (index === void 0) {\n        index = this.children_.length;\n      }\n\n      var component;\n      var componentName; // If child is a string, create component with options\n\n      if (typeof child === 'string') {\n        componentName = toTitleCase(child);\n        var componentClassName = options.componentClass || componentName; // Set name through options\n\n        options.name = componentName; // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n\n        var ComponentClass = Component.getComponent(componentClassName);\n\n        if (!ComponentClass) {\n          throw new Error(\"Component \" + componentClassName + \" does not exist\");\n        } // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n\n\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n\n        component = new ComponentClass(this.player_ || this, options); // child is a component instance\n      } else {\n        component = child;\n      }\n\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      } // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n\n\n      componentName = componentName || component.name && toTitleCase(component.name());\n\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n      } // Add the UI object's element to the container div (box)\n      // Having an element is not required\n\n\n      if (typeof component.el === 'function' && component.el()) {\n        var childNodes = this.contentEl().children;\n        var refNode = childNodes[index] || null;\n        this.contentEl().insertBefore(component.el(), refNode);\n      } // Return so it can stored on parent object if desired.\n\n\n      return component;\n    }\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      if (!component || !this.children_) {\n        return;\n      }\n\n      var childFound = false;\n\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!childFound) {\n        return;\n      }\n\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[component.name()] = null;\n      var compEl = component.el();\n\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    ;\n\n    _proto.initChildren = function initChildren() {\n      var _this = this;\n\n      var children = this.options_.children;\n\n      if (children) {\n        // `this` is `parent`\n        var parentOptions = this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts; // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          } // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n\n\n          if (opts === false) {\n            return;\n          } // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n\n\n          if (opts === true) {\n            opts = {};\n          } // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n\n\n          opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n\n          var newChild = _this.addChild(name, opts);\n\n          if (newChild) {\n            _this[name] = newChild;\n          }\n        }; // Allow for an array of children details to passed in the options\n\n\n        var workingChildren;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name;\n          var opts;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return {\n            name: name,\n            opts: opts\n          };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ;\n\n    _proto.ready = function ready(fn, sync) {\n      if (sync === void 0) {\n        sync = false;\n      }\n\n      if (!fn) {\n        return;\n      }\n\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    ;\n\n    _proto.triggerReady = function triggerReady() {\n      this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n      this.setTimeout(function () {\n        var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n        this.readyQueue_ = [];\n\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        } // Allow for using event listeners also\n\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('ready');\n      }, 1);\n    }\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$ = function $$$1(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$$ = function $$$$1(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    ;\n\n    _proto.hasClass = function hasClass$$1(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {string} classToAdd\n     *        CSS class name to add\n     */\n    ;\n\n    _proto.addClass = function addClass$$1(classToAdd) {\n      addClass(this.el_, classToAdd);\n    }\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {string} classToRemove\n     *        CSS class name to remove\n     */\n    ;\n\n    _proto.removeClass = function removeClass$$1(classToRemove) {\n      removeClass(this.el_, classToRemove);\n    }\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    ;\n\n    _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    ;\n\n    _proto.show = function show() {\n      this.removeClass('vjs-hidden');\n    }\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    ;\n\n    _proto.hide = function hide() {\n      this.addClass('vjs-hidden');\n    }\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.lockShowing = function lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unlockShowing = function unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    ;\n\n    _proto.getAttribute = function getAttribute$$1(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    ;\n\n    _proto.setAttribute = function setAttribute$$1(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    ;\n\n    _proto.removeAttribute = function removeAttribute$$1(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.width = function width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.height = function height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    ;\n\n    _proto.dimensions = function dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    ;\n\n    _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        } // Check if using css width/height (% or px) and adjust\n\n\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n\n        return;\n      } // Not setting a value, so getting it\n      // Make sure element exists\n\n\n      if (!this.el_) {\n        return 0;\n      } // Get dimension value from style\n\n\n      var val = this.el_.style[widthOrHeight];\n      var pxIndex = val.indexOf('px');\n\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      } // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n\n\n      return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n    }\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    ;\n\n    _proto.currentDimension = function currentDimension(widthOrHeight) {\n      var computedWidthOrHeight = 0;\n\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n\n      if (typeof window$1.getComputedStyle === 'function') {\n        var computedStyle = window$1.getComputedStyle(this.el_);\n        computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n      } // remove 'px' from variable and parse as integer\n\n\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n\n      if (computedWidthOrHeight === 0) {\n        var rule = \"offset\" + toTitleCase(widthOrHeight);\n        computedWidthOrHeight = this.el_[rule];\n      }\n\n      return computedWidthOrHeight;\n    }\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    ;\n\n    _proto.currentDimensions = function currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    ;\n\n    _proto.currentWidth = function currentWidth() {\n      return this.currentDimension('width');\n    }\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    ;\n\n    _proto.currentHeight = function currentHeight() {\n      return this.currentDimension('height');\n    }\n    /**\n     * Set the focus to this component\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.el_.focus();\n    }\n    /**\n     * Remove the focus from this component\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.el_.blur();\n    }\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser.\n        event.stopPropagation();\n        this.player_.handleKeyDown(event);\n      }\n    }\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    ;\n\n    _proto.emitTapEvents = function emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      var touchStart = 0;\n      var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n\n      var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n      var touchTimeThreshold = 200;\n      var couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n          touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          var xdiff = event.touches[0].pageX - firstTouch.pageX;\n          var ydiff = event.touches[0].pageY - firstTouch.pageY;\n          var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n\n      var noTap = function noTap() {\n        couldBeTap = false;\n      }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n\n      this.on('touchend', function (event) {\n        firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('tap'); // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    ;\n\n    _proto.enableTouchActivity = function enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      } // listener for reporting that the user is active\n\n\n      var report = bind(this.player(), this.player().reportUserActivity);\n      var touchHolding;\n      this.on('touchstart', function () {\n        report(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n        touchHolding = this.setInterval(report, 250);\n      });\n\n      var touchEnd = function touchEnd(event) {\n        report(); // stop the interval that maintains activity if the touch is holding\n\n        this.clearInterval(touchHolding);\n      };\n\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    ;\n\n    _proto.setTimeout = function setTimeout(fn, timeout) {\n      var _this2 = this;\n\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId, disposeFn;\n      fn = bind(this, fn);\n      timeoutId = window$1.setTimeout(function () {\n        _this2.off('dispose', disposeFn);\n\n        fn();\n      }, timeout);\n\n      disposeFn = function disposeFn() {\n        return _this2.clearTimeout(timeoutId);\n      };\n\n      disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n      this.on('dispose', disposeFn);\n      return timeoutId;\n    }\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    ;\n\n    _proto.clearTimeout = function clearTimeout(timeoutId) {\n      window$1.clearTimeout(timeoutId);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n      this.off('dispose', disposeFn);\n      return timeoutId;\n    }\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    ;\n\n    _proto.setInterval = function setInterval(fn, interval) {\n      var _this3 = this;\n\n      fn = bind(this, fn);\n      var intervalId = window$1.setInterval(fn, interval);\n\n      var disposeFn = function disposeFn() {\n        return _this3.clearInterval(intervalId);\n      };\n\n      disposeFn.guid = \"vjs-interval-\" + intervalId;\n      this.on('dispose', disposeFn);\n      return intervalId;\n    }\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    ;\n\n    _proto.clearInterval = function clearInterval(intervalId) {\n      window$1.clearInterval(intervalId);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-interval-\" + intervalId;\n      this.off('dispose', disposeFn);\n      return intervalId;\n    }\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    ;\n\n    _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n      var _this4 = this;\n\n      // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n      var id, disposeFn;\n\n      if (this.supportsRaf_) {\n        fn = bind(this, fn);\n        id = window$1.requestAnimationFrame(function () {\n          _this4.off('dispose', disposeFn);\n\n          fn();\n        });\n\n        disposeFn = function disposeFn() {\n          return _this4.cancelAnimationFrame(id);\n        };\n\n        disposeFn.guid = \"vjs-raf-\" + id;\n        this.on('dispose', disposeFn);\n        return id;\n      } // Fall back to using a timer.\n\n\n      return this.setTimeout(fn, 1000 / 60);\n    }\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    ;\n\n    _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n      if (this.supportsRaf_) {\n        window$1.cancelAnimationFrame(id);\n\n        var disposeFn = function disposeFn() {};\n\n        disposeFn.guid = \"vjs-raf-\" + id;\n        this.off('dispose', disposeFn);\n        return id;\n      } // Fall back to using a timer.\n\n\n      return this.clearTimeout(id);\n    }\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    ;\n\n    Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n      }\n\n      var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n      var isTech = Tech && Tech.isTech(ComponentToRegister);\n      var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n      if (isTech || !isComp) {\n        var reason;\n\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n\n        throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n      }\n\n      name = toTitleCase(name);\n\n      if (!Component.components_) {\n        Component.components_ = {};\n      }\n\n      var Player = Component.getComponent('Player');\n\n      if (name === 'Player' && Player && Player.players) {\n        var players = Player.players;\n        var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n\n        if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n          return players[pname];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n\n      Component.components_[name] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     *\n     * @deprecated In `videojs` 6 this will not return `Component`s that were not\n     *             registered using {@link Component.registerComponent}. Currently we\n     *             check the global `videojs` object for a `Component` name and\n     *             return that if it exists.\n     */\n    ;\n\n    Component.getComponent = function getComponent(name) {\n      if (!name) {\n        return;\n      }\n\n      name = toTitleCase(name);\n\n      if (Component.components_ && Component.components_[name]) {\n        return Component.components_[name];\n      }\n    };\n\n    return Component;\n  }();\n  /**\n   * Whether or not this component supports `requestAnimationFrame`.\n   *\n   * This is exposed primarily for testing purposes.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\n  Component.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n  Component.registerComponent('Component', Component);\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n  var USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n  var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPAD = /iPad/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\n  var IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPOD = /iPod/i.test(USER_AGENT);\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {string|null}\n   */\n\n  var IOS_VERSION = function () {\n    var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n    if (match && match[1]) {\n      return match[1];\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANDROID = /Android/i.test(USER_AGENT);\n  /**\n   * The detected Android version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|string|null}\n   */\n\n  var ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n    if (!match) {\n      return null;\n    }\n\n    var major = match[1] && parseFloat(match[1]);\n    var minor = match[2] && parseFloat(match[2]);\n\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is a native Android browser.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_EDGE = /Edge/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Google Chrome.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n  /**\n   * The detected Google Chrome version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var CHROME_VERSION = function () {\n    var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n\n    return null;\n  }();\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var IE_VERSION = function () {\n    var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    var version = result && parseFloat(result[1]);\n\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n\n    return version;\n  }();\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\n  var browser = /*#__PURE__*/Object.freeze({\n    IS_IPAD: IS_IPAD,\n    IS_IPHONE: IS_IPHONE,\n    IS_IPOD: IS_IPOD,\n    IS_IOS: IS_IOS,\n    IOS_VERSION: IOS_VERSION,\n    IS_ANDROID: IS_ANDROID,\n    ANDROID_VERSION: ANDROID_VERSION,\n    IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n    IS_FIREFOX: IS_FIREFOX,\n    IS_EDGE: IS_EDGE,\n    IS_CHROME: IS_CHROME,\n    CHROME_VERSION: CHROME_VERSION,\n    IE_VERSION: IE_VERSION,\n    IS_SAFARI: IS_SAFARI,\n    IS_ANY_SAFARI: IS_ANY_SAFARI,\n    TOUCH_ENABLED: TOUCH_ENABLED\n  });\n\n  /**\n   * @file time-ranges.js\n   * @module time-ranges\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n    }\n  }\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n\n\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n\n\n  function createTimeRangesObj(ranges) {\n    if (ranges === undefined || ranges.length === 0) {\n      return {\n        length: 0,\n        start: function start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end: function end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    }\n\n    return {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n\n\n  function createTimeRanges(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n\n  function bufferedPercent(buffered, duration) {\n    var bufferedDuration = 0;\n    var start;\n    var end;\n\n    if (!duration) {\n      return 0;\n    }\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    for (var i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      bufferedDuration += end - start;\n    }\n\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   * @private\n   */\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n\n  var FullscreenApi = {}; // browser API methods\n\n  var apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  var specApi = apiMap[0];\n  var browserApi;\n  var prefixedAPI = false; // determine the supported set of functions\n\n  for (var i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  } // map the browser API names to the spec API names\n\n\n  if (browserApi) {\n    for (var _i = 0; _i < browserApi.length; _i++) {\n      FullscreenApi[specApi[_i]] = browserApi[_i];\n    }\n\n    prefixedAPI = browserApi[0] === specApi[0];\n  }\n\n  /**\n   * @file media-error.js\n   */\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n\n      assign(this, value);\n    }\n\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n\n\n  MediaError.prototype.code = 0;\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n\n  MediaError.prototype.message = '';\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n\n  MediaError.prototype.status = null;\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  }; // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  } // jsdocs for instance/static members added above\n\n  var tuple = SafeParseTuple;\n\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, function (e) {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  var trackToJson_ = function trackToJson_(track) {\n    var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n\n\n  var textTracksToJson = function textTracksToJson(tech) {\n    var trackEls = tech.$$('track');\n    var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n      return t.track;\n    });\n    var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      var json = trackToJson_(trackEl.track);\n\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n\n\n  var jsonToTextTracks = function jsonToTextTracks(json, tech) {\n    json.forEach(function (track) {\n      var addedTrack = tech.addRemoteTextTrack(track).track;\n\n      if (!track.src && track.cues) {\n        track.cues.forEach(function (cue) {\n          return addedTrack.addCue(cue);\n        });\n      }\n    });\n    return tech.textTracks();\n  };\n\n  var textTrackConverter = {\n    textTracksToJson: textTracksToJson,\n    jsonToTextTracks: jsonToTextTracks,\n    trackToJson_: trackToJson_\n  };\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      } // Numbers\n\n\n      if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n      var search = String(searchInput); // check codes\n\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // check aliases\n\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // weird character?\n\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          } // check aliases\n\n\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n\n        return false;\n      }\n    };\n\n    exports = module.exports = keyCode;\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222 // Helper aliases\n\n    };\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n      /*!\n       * Programatically add the following\n       */\n      // lower case chars\n\n    };\n\n    for (i = 97; i < 123; i++) {\n      codes[String.fromCharCode(i)] = i - 32;\n    } // numbers\n\n\n    for (var i = 48; i < 58; i++) {\n      codes[i - 48] = i;\n    } // function keys\n\n\n    for (i = 1; i < 13; i++) {\n      codes['f' + i] = i + 111;\n    } // numpad keys\n\n\n    for (i = 0; i < 10; i++) {\n      codes['numpad ' + i] = i + 96;\n    }\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n    // Create reverse mapping\n\n    for (i in codes) {\n      names[codes[i]] = i;\n    } // Add aliases\n\n\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  var keycode_1 = keycode.code;\n  var keycode_2 = keycode.codes;\n  var keycode_3 = keycode.aliases;\n  var keycode_4 = keycode.names;\n  var keycode_5 = keycode.title;\n\n  var MODAL_CLASS_NAME = 'vjs-modal-dialog';\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n\n  var ModalDialog =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ModalDialog, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    function ModalDialog(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n      _this.closeable(!_this.options_.uncloseable);\n\n      _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n\n\n      _this.contentEl_ = createEl('div', {\n        className: MODAL_CLASS_NAME + \"-content\"\n      }, {\n        role: 'document'\n      });\n      _this.descEl_ = createEl('p', {\n        className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n        id: _this.el().getAttribute('aria-describedby')\n      });\n      textContent(_this.descEl_, _this.description());\n\n      _this.el_.appendChild(_this.descEl_);\n\n      _this.el_.appendChild(_this.contentEl_);\n\n      return _this;\n    }\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n\n\n    var _proto = ModalDialog.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': this.id() + \"_description\",\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    ;\n\n    _proto.label = function label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    ;\n\n    _proto.description = function description() {\n      var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n\n      return desc;\n    }\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    ;\n\n    _proto.open = function open() {\n      if (!this.opened_) {\n        var player = this.player();\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('beforemodalopen');\n        this.opened_ = true; // Fill content if the modal has never opened before and\n        // never been filled.\n\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        } // If the player was playing, pause it and take note of its previously\n        // playing state.\n\n\n        this.wasPlaying_ = !player.paused();\n\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n\n        this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    ;\n\n    _proto.opened = function opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n\n      return this.opened_;\n    }\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    ;\n\n    _proto.close = function close() {\n      if (!this.opened_) {\n        return;\n      }\n\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n\n      this.off('keydown', this.handleKeyDown);\n\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    ;\n\n    _proto.closeable = function closeable(value) {\n      if (typeof value === 'boolean') {\n        var closeable = this.closeable_ = !!value;\n        var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          var temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close);\n        } // If this is being made uncloseable and has a close button, remove it.\n\n\n        if (!closeable && close) {\n          this.off(close, 'close', this.close);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n\n      return this.closeable_;\n    }\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    ;\n\n    _proto.fill = function fill() {\n      this.fillWith(this.content());\n    }\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    ;\n\n    _proto.fillWith = function fillWith(content) {\n      var contentEl = this.contentEl();\n      var parentEl = contentEl.parentNode;\n      var nextSiblingEl = contentEl.nextSibling;\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      } // make sure that the close button is last in the dialog DOM\n\n\n      var closeButton = this.getChild('closeButton');\n\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    ;\n\n    _proto.empty = function empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('modalempty');\n    }\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    ;\n\n    _proto.content = function content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n\n      return this.content_;\n    }\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalFocus_ = function conditionalFocus_() {\n      var activeEl = document.activeElement;\n      var playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      } // exit early if it isn't a tab key\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n\n      var focusableEls = this.focusableEls_();\n      var activeEl = this.el_.querySelector(':focus');\n      var focusIndex;\n\n      for (var i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    ;\n\n    _proto.focusableEls_ = function focusableEls_() {\n      var allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, function (child) {\n        return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    };\n\n    return ModalDialog;\n  }(Component);\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n\n  var TrackList =\n  /*#__PURE__*/\n  function (_EventTarget) {\n    _inheritsLoose(TrackList, _EventTarget);\n\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    function TrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.tracks_ = [];\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n        get: function get() {\n          return this.tracks_.length;\n        }\n      });\n\n      for (var i = 0; i < tracks.length; i++) {\n        _this.addTrack(tracks[i]);\n      }\n\n      return _this;\n    }\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = TrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var index = this.tracks_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.tracks_[index];\n          }\n        });\n      } // Do not add duplicate tracks\n\n\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n\n        this.trigger({\n          track: track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n    }\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    ;\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      var track;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n\n          if (track.off) {\n            track.off();\n          }\n\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!track) {\n        return;\n      }\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n\n\n      this.trigger({\n        track: track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    ;\n\n    _proto.getTrackById = function getTrackById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var track = this[i];\n\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TrackList;\n  }(EventTarget);\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n\n\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack'\n  }; // emulate attribute EventHandler support to allow for feature detection\n\n  for (var event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another audio track is enabled, disable it\n\n\n      list[i].enabled = false;\n    }\n  };\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n\n\n  var AudioTrackList =\n  /*#__PURE__*/\n  function (_TrackList) {\n    _inheritsLoose(AudioTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    function AudioTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      return _this;\n    }\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = AudioTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.enabled) {\n        disableOthers(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.enabledChange_ = function () {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('enabledchange', track.enabledChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    };\n\n    return AudioTrackList;\n  }(TrackList);\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers$1 = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another video track is enabled, disable it\n\n\n      list[i].selected = false;\n    }\n  };\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n\n\n  var VideoTrackList =\n  /*#__PURE__*/\n  function (_TrackList) {\n    _inheritsLoose(VideoTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    function VideoTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n        get: function get() {\n          for (var _i = 0; _i < this.length; _i++) {\n            if (this[_i].selected) {\n              return _i;\n            }\n          }\n\n          return -1;\n        },\n        set: function set() {}\n      });\n      return _this;\n    }\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = VideoTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.selected) {\n        disableOthers$1(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.selectedChange_ = function () {\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers$1(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('selectedchange', track.selectedChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    };\n\n    return VideoTrackList;\n  }(TrackList);\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n\n  var TextTrackList =\n  /*#__PURE__*/\n  function (_TrackList) {\n    _inheritsLoose(TextTrackList, _TrackList);\n\n    function TextTrackList() {\n      return _TrackList.apply(this, arguments) || this;\n    }\n\n    var _proto = TextTrackList.prototype;\n\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    _proto.addTrack = function addTrack(track) {\n      var _this = this;\n\n      _TrackList.prototype.addTrack.call(this, track);\n\n      if (!this.queueChange_) {\n        this.queueChange_ = function () {\n          return _this.queueTrigger('change');\n        };\n      }\n\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = function () {\n          return _this.trigger('selectedlanguagechange');\n        };\n      }\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('modechange', this.queueChange_);\n      var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    };\n\n    return TextTrackList;\n  }(TrackList);\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  var HtmlTrackElementList =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    function HtmlTrackElementList(trackElements) {\n      if (trackElements === void 0) {\n        trackElements = [];\n      }\n\n      this.trackElements_ = [];\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.trackElements_.length;\n        }\n      });\n\n      for (var i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n\n\n    var _proto = HtmlTrackElementList.prototype;\n\n    _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n      var index = this.trackElements_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.trackElements_[index];\n          }\n        });\n      } // Do not add duplicate elements\n\n\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    ;\n\n    _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n      var trackElement_;\n\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n\n      return trackElement_;\n    }\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return HtmlTrackElementList;\n  }();\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  var TextTrackCueList =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    function TextTrackCueList(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.length_;\n        }\n      });\n    }\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n\n\n    var _proto = TextTrackCueList.prototype;\n\n    _proto.setCues_ = function setCues_(cues) {\n      var oldLength = this.length || 0;\n      var i = 0;\n      var l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n\n      var defineProp = function defineProp(index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get: function get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n\n      if (oldLength < l) {\n        i = oldLength;\n\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    ;\n\n    _proto.getCueById = function getCueById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var cue = this[i];\n\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TextTrackCueList;\n  }();\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  var VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n\n  var AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n\n  var TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n\n  var TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n\n  var Track =\n  /*#__PURE__*/\n  function (_EventTarget) {\n    _inheritsLoose(Track, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    function Track(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        label: options.label || '',\n        language: options.language || ''\n      };\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n          get: function get() {\n            return trackProps[key];\n          },\n          set: function set() {}\n        });\n      };\n\n      for (var key in trackProps) {\n        _loop(key);\n      }\n\n      return _this;\n    }\n\n    return Track;\n  }(EventTarget);\n\n  /**\n   * @file url.js\n   * @module url\n   */\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n\n  var parseUrl = function parseUrl(url) {\n    var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n    var a = document.createElement('a');\n    a.href = url; // IE8 (and 9?) Fix\n    // ie8 doesn't parse the URL correctly until the anchor is actually\n    // added to the body, and an innerHTML is needed to trigger the parsing\n\n    var addToBody = a.host === '' && a.protocol !== 'file:';\n    var div;\n\n    if (addToBody) {\n      div = document.createElement('div');\n      div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n      a = div.firstChild; // prevent the div from affecting layout\n\n      div.setAttribute('style', 'display:none; position:absolute;');\n      document.body.appendChild(div);\n    } // Copy the specific URL properties to a new object\n    // This is also needed for IE8 because the anchor loses its\n    // properties when it's removed from the dom\n\n\n    var details = {};\n\n    for (var i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    } // IE9 adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n\n\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n\n    if (!details.protocol) {\n      details.protocol = window$1.location.protocol;\n    }\n\n    if (addToBody) {\n      document.body.removeChild(div);\n    }\n\n    return details;\n  };\n  /**\n   * Get absolute version of relative URL. Used to tell Flash the correct URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n\n  var getAbsoluteURL = function getAbsoluteURL(url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n      var div = document.createElement('div');\n      div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n      url = div.firstChild.href;\n    }\n\n    return url;\n  };\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n\n  var getFileExtension = function getFileExtension(path) {\n    if (typeof path === 'string') {\n      var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n      var pathParts = splitPathRe.exec(path);\n\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n\n  var isCrossOrigin = function isCrossOrigin(url) {\n    var winLoc = window$1.location;\n    var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n    var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n\n    var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var isFunction_1 = isFunction;\n  var toString$1 = Object.prototype.toString;\n\n  function isFunction(fn) {\n    var string = toString$1.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var trim_1 = createCommonjsModule(function (module, exports) {\n    exports = module.exports = trim;\n\n    function trim(str) {\n      return str.replace(/^\\s*|\\s*$/g, '');\n    }\n\n    exports.left = function (str) {\n      return str.replace(/^\\s*/, '');\n    };\n\n    exports.right = function (str) {\n      return str.replace(/\\s*$/, '');\n    };\n  });\n  var trim_2 = trim_1.left;\n  var trim_3 = trim_1.right;\n\n  var fnToStr = Function.prototype.toString;\n  var constructorRegex = /^\\s*class\\b/;\n\n  var isES6ClassFn = function isES6ClassFunction(value) {\n    try {\n      var fnStr = fnToStr.call(value);\n      return constructorRegex.test(fnStr);\n    } catch (e) {\n      return false; // not a function\n    }\n  };\n\n  var tryFunctionObject = function tryFunctionToStr(value) {\n    try {\n      if (isES6ClassFn(value)) {\n        return false;\n      }\n\n      fnToStr.call(value);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var toStr = Object.prototype.toString;\n  var fnClass = '[object Function]';\n  var genClass = '[object GeneratorFunction]';\n  var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\n  var isCallable = function isCallable(value) {\n    if (!value) {\n      return false;\n    }\n\n    if (typeof value !== 'function' && typeof value !== 'object') {\n      return false;\n    }\n\n    if (typeof value === 'function' && !value.prototype) {\n      return true;\n    }\n\n    if (hasToStringTag) {\n      return tryFunctionObject(value);\n    }\n\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    var strClass = toStr.call(value);\n    return strClass === fnClass || strClass === genClass;\n  };\n\n  var toStr$1 = Object.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (hasOwnProperty.call(array, i)) {\n        if (receiver == null) {\n          iterator(array[i], i, array);\n        } else {\n          iterator.call(receiver, array[i], i, array);\n        }\n      }\n    }\n  };\n\n  var forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n      // no such thing as a sparse string.\n      if (receiver == null) {\n        iterator(string.charAt(i), i, string);\n      } else {\n        iterator.call(receiver, string.charAt(i), i, string);\n      }\n    }\n  };\n\n  var forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n      if (hasOwnProperty.call(object, k)) {\n        if (receiver == null) {\n          iterator(object[k], k, object);\n        } else {\n          iterator.call(receiver, object[k], k, object);\n        }\n      }\n    }\n  };\n\n  var forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n      throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n\n    if (arguments.length >= 3) {\n      receiver = thisArg;\n    }\n\n    if (toStr$1.call(list) === '[object Array]') {\n      forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n      forEachString(list, iterator, receiver);\n    } else {\n      forEachObject(list, iterator, receiver);\n    }\n  };\n\n  var forEach_1 = forEach;\n\n  var isArray = function isArray(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n\n  var parseHeaders = function parseHeaders(headers) {\n    if (!headers) return {};\n    var result = {};\n    forEach_1(trim_1(headers).split('\\n'), function (row) {\n      var index = row.indexOf(':'),\n          key = trim_1(row.slice(0, index)).toLowerCase(),\n          value = trim_1(row.slice(index + 1));\n\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n\n  var immutable = extend;\n  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n  function extend() {\n    var target = {};\n\n    for (var i = 0; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (hasOwnProperty$1.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }\n\n  var xhr = createXHR;\n  createXHR.XMLHttpRequest = window$1.XMLHttpRequest || noop;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window$1.XDomainRequest;\n  forEachArray$1([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n\n  function forEachArray$1(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n\n    return true;\n  }\n\n  function initParams(uri, options, callback) {\n    var params = uri;\n\n    if (isFunction_1(options)) {\n      callback = options;\n\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = immutable(options, {\n        uri: uri\n      });\n    }\n\n    params.callback = callback;\n    return params;\n  }\n\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n\n    var called = false;\n\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n\n      return body;\n    }\n\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n\n      var response = failureResponse;\n      var err = null;\n\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n\n      return callback(err, response, response.body);\n    }\n\n    var xhr = options.xhr || null;\n\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n\n    xhr.onabort = function () {\n      aborted = true;\n    };\n\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n\n    xhr.send(body || null);\n    return xhr;\n  }\n\n  function getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n\n    return null;\n  }\n\n  function noop() {}\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n\n  var parseCues = function parseCues(srcContent, track) {\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n    var errors = [];\n\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n\n    parser.parse(srcContent);\n\n    if (errors.length > 0) {\n      if (window$1.console && window$1.console.groupCollapsed) {\n        window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n      }\n\n      errors.forEach(function (error) {\n        return log.error(error);\n      });\n\n      if (window$1.console && window$1.console.groupEnd) {\n        window$1.console.groupEnd();\n      }\n    }\n\n    parser.flush();\n  };\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n\n\n  var loadTrack = function loadTrack(src, track) {\n    var opts = {\n      uri: src\n    };\n    var crossOrigin = isCrossOrigin(src);\n\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n\n    xhr(opts, bind(this, function (err, response, responseBody) {\n      if (err) {\n        return log.error(err, response);\n      }\n\n      track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n\n      if (typeof window$1.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          var loadHandler;\n\n          var errorHandler = function errorHandler() {\n            log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            track.tech_.off('vttjsloaded', loadHandler);\n          };\n\n          loadHandler = function loadHandler() {\n            track.tech_.off('vttjserror', errorHandler);\n            return parseCues(responseBody, track);\n          };\n\n          track.tech_.one('vttjsloaded', loadHandler);\n          track.tech_.one('vttjserror', errorHandler);\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n\n\n  var TextTrack =\n  /*#__PURE__*/\n  function (_Track) {\n    _inheritsLoose(TextTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function TextTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n\n      var settings = mergeOptions(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      var mode = TextTrackMode[settings.mode] || 'disabled';\n      var default_ = settings.default;\n\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n\n      _this = _Track.call(this, settings) || this;\n      _this.tech_ = settings.tech;\n      _this.cues_ = [];\n      _this.activeCues_ = [];\n      var cues = new TextTrackCueList(_this.cues_);\n      var activeCues = new TextTrackCueList(_this.activeCues_);\n      var changed = false;\n      var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n        // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n        this.activeCues = this.activeCues;\n\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n      });\n\n      if (mode !== 'disabled') {\n        _this.tech_.ready(function () {\n          _this.tech_.on('timeupdate', timeupdateHandler);\n        }, true);\n      }\n\n      Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        default: {\n          get: function get() {\n            return default_;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get: function get() {\n            return mode;\n          },\n          set: function set(newMode) {\n            var _this2 = this;\n\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n\n            mode = newMode;\n\n            if (mode !== 'disabled') {\n              this.tech_.ready(function () {\n                _this2.tech_.on('timeupdate', timeupdateHandler);\n              }, true);\n            } else {\n              this.tech_.off('timeupdate', timeupdateHandler);\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n\n\n            this.trigger('modechange');\n          }\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            return cues;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            } // nothing to do\n\n\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n\n            var ct = this.tech_.currentTime();\n            var active = [];\n\n            for (var i = 0, l = this.cues.length; i < l; i++) {\n              var cue = this.cues[i];\n\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                active.push(cue);\n              }\n            }\n\n            changed = false;\n\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (var _i = 0; _i < active.length; _i++) {\n                if (this.activeCues_.indexOf(active[_i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set: function set() {}\n        }\n      });\n\n      if (settings.src) {\n        _this.src = settings.src;\n        loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n      } else {\n        _this.loaded_ = true;\n      }\n\n      return _this;\n    }\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n\n\n    var _proto = TextTrack.prototype;\n\n    _proto.addCue = function addCue(originalCue) {\n      var cue = originalCue;\n\n      if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n        cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n        for (var prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        } // make sure that `id` is copied over\n\n\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n\n      var tracks = this.tech_.textTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    ;\n\n    _proto.removeCue = function removeCue(_removeCue) {\n      var i = this.cues_.length;\n\n      while (i--) {\n        var cue = this.cues_[i];\n\n        if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    };\n\n    return TextTrack;\n  }(Track);\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n\n\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n\n  var AudioTrack =\n  /*#__PURE__*/\n  function (_Track) {\n    _inheritsLoose(AudioTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    function AudioTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var enabled = false;\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n\n          enabled = newEnabled;\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('enabledchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.enabled) {\n        _this.enabled = settings.enabled;\n      }\n\n      _this.loaded_ = true;\n      return _this;\n    }\n\n    return AudioTrack;\n  }(Track);\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n\n  var VideoTrack =\n  /*#__PURE__*/\n  function (_Track) {\n    _inheritsLoose(VideoTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    function VideoTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var selected = false;\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n        get: function get() {\n          return selected;\n        },\n        set: function set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n\n          selected = newSelected;\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('selectedchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.selected) {\n        _this.selected = settings.selected;\n      }\n\n      return _this;\n    }\n\n    return VideoTrack;\n  }(Track);\n\n  /**\n   * @memberof HTMLTrackElement\n   * @typedef {HTMLTrackElement~ReadyState}\n   * @enum {number}\n   */\n\n  var NONE = 0;\n  var LOADING = 1;\n  var LOADED = 2;\n  var ERROR = 3;\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n\n  var HTMLTrackElement =\n  /*#__PURE__*/\n  function (_EventTarget) {\n    _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        vesion of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function HTMLTrackElement(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var readyState;\n      var track = new TextTrack(options);\n      _this.kind = track.kind;\n      _this.src = track.src;\n      _this.srclang = track.language;\n      _this.label = track.label;\n      _this.default = track.default;\n      Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get: function get() {\n            return readyState;\n          }\n        },\n\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get: function get() {\n            return track;\n          }\n        }\n      });\n      readyState = NONE;\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n\n      track.addEventListener('loadeddata', function () {\n        readyState = LOADED;\n\n        _this.trigger({\n          type: 'load',\n          target: _assertThisInitialized(_assertThisInitialized(_this))\n        });\n      });\n      return _this;\n    }\n\n    return HTMLTrackElement;\n  }(EventTarget);\n\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n  HTMLTrackElement.NONE = NONE;\n  HTMLTrackElement.LOADING = LOADING;\n  HTMLTrackElement.LOADED = LOADED;\n  HTMLTrackElement.ERROR = ERROR;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  var NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = type + \"Tracks\";\n    NORMAL[type].privateName = type + \"Tracks_\";\n  });\n  var REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n  var ALL = mergeOptions(NORMAL, REMOTE);\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n  var _objCreate = Object.create || function () {\n    function F() {}\n\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n\n      F.prototype = o;\n      return new F();\n    };\n  }(); // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n\n\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  }; // Try to parse input as a time stamp.\n\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  } // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n\n\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function set(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function get(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function has(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function alt(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function integer(k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function percent(k, v) {\n      var m;\n\n      if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }; // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n\n      var kv = groups[i].split(keyValueDelim);\n\n      if (kv.length !== 2) {\n        continue;\n      }\n\n      var k = kv[0];\n      var v = kv[1];\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input; // 4.1 WebVTT timestamp\n\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      } // Remove time stamp from input.\n\n\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    } // 4.4.2 WebVTT cue settings\n\n\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n\n            break;\n\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n\n          case \"line\":\n            var vals = v.split(\",\"),\n                vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n            }\n\n            break;\n\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n            }\n\n            break;\n\n          case \"size\":\n            settings.percent(k, v);\n            break;\n\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/); // Apply default values for any missing fields.\n\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n      cue.line = settings.get(\"line\", \"auto\");\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100);\n      cue.align = settings.get(\"align\", \"middle\");\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        middle: \"middle\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    } // 4.1 WebVTT cue timings.\n\n\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n    skipWhitespace();\n\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n    // 4.1 WebVTT cue settings list.\n\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  }\n\n  var ESCAPE = {\n    \"&amp;\": \"&\",\n    \"&lt;\": \"<\",\n    \"&gt;\": \">\",\n    \"&lrm;\": \"\\u200E\",\n    \"&rlm;\": \"\\u200F\",\n    \"&nbsp;\": \"\\xA0\"\n  };\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  }; // Parse content into a document fragment.\n\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      } // Consume 'n' characters from the input.\n\n\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n\n      return consume(m[1] ? m[1] : m[2]);\n    } // Unescape a string 's'.\n\n\n    function unescape1(e) {\n      return ESCAPE[e];\n    }\n\n    function unescape(s) {\n      while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n        s = s.replace(m[0], unescape1);\n      }\n\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    } // Create an element for this tag.\n\n\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n\n      if (!tagName) {\n        return null;\n      }\n\n      var element = window.document.createElement(tagName);\n      element.localName = tagName;\n      var name = TAG_ANNOTATION[type];\n\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          } // Otherwise just ignore the end tag.\n\n\n          continue;\n        }\n\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n        if (!m) {\n          continue;\n        } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n        node = createElement(m[1], m[3]);\n\n        if (!node) {\n          continue;\n        } // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n\n\n        if (!shouldAdd(current, node)) {\n          continue;\n        } // Set the class list (as a list of classes, separated by space).\n\n\n        if (m[2]) {\n          node.className = m[2].substr(1).replace('.', ' ');\n        } // Append the node to the current node, and enter the scope of the new\n        // node.\n\n\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      } // Text nodes are leaf nodes.\n\n\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  } // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n\n        return text;\n      }\n\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n\n    return ++count * -1;\n  }\n\n  function StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n\n\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  }; // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n\n\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n\n    var textPos = 0;\n\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n\n      case \"middle\":\n        textPos = cue.position - cue.size / 2;\n        break;\n\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    } // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n\n\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      }); // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  } // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n\n\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  }; // Check if this box overlaps another box, b2.\n\n\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  }; // Check if this box overlaps any other boxes in boxes.\n\n\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Check if this box is within another box.\n\n\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  }; // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n\n\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n\n      case \"-x\":\n        return this.right > container.right;\n\n      case \"+y\":\n        return this.top < container.top;\n\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  }; // Find the percentage of the area that this box is overlapping with another\n  // box.\n\n\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  }; // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n\n\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  }; // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  }; // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n\n\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        } // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n\n\n        if (b.within(containerBox)) {\n          return b;\n        }\n\n        var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        } // Reset the box position to the specified position.\n\n\n        b = new BoxPosition(specifiedPosition);\n      }\n\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = []; // If we have a line number to align the cue to.\n\n    if (cue.snapToLines) {\n      var size;\n\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      } // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n\n\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      } // Move the box to the specified position. This may not be its best\n      // position.\n\n\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n      switch (cue.lineAlign) {\n        case \"middle\":\n          linePos -= calculatedPercentage / 2;\n          break;\n\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      } // Apply initial line position to the cue box.\n\n\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n      // to it.\n\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT$1() {} // Nothing\n  // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function decode(data) {\n        if (!data) {\n          return \"\";\n        }\n\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    } // Remove all previous children.\n\n\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n\n      return false;\n    } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function () {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function reportOrThrowError(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function parse(data) {\n      var self = this; // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n\n        var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n\n        self.buffer = buffer.substr(pos);\n        return line;\n      } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n\n            case \"width\":\n              settings.percent(k, v);\n              break;\n\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n\n              if (xy.length !== 2) {\n                break;\n              } // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n\n\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/); // Create the region, using default values for any values that were not\n        // specified.\n\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n          self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      } // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n\n\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      } // 3.2 WebVTT metadata header syntax\n\n\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      } // 5.1 WebVTT file parsing.\n\n\n      try {\n        var line;\n\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n              if (!line) {\n                continue;\n              }\n\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n              self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n\n            // Process line as start of a cue.\n\n            /*falls through*/\n\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n\n              self.state = \"CUETEXT\";\n              continue;\n\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n\n              self.cue.text += line;\n              continue;\n\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n\n        self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n\n      return this;\n    },\n    flush: function flush() {\n      var self = this;\n\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        } // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n\n\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"middle\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = 50;\n    var _positionAlign = \"middle\";\n    var _size = 50;\n    var _align = \"middle\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function get() {\n          return _id;\n        },\n        set: function set(value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function get() {\n          return _pauseOnExit;\n        },\n        set: function set(value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function get() {\n          return _startTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function get() {\n          return _endTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function get() {\n          return _text;\n        },\n        set: function set(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function get() {\n          return _region;\n        },\n        set: function set(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function get() {\n          return _vertical;\n        },\n        set: function set(value) {\n          var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n          if (setting === false) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function get() {\n          return _snapToLines;\n        },\n        set: function set(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function get() {\n          return _line;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _lineAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function get() {\n          return _position;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _positionAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function get() {\n          return _size;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function get() {\n          return _align;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n    /**\n     * Other <track> spec defined properties\n     */\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n    this.displayState = undefined;\n  }\n  /**\n   * VTTCue methods\n   */\n\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  } // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function get() {\n          return _width;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function get() {\n          return _lines;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function get() {\n          return _scroll;\n        },\n        set: function set(value) {\n          var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n          if (setting === false) {\n            throw new SyntaxError(\"An invalid or illegal string was specified.\");\n          }\n\n          _scroll = setting;\n        }\n      }\n    });\n  }\n\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window$1.vttjs = vttjs;\n    window$1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window$1.VTTCue;\n    var nativeVTTRegion = window$1.VTTRegion;\n\n    vttjs.shim = function () {\n      window$1.VTTCue = cueShim;\n      window$1.VTTRegion = regionShim;\n    };\n\n    vttjs.restore = function () {\n      window$1.VTTCue = nativeVTTCue;\n      window$1.VTTRegion = nativeVTTRegion;\n    };\n\n    if (!window$1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  var browserIndex_1 = browserIndex.WebVTT;\n  var browserIndex_2 = browserIndex.VTTCue;\n  var browserIndex_3 = browserIndex.VTTRegion;\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n\n  function createTrackHelper(self, kind, label, language, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var tracks = self.textTracks();\n    options.kind = kind;\n\n    if (label) {\n      options.label = label;\n    }\n\n    if (language) {\n      options.language = language;\n    }\n\n    options.tech = self;\n    var track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link Flash} and {@link HTML5}\n   *\n   * @extends Component\n   */\n\n\n  var Tech =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Tech, _Component);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Tech(options, ready) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (ready === void 0) {\n        ready = function ready() {};\n      }\n\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n      // implement a very limited played()\n\n      _this.hasStarted_ = false;\n\n      _this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n\n      _this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        if (options && options[props.getterName]) {\n          _this[props.privateName] = options[props.getterName];\n        }\n      }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n      if (!_this.featuresProgressEvents) {\n        _this.manualProgressOn();\n      } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n      if (!_this.featuresTimeupdateEvents) {\n        _this.manualTimeUpdatesOn();\n      }\n\n      ['Text', 'Audio', 'Video'].forEach(function (track) {\n        if (options[\"native\" + track + \"Tracks\"] === false) {\n          _this[\"featuresNative\" + track + \"Tracks\"] = false;\n        }\n      });\n\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        _this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        _this.featuresNativeTextTracks = true;\n      }\n\n      if (!_this.featuresNativeTextTracks) {\n        _this.emulateTextTracks();\n      }\n\n      _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n      _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n      if (!options.nativeControlsForTouch) {\n        _this.emitTapEvents();\n      }\n\n      if (_this.constructor) {\n        _this.name_ = _this.constructor.name || 'Unknown Tech';\n      }\n\n      return _this;\n    }\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n\n\n    var _proto = Tech.prototype;\n\n    _proto.triggerSourceset = function triggerSourceset(src) {\n      var _this2 = this;\n\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', function () {\n          return _this2.setTimeout(function () {\n            return _this2.triggerSourceset(src);\n          }, 1);\n        });\n      }\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger({\n        src: src,\n        type: 'sourceset'\n      });\n    }\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    ;\n\n    _proto.manualProgressOn = function manualProgressOn() {\n      this.on('durationchange', this.onDurationChange);\n      this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n      this.one('ready', this.trackProgress);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    ;\n\n    _proto.manualProgressOff = function manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange);\n    }\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    ;\n\n    _proto.trackProgress = function trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n        var numBufferedPercent = this.bufferedPercent();\n\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n\n        this.bufferedPercent_ = numBufferedPercent;\n\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    ;\n\n    _proto.onDurationChange = function onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      return createTimeRanges(0, 0);\n    }\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$$1() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    ;\n\n    _proto.stopTrackingProgress = function stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime);\n      this.on('pause', this.stopTrackingCurrentTime);\n    }\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime);\n      this.off('pause', this.stopTrackingCurrentTime);\n    }\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    ;\n\n    _proto.trackCurrentTime = function trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    ;\n\n    _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    ;\n\n    _proto.clearTracks = function clearTracks(types) {\n      var _this3 = this;\n\n      types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n      types.forEach(function (type) {\n        var list = _this3[type + \"Tracks\"]() || [];\n        var i = list.length;\n\n        while (i--) {\n          var track = list[i];\n\n          if (type === 'text') {\n            _this3.removeRemoteTextTrack(track);\n          }\n\n          list.removeTrack(track);\n        }\n      });\n    }\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    ;\n\n    _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n      var list = this.autoRemoteTextTracks_ || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.reset = function reset() {}\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n\n      return this.error_;\n    }\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    ;\n\n    _proto.played = function played() {\n      if (this.hasStarted_) {\n        return createTimeRanges(0, 0);\n      }\n\n      return createTimeRanges();\n    }\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    ;\n\n    _proto.initTrackListeners = function initTrackListeners() {\n      var _this4 = this;\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(function (name) {\n        var props = NORMAL[name];\n\n        var trackListChanges = function trackListChanges() {\n          _this4.trigger(name + \"trackchange\");\n        };\n\n        var tracks = _this4[props.getterName]();\n\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n\n        _this4.on('dispose', function () {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    ;\n\n    _proto.addWebVttScript_ = function addWebVttScript_() {\n      var _this5 = this;\n\n      if (window$1.WebVTT) {\n        return;\n      } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n\n\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        } // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n\n\n        var script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjsloaded');\n        };\n\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjserror');\n        };\n\n        this.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        }); // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n\n        window$1.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n    /**\n     * Emulate texttracks\n     *\n     */\n    ;\n\n    _proto.emulateTextTracks = function emulateTextTracks() {\n      var _this6 = this;\n\n      var tracks = this.textTracks();\n      var remoteTracks = this.remoteTextTracks();\n\n      var handleAddTrack = function handleAddTrack(e) {\n        return tracks.addTrack(e.track);\n      };\n\n      var handleRemoveTrack = function handleRemoveTrack(e) {\n        return tracks.removeTrack(e.track);\n      };\n\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n\n      var updateDisplay = function updateDisplay() {\n        return _this6.trigger('texttrackchange');\n      };\n\n      var textTracksChanges = function textTracksChanges() {\n        updateDisplay();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n\n      return createTrackHelper(this, kind, label, language);\n    }\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      var track = mergeOptions(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=true]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     * @deprecated The default functionality for this function will be equivalent\n     *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n     *             also be removed.\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var _this7 = this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var htmlTrackElement = this.createRemoteTextTrack(options);\n\n      if (manualCleanup !== true && manualCleanup !== false) {\n        // deprecation warning\n        log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n        manualCleanup = true;\n      } // store HTMLTrackElement and TextTrack to remote list\n\n\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n      if (manualCleanup !== true) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(function () {\n          return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n        });\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return {};\n    }\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPoster = function setPoster() {}\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.playsinline = function playsinline() {}\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPlaysinline = function setPlaysinline() {}\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    ;\n\n    Tech.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    Tech.canPlaySource = function canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    ;\n\n    Tech.isTech = function isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    ;\n\n    Tech.registerTech = function registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n\n      if (!Tech.isTech(tech)) {\n        throw new Error(\"Tech \" + name + \" must be a Tech\");\n      }\n\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n\n      name = toTitleCase(name);\n      Tech.techs_[name] = tech;\n\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n\n      return tech;\n    }\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    ;\n\n    Tech.getTech = function getTech(name) {\n      if (!name) {\n        return;\n      }\n\n      name = toTitleCase(name);\n\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n\n      if (window$1 && window$1.videojs && window$1.videojs[name]) {\n        log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n        return window$1.videojs[name];\n      }\n    };\n\n    return Tech;\n  }(Component);\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVolumeControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n\n  Tech.prototype.featuresMuteControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresFullscreenResize = false;\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresPlaybackRate = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresProgressEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresSourceset = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresTimeupdateEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresNativeTextTracks = false;\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      var handlers = _Tech.sourceHandlers;\n\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n\n      handlers.splice(index, 0, handler);\n    };\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlayType = function (type) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n\n      return '';\n    };\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n\n\n    _Tech.selectSourceHandler = function (source, options) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n\n        if (can) {\n          return handlers[i];\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlaySource = function (srcObj, options) {\n      var sh = _Tech.selectSourceHandler(srcObj, options);\n\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n\n      return '';\n    };\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n\n\n    var deferrable = ['seekable', 'seeking', 'duration'];\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      var originalFn = this[fnName];\n\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n\n    _Tech.prototype.setSource = function (source) {\n      var sh = _Tech.selectSourceHandler(source, this.options_);\n\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log.error('No source handler found for the current source.');\n        }\n      } // Dispose any existing source handler\n\n\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler);\n\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler);\n    };\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n\n\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      } // always clean up auto-text tracks\n\n\n      this.cleanupAutoTextTracks();\n\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n\n        this.sourceHandler_ = null;\n      }\n    };\n  }; // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n\n\n  Component.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  var middlewares = {};\n  var middlewareInstances = {};\n  var TERMINATOR = {};\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n\n  function setSource(player, src, next) {\n    player.setTimeout(function () {\n      return setSourceHelper(src, middlewares[src.type], next, player);\n    }, 1);\n  }\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n\n  function setTech(middleware, tech) {\n    middleware.forEach(function (mw) {\n      return mw.setTech && mw.setTech(tech);\n    });\n  }\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n\n  function set$1(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n\n  function mediate(middleware, tech, method, arg) {\n    if (arg === void 0) {\n      arg = null;\n    }\n\n    var callMethod = 'call' + toTitleCase(method);\n    var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n\n    var returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    seekable: 1,\n    played: 1,\n    paused: 1\n  };\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedSetters = {\n    setCurrentTime: 1\n  };\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n\n  function middlewareIterator(method) {\n    return function (value, mw) {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n\n      if (mw[method]) {\n        return mw[method](value);\n      }\n\n      return value;\n    };\n  }\n\n  function executeRight(mws, method, value, terminated) {\n    for (var i = mws.length - 1; i >= 0; i--) {\n      var mw = mws[i];\n\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n\n\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n\n  function getOrCreateFactory(player, mwFactory) {\n    var mws = middlewareInstances[player.id()];\n    var mw = null;\n\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n\n    for (var i = 0; i < mws.length; i++) {\n      var _mws$i = mws[i],\n          mwf = _mws$i[0],\n          mwi = _mws$i[1];\n\n      if (mwf !== mwFactory) {\n        continue;\n      }\n\n      mw = mwi;\n    }\n\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n\n    return mw;\n  }\n\n  function setSourceHelper(src, middleware, next, player, acc, lastRun) {\n    if (src === void 0) {\n      src = {};\n    }\n\n    if (middleware === void 0) {\n      middleware = [];\n    }\n\n    if (acc === void 0) {\n      acc = [];\n    }\n\n    if (lastRun === void 0) {\n      lastRun = false;\n    }\n\n    var _middleware = middleware,\n        mwFactory = _middleware[0],\n        mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      mw.setSource(assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } // we've succeeded, now we need to go deeper\n\n\n        acc.push(mw); // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n\n  var MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    oga: 'audio/ogg',\n    m3u8: 'application/x-mpegURL',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n\n  var getMimetype = function getMimetype(src) {\n    if (src === void 0) {\n      src = '';\n    }\n\n    var ext = getFileExtension(src);\n    var mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n\n  var findMimetype = function findMimetype(player, src) {\n    if (!src) {\n      return '';\n    } // 1. check for the type in the `source` cache\n\n\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    } // 2. see if we have this source in our `currentSources` cache\n\n\n    var matchingSources = player.cache_.sources.filter(function (s) {\n      return s.src === src;\n    });\n\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    } // 3. look for the src url in source elements and use the type there\n\n\n    var sources = player.$$('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var s = sources[i];\n\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    } // 4. finally fallback to our list of mime types based on src url extension\n\n\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n\n  var filterSource = function filterSource(src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      var newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src: src\n      })];\n    } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n\n    return src;\n  };\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n\n\n  function fixSource(src) {\n    var mimetype = getMimetype(src.src);\n\n    if (!src.type && mimetype) {\n      src.type = mimetype;\n    }\n\n    return src;\n  }\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n\n  var MediaLoader =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(MediaLoader, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    function MediaLoader(player, options, ready) {\n      var _this;\n\n      // MediaLoader has no element\n      var options_ = mergeOptions({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          var techName = toTitleCase(j[i]);\n          var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n\n          if (!techName) {\n            tech = Component.getComponent(techName);\n          } // Check if the browser supports this technology\n\n\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (HTML5, Flash) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n\n      return _this;\n    }\n\n    return MediaLoader;\n  }(Component);\n\n  Component.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n\n  var ClickableComponent =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ClickableComponent, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ClickableComponent(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.emitTapEvents();\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = ClickableComponent.prototype;\n\n    _proto.createEl = function createEl$$1(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      props = assign({\n        innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n\n      if (tag === 'button') {\n        log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n      } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n      attributes = assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n\n      var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n      this.createControlTextEl(el);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    ;\n\n    _proto.createControlTextEl = function createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.el();\n      }\n\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n\n      var localizedText = this.localize(text);\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n\n      if (!this.nonIconControl) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enable this `ClickableComponent`\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n\n        this.on(['tap', 'click'], this.handleClick);\n        this.on('keydown', this.handleKeyDown);\n      }\n    }\n    /**\n     * Disable this `ClickableComponent`\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n\n      this.off(['tap', 'click'], this.handleClick);\n      this.off('keydown', this.handleKeyDown);\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {}\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return ClickableComponent;\n  }(Component);\n\n  Component.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n\n  var PosterImage =\n  /*#__PURE__*/\n  function (_ClickableComponent) {\n    _inheritsLoose(PosterImage, _ClickableComponent);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PosterImage(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n\n      _this.update();\n\n      player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n      return _this;\n    }\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n\n\n    var _proto = PosterImage.prototype;\n\n    _proto.dispose = function dispose() {\n      this.player().off('posterchange', this.update);\n\n      _ClickableComponent.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      var el = createEl('div', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      });\n      return el;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var url = this.player().poster();\n      this.setSrc(url); // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    ;\n\n    _proto.setSrc = function setSrc(url) {\n      var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n      // this will throw an extra error\n\n      if (url) {\n        backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n\n      this.player_.tech(true).focus();\n\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    };\n\n    return PosterImage;\n  }(ClickableComponent);\n\n  Component.registerComponent('PosterImage', PosterImage);\n\n  var darkGray = '#222';\n  var lightGray = '#ccc';\n  var fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n\n  function constructColor(color, opacity) {\n    var hex;\n\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n\n\n  var TextTrackDisplay =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(TextTrackDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    function TextTrackDisplay(player, options, ready) {\n      var _this;\n\n      _this = _Component.call(this, player, options, ready) || this;\n      var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n      player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n\n      player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        window$1.addEventListener('orientationchange', updateDisplayHandler);\n        player.on('dispose', function () {\n          return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n        });\n        var tracks = this.options_.playerOptions.tracks || [];\n\n        for (var i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n\n        this.preselectTrack();\n      }));\n      return _this;\n    }\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n\n\n    var _proto = TextTrackDisplay.prototype;\n\n    _proto.preselectTrack = function preselectTrack() {\n      var modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      var trackList = this.player_.textTracks();\n      var userPref = this.player_.cache_.selectedLanguage;\n      var firstDesc;\n      var firstCaptions;\n      var preferredTrack;\n\n      for (var i = 0; i < trackList.length; i++) {\n        var track = trackList[i];\n\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track; // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          } // clear everything if offTextTrackMenuItem was clicked\n\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track.default) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      } // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n\n\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.toggleDisplay = function toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    ;\n\n    _proto.clearDisplay = function clearDisplay() {\n      if (typeof window$1.WebVTT === 'function') {\n        window$1.WebVTT.processCues(window$1, [], this.el_);\n      }\n    }\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var tracks = this.player_.textTracks();\n      this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n      var descriptionsTrack = null;\n      var captionsSubtitlesTrack = null;\n      var i = tracks.length;\n\n      while (i--) {\n        var track = tracks[i];\n\n        if (track.mode === 'showing') {\n          if (track.kind === 'descriptions') {\n            descriptionsTrack = track;\n          } else {\n            captionsSubtitlesTrack = track;\n          }\n        }\n      }\n\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack} track\n     *        Text track object to be added to the list.\n     */\n    ;\n\n    _proto.updateForTrack = function updateForTrack(track) {\n      if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n        return;\n      }\n\n      var cues = [];\n\n      for (var _i = 0; _i < track.activeCues.length; _i++) {\n        cues.push(track.activeCues[_i]);\n      }\n\n      window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n      if (!this.player_.textTrackSettings) {\n        return;\n      }\n\n      var overrides = this.player_.textTrackSettings.getValues();\n      var i = cues.length;\n\n      while (i--) {\n        var cue = cues[i];\n\n        if (!cue) {\n          continue;\n        }\n\n        var cueDiv = cue.displayState;\n\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n          }\n        }\n\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n          cueDiv.style.bottom = '2px';\n        }\n\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    };\n\n    return TextTrackDisplay;\n  }(Component);\n\n  Component.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n\n  var LoadingSpinner =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(LoadingSpinner, _Component);\n\n    function LoadingSpinner() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = LoadingSpinner.prototype;\n\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    _proto.createEl = function createEl$$1() {\n      var isAudio = this.player_.isAudio();\n      var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      var controlText = createEl('span', {\n        className: 'vjs-control-text',\n        innerHTML: this.localize('{1} is loading.', [playerType])\n      });\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n\n      el.appendChild(controlText);\n      return el;\n    };\n\n    return LoadingSpinner;\n  }(Component);\n\n  Component.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n\n  var Button =\n  /*#__PURE__*/\n  function (_ClickableComponent) {\n    _inheritsLoose(Button, _ClickableComponent);\n\n    function Button() {\n      return _ClickableComponent.apply(this, arguments) || this;\n    }\n\n    var _proto = Button.prototype;\n\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    _proto.createEl = function createEl(tag, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      tag = 'button';\n      props = assign({\n        innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n        className: this.buildCSSClass()\n      }, props); // Add attributes for button element\n\n      attributes = assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n      var el = Component.prototype.createEl.call(this, tag, props, attributes);\n      this.createControlTextEl(el);\n      return el;\n    }\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var className = this.constructor.name;\n      log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n      return Component.prototype.addChild.call(this, child, options);\n    }\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      _ClickableComponent.prototype.enable.call(this);\n\n      this.el_.removeAttribute('disabled');\n    }\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      _ClickableComponent.prototype.disable.call(this);\n\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      } // Pass keypress handling up for unsupported keys\n\n\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    };\n\n    return Button;\n  }(ClickableComponent);\n\n  Component.registerComponent('Button', Button);\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n\n  var BigPlayButton =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(BigPlayButton, _Button);\n\n    function BigPlayButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n      _this.mouseused_ = false;\n\n      _this.on('mousedown', _this.handleMouseDown);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n\n\n    var _proto = BigPlayButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        silencePromise(playPromise);\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var cb = this.player_.getChild('controlBar');\n      var playToggle = cb && cb.getChild('playToggle');\n\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var playFocus = function playFocus() {\n        return playToggle.focus();\n      };\n\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, function () {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      this.mouseused_ = false;\n\n      _Button.prototype.handleKeyDown.call(this, event);\n    };\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      this.mouseused_ = true;\n    };\n\n    return BigPlayButton;\n  }(Button);\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n\n  var CloseButton =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(CloseButton, _Button);\n\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    function CloseButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.controlText(options && options.controlText || _this.localize('Close'));\n\n      return _this;\n    }\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n\n\n    var _proto = CloseButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    };\n\n    return CloseButton;\n  }(Button);\n\n  Component.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n\n  var PlayToggle =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(PlayToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function PlayToggle(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n      options.replay = options.replay === undefined || options.replay;\n\n      _this.on(player, 'play', _this.handlePlay);\n\n      _this.on(player, 'pause', _this.handlePause);\n\n      if (options.replay) {\n        _this.on(player, 'ended', _this.handleEnded);\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PlayToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked(event) {\n      this.removeClass('vjs-ended');\n\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay(event) {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n      this.controlText('Pause');\n    }\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    ;\n\n    _proto.handlePause = function handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n      this.controlText('Play');\n    }\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n      this.controlText('Replay'); // on the next seek remove the replay button\n\n      this.one(this.player_, 'seeked', this.handleSeeked);\n    };\n\n    return PlayToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file format-time.js\n   * @module format-time\n   */\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  var defaultImplementation = function defaultImplementation(seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    var s = Math.floor(seconds % 60);\n    var m = Math.floor(seconds / 60 % 60);\n    var h = Math.floor(seconds / 3600);\n    var gm = Math.floor(guide / 60 % 60);\n    var gh = Math.floor(guide / 3600); // handle invalid times\n\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    } // Check if we need to show hours\n\n\n    h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  }; // Internal pointer to the current implementation.\n\n\n  var implementation = defaultImplementation;\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n  /**\n   * Resets formatTime to the default implementation.\n   */\n\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @static\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n\n  function formatTime(seconds, guide) {\n    if (guide === void 0) {\n      guide = seconds;\n    }\n\n    return implementation(seconds, guide);\n  }\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n\n  var TimeDisplay =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(TimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n      _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeDisplay.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      var className = this.buildCSSClass();\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: className + \" vjs-time-control vjs-control\",\n        innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n      });\n\n      this.contentEl_ = createEl('span', {\n        className: className + \"-display\"\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      this.updateTextNode_();\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Updates the \"remaining time\" text node with new content using the\n     * contents of the `formattedTime_` property.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateTextNode_ = function updateTextNode_() {\n      if (!this.contentEl_) {\n        return;\n      }\n\n      while (this.contentEl_.firstChild) {\n        this.contentEl_.removeChild(this.contentEl_.firstChild);\n      }\n\n      this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n      this.contentEl_.appendChild(this.textNode_);\n    }\n    /**\n     * Generates a formatted time for this component to use in display.\n     *\n     * @param  {number} time\n     *         A numeric time, in seconds.\n     *\n     * @return {string}\n     *         A formatted time\n     *\n     * @private\n     */\n    ;\n\n    _proto.formatTime_ = function formatTime_(time) {\n      return formatTime(time);\n    }\n    /**\n     * Updates the time display text node if it has what was passed in changed\n     * the formatted time.\n     *\n     * @param {number} time\n     *        The time to update to\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n      var formattedTime = this.formatTime_(time);\n\n      if (formattedTime === this.formattedTime_) {\n        return;\n      }\n\n      this.formattedTime_ = formattedTime;\n      this.requestAnimationFrame(this.updateTextNode_);\n    }\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {};\n\n    return TimeDisplay;\n  }(Component);\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  TimeDisplay.prototype.labelText_ = 'Time';\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n\n  var CurrentTimeDisplay =\n  /*#__PURE__*/\n  function (_TimeDisplay) {\n    _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CurrentTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'ended', _this.handleEnded);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CurrentTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-current-time';\n    }\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      this.updateFormattedTime_(time);\n    }\n    /**\n     * When the player fires ended there should be no time left. Sadly\n     * this is not always the case, lets make it seem like that is the case\n     * for users.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ended` event that caused this to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      if (!this.player_.duration()) {\n        return;\n      }\n\n      this.updateFormattedTime_(this.player_.duration());\n    };\n\n    return CurrentTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n\n  var DurationDisplay =\n  /*#__PURE__*/\n  function (_TimeDisplay) {\n    _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function DurationDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n\n      _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n      _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n\n\n      _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = DurationDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-duration';\n    }\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      var duration = this.player_.duration();\n\n      if (this.duration_ !== duration) {\n        this.duration_ = duration;\n        this.updateFormattedTime_(duration);\n      }\n    };\n\n    return DurationDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DurationDisplay.prototype.labelText_ = 'Duration';\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n\n  var TimeDivider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(TimeDivider, _Component);\n\n    function TimeDivider() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeDivider.prototype;\n\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-control vjs-time-divider',\n        innerHTML: '<div><span>/</span></div>'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n    };\n\n    return TimeDivider;\n  }(Component);\n\n  Component.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n\n  var RemainingTimeDisplay =\n  /*#__PURE__*/\n  function (_TimeDisplay) {\n    _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function RemainingTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n      _this.on(player, 'ended', _this.handleEnded);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = RemainingTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      var el = _TimeDisplay.prototype.createEl.call(this);\n\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n      return el;\n    }\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      } // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n\n\n      if (this.player_.remainingTimeDisplay) {\n        this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n      } else {\n        this.updateFormattedTime_(this.player_.remainingTime());\n      }\n    }\n    /**\n     * When the player fires ended there should be no time left. Sadly\n     * this is not always the case, lets make it seem like that is the case\n     * for users.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ended` event that caused this to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      if (!this.player_.duration()) {\n        return;\n      }\n\n      this.updateFormattedTime_(0);\n    };\n\n    return RemainingTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var LiveDisplay =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(LiveDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LiveDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.updateShowing();\n\n      _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LiveDisplay.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-live-control vjs-control'\n      });\n\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display',\n        innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n      }, {\n        'aria-live': 'off'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateShowing = function updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    return LiveDisplay;\n  }(Component);\n\n  Component.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var SeekToLive =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(SeekToLive, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekToLive(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.updateLiveEdgeStatus();\n\n      if (_this.player_.liveTracker) {\n        _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = SeekToLive.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      var el = _Button.prototype.createEl.call(this, 'button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        innerHTML: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    ;\n\n    _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    ;\n\n    _proto.handleClick = function handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n    /**\n     * Dispose of the element and stop tracking\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n      }\n\n      this.textEl_ = null;\n\n      _Button.prototype.dispose.call(this);\n    };\n\n    return SeekToLive;\n  }(Button);\n\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n\n  var Slider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Slider, _Component);\n\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    function Slider(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n      _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n      _this.vertical(!!_this.options_.vertical);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n\n\n    var _proto = Slider.prototype;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on('mousedown', this.handleMouseDown);\n      this.on('touchstart', this.handleMouseDown);\n      this.on('keydown', this.handleKeyDown);\n      this.on('click', this.handleClick);\n      this.on(this.player_, 'controlsvisible', this.update);\n\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    ;\n\n    _proto.disable = function disable() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      var doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown);\n      this.off('touchstart', this.handleMouseDown);\n      this.off('keydown', this.handleKeyDown);\n      this.off('click', this.handleClick);\n      this.off(this.player_, 'controlsvisible', this.update);\n      this.off(doc, 'mousemove', this.handleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUp);\n      this.off(doc, 'touchmove', this.handleMouseMove);\n      this.off(doc, 'touchend', this.handleMouseUp);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n\n      this.enabled_ = false;\n    }\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1(type, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = assign({\n        tabIndex: 0\n      }, props);\n      attributes = assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'tabIndex': 0\n      }, attributes);\n      return _Component.prototype.createEl.call(this, type, props, attributes);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.bar.el_.ownerDocument;\n\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      } // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUp);\n      this.on(doc, 'touchmove', this.handleMouseMove);\n      this.on(doc, 'touchend', this.handleMouseUp);\n      this.handleMouseMove(event);\n    }\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {}\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp() {\n      var doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUp);\n      this.off(doc, 'touchmove', this.handleMouseMove);\n      this.off(doc, 'touchend', this.handleMouseUp);\n      this.update();\n    }\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    ;\n\n    _proto.update = function update() {\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      if (!this.el_) {\n        return;\n      } // If scrubbing, we could use a cached value to make the handle keep up\n      // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n      // some flash players are slow, so we might want to utilize this later.\n      // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n      var progress = this.getPercent();\n      var bar = this.bar; // If there's no bar...\n\n      if (!bar) {\n        return;\n      } // Protect against no duration and other division issues\n\n\n      if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n        progress = 0;\n      } // Convert to a percentage for setting\n\n\n      var percentage = (progress * 100).toFixed(2) + '%';\n      var style = bar.el().style; // Set the new bar width or height\n\n      if (this.vertical()) {\n        style.height = percentage;\n      } else {\n        style.width = percentage;\n      }\n\n      return progress;\n    }\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    ;\n\n    _proto.calculateDistance = function calculateDistance(event) {\n      var position = getPointerPosition(this.el_, event);\n\n      if (this.vertical()) {\n        return position.y;\n      }\n\n      return position.x;\n    }\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    ;\n\n    _proto.vertical = function vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n\n      this.vertical_ = !!bool;\n\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    };\n\n    return Slider;\n  }(Component);\n\n  Component.registerComponent('Slider', Slider);\n\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n\n  var LoadProgressBar =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(LoadProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LoadProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.partEls_ = [];\n\n      _this.on(player, 'progress', _this.update);\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LoadProgressBar.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-load-progress',\n        innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.partEls_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var liveTracker = this.player_.liveTracker;\n      var buffered = this.player_.buffered();\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      var bufferedEnd = this.player_.bufferedEnd();\n      var children = this.partEls_;\n      var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n      var percentify = function percentify(time, end, rounded) {\n        // no NaN\n        var percent = time / end || 0;\n        percent = (percent >= 1 ? 1 : percent) * 100;\n\n        if (rounded) {\n          percent = percent.toFixed(2);\n        }\n\n        return percent + '%';\n      }; // update the width of the progress bar\n\n\n      this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n      textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        this.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    };\n\n    return LoadProgressBar;\n  }(Component);\n\n  Component.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n\n  var TimeTooltip =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(TimeTooltip, _Component);\n\n    function TimeTooltip() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeTooltip.prototype;\n\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl$$1() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint, content) {\n      var tooltipRect = getBoundingClientRect(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      } // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n\n\n      var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n\n      var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n\n      var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      } // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n      var _this = this;\n\n      // If there is an existing rAF ID, cancel it so we don't over-queue.\n      if (this.rafId_) {\n        this.cancelAnimationFrame(this.rafId_);\n      }\n\n      this.rafId_ = this.requestAnimationFrame(function () {\n        var content;\n\n        var duration = _this.player_.duration();\n\n        if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n          var liveWindow = _this.player_.liveTracker.liveWindow();\n\n          var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n\n        _this.update(seekBarRect, seekBarPoint, content);\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return TimeTooltip;\n  }(Component);\n\n  Component.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var PlayProgressBar =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(PlayProgressBar, _Component);\n\n    function PlayProgressBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = PlayProgressBar.prototype;\n\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var timeTooltip = this.getChild('timeTooltip');\n\n      if (!timeTooltip) {\n        return;\n      }\n\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    };\n\n    return PlayProgressBar;\n  }(Component);\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  }; // Time tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n\n  Component.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var MouseTimeDisplay =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(MouseTimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseTimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseTimeDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var _this2 = this;\n\n      var time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n        _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n      });\n    };\n\n    return MouseTimeDisplay;\n  }(Component);\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  var STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\n  var PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\n  var UPDATE_REFRESH_INTERVAL = 30;\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n\n  var SeekBar =\n  /*#__PURE__*/\n  function (_Slider) {\n    _inheritsLoose(SeekBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.setEventHandlers_();\n\n      return _this;\n    }\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n\n\n    var _proto = SeekBar.prototype;\n\n    _proto.setEventHandlers_ = function setEventHandlers_() {\n      this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, 'timeupdate', this.update);\n      this.on(this.player_, 'ended', this.handleEnded);\n      this.on(this.player_, 'durationchange', this.update);\n\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      } // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n\n\n      this.updateInterval = null;\n      this.on(this.player_, ['playing'], this.enableInterval_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    };\n\n    _proto.toggleVisibility_ = function toggleVisibility_(e) {\n      if (document.hidden) {\n        this.disableInterval_(e);\n      } else {\n        this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n        this.requestAnimationFrame(this.update);\n      }\n    };\n\n    _proto.enableInterval_ = function enableInterval_() {\n      var _this2 = this;\n\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = this.setInterval(function () {\n        _this2.requestAnimationFrame(_this2.update);\n      }, UPDATE_REFRESH_INTERVAL);\n    };\n\n    _proto.disableInterval_ = function disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n        return;\n      }\n\n      this.clearInterval(this.updateInterval);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {number} currentTime\n     *        The currentTime value that should be used for accessibility\n     *\n     * @param {number} percent\n     *        The percentage as a decimal that the bar should be filled from 0-1.\n     *\n     * @private\n     */\n    ;\n\n    _proto.update_ = function update_(currentTime, percent) {\n      var liveTracker = this.player_.liveTracker;\n      var duration = this.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      } // machine readable value of progress bar (percentage complete)\n\n\n      this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n      this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el_), percent);\n      }\n    }\n    /**\n     * Update the seek bar's UI.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    ;\n\n    _proto.update = function update(event) {\n      // if the offsetParent is null, then this element is hidden, in which case\n      // we don't need to update it.\n      if (this.el().offsetParent === null) {\n        return;\n      }\n\n      var percent = _Slider.prototype.update.call(this);\n\n      this.update_(this.getCurrentTime_(), percent);\n      return percent;\n    }\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    ;\n\n    _proto.getCurrentTime_ = function getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    /**\n     * We want the seek bar to be full on ended\n     * no matter what the actual internal values are. so we force it.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      this.update_(this.player_.duration(), 1);\n    }\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      var currentTime = this.getCurrentTime_();\n      var percent;\n      var liveTracker = this.player_.liveTracker;\n\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n\n      return percent >= 1 ? 1 : percent || 0;\n    }\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // Stop event propagation to prevent double fire in progress-control.js\n\n\n      event.stopPropagation();\n      this.player_.scrubbing(true);\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      var newTime;\n      var distance = this.calculateDistance(event);\n      var liveTracker = this.player_.liveTracker;\n\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        var seekableStart = liveTracker.seekableStart();\n        var seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        } // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n\n\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        } // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n\n\n        if (newTime === Infinity) {\n          return;\n        }\n      } // Set new time (tell player to seek to new time)\n\n\n      this.player_.currentTime(newTime);\n    };\n\n    _proto.enable = function enable() {\n      _Slider.prototype.enable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.show();\n    };\n\n    _proto.disable = function disable() {\n      _Slider.prototype.disable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.hide();\n    }\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.player_.scrubbing(false);\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n    }\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n    }\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    ;\n\n    _proto.handleAction = function handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.player_.currentTime(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.player_.currentTime(this.player_.duration());\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n        this.player_.currentTime(this.player_.duration() * gotoFraction);\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Slider.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return SeekBar;\n  }(Slider);\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  }; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n\n  Component.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n\n  var ProgressControl =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ProgressControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ProgressControl(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n      _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = ProgressControl.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n        var seekBarEl = seekBar.el();\n        var seekBarRect = getBoundingClientRect(seekBarEl);\n        var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `SeekBar`. This ensures we stay within it at all times.\n\n        if (seekBarPoint > 1) {\n          seekBarPoint = 1;\n        } else if (seekBarPoint < 0) {\n          seekBarPoint = 0;\n        }\n\n        if (mouseTimeDisplay) {\n          mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n        }\n      }\n    }\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseSeek = function handleMouseSeek(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    ;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.children().forEach(function (child) {\n        return child.disable && child.disable();\n      });\n\n      if (!this.enabled()) {\n        return;\n      }\n\n      this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.handleMouseUp();\n      this.addClass('disabled');\n      this.enabled_ = false;\n    }\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.children().forEach(function (child) {\n        return child.enable && child.enable();\n      });\n\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUp);\n      this.on(doc, 'touchend', this.handleMouseUp);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUp);\n      this.off(doc, 'touchend', this.handleMouseUp);\n    };\n\n    return ProgressControl;\n  }(Component);\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n\n  var FullscreenToggle =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(FullscreenToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function FullscreenToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n      if (document[FullscreenApi.fullscreenEnabled] === false) {\n        _this.disable();\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = FullscreenToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Non-Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    };\n\n    return FullscreenToggle;\n  }(Button);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkVolumeSupport = function checkVolumeSupport(self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeLevel =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(VolumeLevel, _Component);\n\n    function VolumeLevel() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = VolumeLevel.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-level',\n        innerHTML: '<span class=\"vjs-control-text\"></span>'\n      });\n    };\n\n    return VolumeLevel;\n  }(Component);\n\n  Component.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n\n  var VolumeBar =\n  /*#__PURE__*/\n  function (_Slider) {\n    _inheritsLoose(VolumeBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.on('slideractive', _this.updateLastVolume_);\n\n      _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n      player.ready(function () {\n        return _this.updateARIAAttributes();\n      });\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeBar.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n    /**\n     * If the player is muted unmute it.\n     */\n    ;\n\n    _proto.checkMuted = function checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n\n      return this.player_.volume();\n    }\n    /**\n     * Increase volume level for keyboard users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n    /**\n     * Decrease volume level for keyboard users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n      var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    ;\n\n    _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    ;\n\n    _proto.updateLastVolume_ = function updateLastVolume_() {\n      var _this2 = this;\n\n      var volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', function () {\n        if (_this2.player_.volume() === 0) {\n          _this2.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    };\n\n    return VolumeBar;\n  }(Slider);\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  };\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeControl =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(VolumeControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumeControl(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n\n      _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n      _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n      _this.on('mousedown', _this.handleMouseDown);\n\n      _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n        _this.volumeBar.addClass('vjs-slider-active');\n\n        _this.addClass('vjs-slider-active');\n\n        _this.trigger('slideractive');\n      });\n\n      _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n        _this.volumeBar.removeClass('vjs-slider-active');\n\n        _this.removeClass('vjs-slider-active');\n\n        _this.trigger('sliderinactive');\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeControl.prototype;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-horizontal';\n\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-control vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUp);\n      this.on(doc, 'touchend', this.handleMouseUp);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUp);\n      this.off(doc, 'touchend', this.handleMouseUp);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    };\n\n    return VolumeControl;\n  }(Component);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkMuteSupport = function checkMuteSupport(self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n\n  var MuteToggle =\n  /*#__PURE__*/\n  function (_Button) {\n    _inheritsLoose(MuteToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MuteToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n      _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = MuteToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var vol = this.player_.volume();\n      var lastVolume = this.player_.lastVolume_();\n\n      if (vol === 0) {\n        var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateIcon_ = function updateIcon_() {\n      var vol = this.player_.volume();\n      var level = 3; // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      } // TODO improve muted icon classes\n\n\n      for (var i = 0; i < 4; i++) {\n        removeClass(this.el_, \"vjs-vol-\" + i);\n      }\n\n      addClass(this.el_, \"vjs-vol-\" + level);\n    }\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateControlText_ = function updateControlText_() {\n      var soundOff = this.player_.muted() || this.player_.volume() === 0;\n      var text = soundOff ? 'Unmute' : 'Mute';\n\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    };\n\n    return MuteToggle;\n  }(Button);\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n\n  var VolumePanel =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(VolumePanel, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumePanel(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      } // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n\n\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n      _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n      return _this;\n    }\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n\n\n    var _proto = VolumePanel.prototype;\n\n    _proto.sliderActive_ = function sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    ;\n\n    _proto.sliderInactive_ = function sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    ;\n\n    _proto.volumePanelState_ = function volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      } // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n\n\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-panel-horizontal';\n\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-panel vjs-control \" + orientationClass\n      });\n    };\n\n    return VolumePanel;\n  }(Component);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n\n  var Menu =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Menu, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    function Menu(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (options) {\n        _this.menuButton_ = options.menuButton;\n      }\n\n      _this.focusedChild_ = -1;\n\n      _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n      _this.boundHandleBlur_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleBlur);\n      _this.boundHandleTapClick_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTapClick);\n      return _this;\n    }\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n\n\n    var _proto = Menu.prototype;\n\n    _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n      if (!(component instanceof Component)) {\n        return;\n      }\n\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    ;\n\n    _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n      if (!(component instanceof Component)) {\n        return;\n      }\n\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      this.removeEventListenerForItem(component);\n\n      _Component.prototype.removeChild.call(this, component);\n    }\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    ;\n\n    _proto.addItem = function addItem(component) {\n      var childComponent = this.addChild(component);\n\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      var contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n\n      el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    ;\n\n    _proto.handleBlur = function handleBlur(event) {\n      var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n      if (!this.children().some(function (element) {\n        return element.el() === relatedTarget;\n      })) {\n        var btn = this.menuButton_;\n\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    ;\n\n    _proto.handleTapClick = function handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        var childComponents = this.children();\n\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n\n        var foundComponent = childComponents.filter(function (component) {\n          return component.el() === event.target;\n        })[0];\n\n        if (!foundComponent) {\n          return;\n        } // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    ;\n\n    _proto.focus = function focus(item) {\n      if (item === void 0) {\n        item = 0;\n      }\n\n      var children = this.children().slice();\n      var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n      if (haveTitle) {\n        children.shift();\n      }\n\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    };\n\n    return Menu;\n  }(Component);\n\n  Component.registerComponent('Menu', Menu);\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n\n  var MenuButton =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(MenuButton, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function MenuButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Component.call(this, player, options) || this;\n      _this.menuButton_ = new Button(player, options);\n\n      _this.menuButton_.controlText(_this.controlText_);\n\n      _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n      _this.menuButton_.removeClass('vjs-control');\n\n      _this.addChild(_this.menuButton_);\n\n      _this.update();\n\n      _this.enabled_ = true;\n\n      _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n      _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n      _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n      _this.on(_this.menuButton_, 'mouseenter', function () {\n        _this.menu.show();\n      });\n\n      _this.on('keydown', _this.handleSubmenuKeyDown);\n\n      return _this;\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     */\n\n\n    var _proto = MenuButton.prototype;\n\n    _proto.update = function update() {\n      var menu = this.createMenu();\n\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n\n      this.menu = menu;\n      this.addChild(menu);\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player_, {\n        menuButton: this\n      });\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n\n      this.hideThreshold_ = 0; // Add a title list item to the top\n\n      if (this.options_.title) {\n        var titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          innerHTML: toTitleCase(this.options_.title),\n          tabIndex: -1\n        });\n        this.hideThreshold_ += 1;\n        var titleComponent = new Component(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n\n      this.items = this.createItems();\n\n      if (this.items) {\n        // Add menu items to the menu\n        for (var i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.createItems = function createItems() {}\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    ;\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      } // TODO: Fix the CSS so that this isn't necessary\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.menuButton_.el();\n      }\n\n      return this.menuButton_.controlText(text, el);\n    }\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.menuButton_.focus();\n    }\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.menuButton_.blur();\n    }\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    ;\n\n    _proto.pressButton = function pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n\n        this.menu.focus();\n      }\n    }\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    ;\n\n    _proto.unpressButton = function unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    };\n\n    return MenuButton;\n  }(Component);\n\n  Component.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n\n  var TrackButton =\n  /*#__PURE__*/\n  function (_MenuButton) {\n    _inheritsLoose(TrackButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TrackButton(player, options) {\n      var _this;\n\n      var tracks = options.tracks;\n      _this = _MenuButton.call(this, player, options) || this;\n\n      if (_this.items.length <= 1) {\n        _this.hide();\n      }\n\n      if (!tracks) {\n        return _assertThisInitialized(_this);\n      }\n\n      var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n\n      _this.player_.on('ready', updateHandler);\n\n      _this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n      });\n\n      return _this;\n    }\n\n    return TrackButton;\n  }(MenuButton);\n\n  Component.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n    * @typedef MenuKeys\n    * @array\n    */\n  var MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n\n  var MenuItem =\n  /*#__PURE__*/\n  function (_ClickableComponent) {\n    _inheritsLoose(MenuItem, _ClickableComponent);\n\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    function MenuItem(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n      _this.selectable = options.selectable;\n      _this.isSelected_ = options.selected || false;\n      _this.multiSelectable = options.multiSelectable;\n\n      _this.selected(_this.isSelected_);\n\n      if (_this.selectable) {\n        if (_this.multiSelectable) {\n          _this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          _this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        _this.el_.setAttribute('role', 'menuitem');\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = MenuItem.prototype;\n\n    _proto.createEl = function createEl(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n      return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n        className: 'vjs-menu-item',\n        innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n        tabIndex: -1\n      }, props), attrs);\n    }\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (!MenuKeys.some(function (key) {\n        return keycode.isEventKey(event, key);\n      })) {\n        // Pass keydown handling up for unused keys\n        _ClickableComponent.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      this.selected(true);\n    }\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    ;\n\n    _proto.selected = function selected(_selected) {\n      if (this.selectable) {\n        if (_selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    };\n\n    return MenuItem;\n  }(ClickableComponent);\n\n  Component.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n\n  var TextTrackMenuItem =\n  /*#__PURE__*/\n  function (_MenuItem) {\n    _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TextTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n\n      _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n      };\n\n      var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n      };\n\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n      _this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n\n\n      if (tracks.onchange === undefined) {\n        var event;\n\n        _this.on(['tap', 'click'], function () {\n          if (typeof window$1.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window$1.Event('change');\n            } catch (err) {// continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      } // set the default state based on current tracks\n\n\n      _this.handleTracksChange();\n\n      return _this;\n    }\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = TextTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      var referenceTrack = this.track;\n      var tracks = this.player_.textTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      if (!tracks) {\n        return;\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        } // If this text track is the component's track and it is not showing,\n        // set it to showing.\n\n\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          } // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n\n      _MenuItem.prototype.dispose.call(this);\n    };\n\n    return TextTrackMenuItem;\n  }(MenuItem);\n\n  Component.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var OffTextTrackMenuItem =\n  /*#__PURE__*/\n  function (_TextTrackMenuItem) {\n    _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function OffTextTrackMenuItem(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player: player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        default: false,\n        mode: 'disabled'\n      };\n\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      } // MenuItem is selectable\n\n\n      options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n      options.multiSelectable = false;\n      return _TextTrackMenuItem.call(this, player, options) || this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n\n\n    var _proto = OffTextTrackMenuItem.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var shouldBeSelected = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      } // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      var tracks = this.player().textTracks();\n      var allHidden = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    };\n\n    return OffTextTrackMenuItem;\n  }(TextTrackMenuItem);\n\n  Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n\n  var TextTrackButton =\n  /*#__PURE__*/\n  function (_TrackButton) {\n    _inheritsLoose(TextTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function TextTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.textTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n\n\n    var _proto = TextTrackButton.prototype;\n\n    _proto.createItems = function createItems(items, TrackMenuItem) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (TrackMenuItem === void 0) {\n        TrackMenuItem = TextTrackMenuItem;\n      }\n\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      var label;\n\n      if (this.label_) {\n        label = this.label_ + \" off\";\n      } // Add an OFF menu item to turn all tracks off\n\n\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label: label\n      }));\n      this.hideThreshold_ += 1;\n      var tracks = this.player_.textTracks();\n\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          var item = new TrackMenuItem(this.player_, {\n            track: track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n          items.push(item);\n        }\n      }\n\n      return items;\n    };\n\n    return TextTrackButton;\n  }(TrackButton);\n\n  Component.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n\n  var ChaptersTrackMenuItem =\n  /*#__PURE__*/\n  function (_MenuItem) {\n    _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ChaptersTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var cue = options.cue;\n      var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n      _this.cue = cue;\n      track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n      return _this;\n    }\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = ChaptersTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player_.currentTime(this.cue.startTime);\n      this.update(this.cue.startTime);\n    }\n    /**\n     * Update chapter menu item\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `cuechange` event that caused this function to run.\n     *\n     * @listens TextTrack#cuechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var cue = this.cue;\n      var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n      this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n    };\n\n    return ChaptersTrackMenuItem;\n  }(MenuItem);\n\n  Component.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n\n  var ChaptersButton =\n  /*#__PURE__*/\n  function (_TextTrackButton) {\n    _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    function ChaptersButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = ChaptersButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.update = function update(event) {\n      if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n        this.setTrack(this.findChaptersTrack());\n      }\n\n      _TextTrackButton.prototype.update.call(this);\n    }\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    ;\n\n    _proto.setTrack = function setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      } // here this.track_ refers to the old track instance\n\n\n      if (this.track_) {\n        var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n\n        this.track_ = null;\n      }\n\n      this.track_ = track; // here this.track_ refers to the new track instance\n\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n\n        var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (_remoteTextTrackEl) {\n          _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n      }\n    }\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    ;\n\n    _proto.findChaptersTrack = function findChaptersTrack() {\n      var tracks = this.player_.textTracks() || [];\n\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        var track = tracks[i];\n\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    ;\n\n    _proto.getMenuCaption = function getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n\n      return this.localize(toTitleCase(this.kind_));\n    }\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return _TextTrackButton.prototype.createMenu.call(this);\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!this.track_) {\n        return items;\n      }\n\n      var cues = this.track_.cues;\n\n      if (!cues) {\n        return items;\n      }\n\n      for (var i = 0, l = cues.length; i < l; i++) {\n        var cue = cues[i];\n        var mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue: cue\n        });\n        items.push(mi);\n      }\n\n      return items;\n    };\n\n    return ChaptersButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  ChaptersButton.prototype.kind_ = 'chapters';\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n\n  var DescriptionsButton =\n  /*#__PURE__*/\n  function (_TextTrackButton) {\n    _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function DescriptionsButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n      var tracks = player.textTracks();\n      var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n\n\n    var _proto = DescriptionsButton.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var disabled = false; // Check whether a track of a different kind is showing\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      } // If another track is showing, disable this menu button\n\n\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return DescriptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubtitlesButton =\n  /*#__PURE__*/\n  function (_TextTrackButton) {\n    _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function SubtitlesButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubtitlesButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return SubtitlesButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var CaptionSettingsMenuItem =\n  /*#__PURE__*/\n  function (_TextTrackMenuItem) {\n    _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CaptionSettingsMenuItem(player, options) {\n      var _this;\n\n      options.track = {\n        player: player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        default: false,\n        mode: 'disabled'\n      }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n      _this.addClass('vjs-texttrack-settings');\n\n      _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n      return _this;\n    }\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = CaptionSettingsMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    };\n\n    return CaptionSettingsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n\n  var CaptionsButton =\n  /*#__PURE__*/\n  function (_TextTrackButton) {\n    _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function CaptionsButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CaptionsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      return _TextTrackButton.prototype.createItems.call(this, items);\n    };\n\n    return CaptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CaptionsButton.prototype.kind_ = 'captions';\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var SubsCapsMenuItem =\n  /*#__PURE__*/\n  function (_TextTrackMenuItem) {\n    _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n    function SubsCapsMenuItem() {\n      return _TextTrackMenuItem.apply(this, arguments) || this;\n    }\n\n    var _proto = SubsCapsMenuItem.prototype;\n\n    _proto.createEl = function createEl(type, props, attrs) {\n      var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n      if (this.options_.track.kind === 'captions') {\n        innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n      }\n\n      innerHTML += '</span>';\n\n      var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n        innerHTML: innerHTML\n      }, props), attrs);\n\n      return el;\n    };\n\n    return SubsCapsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubsCapsButton =\n  /*#__PURE__*/\n  function (_TextTrackButton) {\n    _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n    function SubsCapsButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n\n      _this.label_ = 'subtitles';\n\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n        _this.label_ = 'captions';\n      }\n\n      _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubsCapsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n      return items;\n    };\n\n    return SubsCapsButton;\n  }(TextTrackButton);\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n\n\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n\n  var AudioTrackMenuItem =\n  /*#__PURE__*/\n  function (_MenuItem) {\n    _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function AudioTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n\n      _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n      };\n\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n\n    var _proto = AudioTrackMenuItem.prototype;\n\n    _proto.createEl = function createEl(type, props, attrs) {\n      var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n      if (this.options_.track.kind === 'main-desc') {\n        innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n      }\n\n      innerHTML += '</span>';\n\n      var el = _MenuItem.prototype.createEl.call(this, type, assign({\n        innerHTML: innerHTML\n      }, props), attrs);\n\n      return el;\n    }\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var tracks = this.player_.audioTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.enabled = track === this.track;\n      }\n    }\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    };\n\n    return AudioTrackMenuItem;\n  }(MenuItem);\n\n  Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n\n  var AudioTrackButton =\n  /*#__PURE__*/\n  function (_TrackButton) {\n    _inheritsLoose(AudioTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function AudioTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.audioTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = AudioTrackButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems(items) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n\n      return items;\n    };\n\n    return AudioTrackButton;\n  }(TrackButton);\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n\n  var PlaybackRateMenuItem =\n  /*#__PURE__*/\n  function (_MenuItem) {\n    _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuItem(player, options) {\n      var _this;\n\n      var label = options.rate;\n      var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n      options.label = label;\n      options.selected = rate === 1;\n      options.selectable = true;\n      options.multiSelectable = false;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.label = label;\n      _this.rate = rate;\n\n      _this.on(player, 'ratechange', _this.update);\n\n      return _this;\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = PlaybackRateMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player().playbackRate(this.rate);\n    }\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    };\n\n    return PlaybackRateMenuItem;\n  }(MenuItem);\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n\n  var PlaybackRateMenuButton =\n  /*#__PURE__*/\n  function (_MenuButton) {\n    _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuButton(player, options) {\n      var _this;\n\n      _this = _MenuButton.call(this, player, options) || this;\n\n      _this.updateVisibility();\n\n      _this.updateLabel();\n\n      _this.on(player, 'loadstart', _this.updateVisibility);\n\n      _this.on(player, 'ratechange', _this.updateLabel);\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlaybackRateMenuButton.prototype;\n\n    _proto.createEl = function createEl$$1() {\n      var el = _MenuButton.prototype.createEl.call(this);\n\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        innerHTML: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.labelEl_ = null;\n\n      _MenuButton.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create the playback rate menu\n     *\n     * @return {Menu}\n     *         Menu object populated with {@link PlaybackRateMenuItem}s\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player());\n      var rates = this.playbackRates();\n\n      if (rates) {\n        for (var i = rates.length - 1; i >= 0; i--) {\n          menu.addChild(new PlaybackRateMenuItem(this.player(), {\n            rate: rates[i] + 'x'\n          }));\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Updates ARIA accessibility attributes\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes() {\n      // Current playback rate\n      this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // select next rate option\n      var currentRate = this.player().playbackRate();\n      var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n      var newRate = rates[0];\n\n      for (var i = 0; i < rates.length; i++) {\n        if (rates[i] > currentRate) {\n          newRate = rates[i];\n          break;\n        }\n      }\n\n      this.player().playbackRate(newRate);\n    }\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates() {\n      return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n    }\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    ;\n\n    _proto.playbackRateSupported = function playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.updateVisibility = function updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.updateLabel = function updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n      }\n    };\n\n    return PlaybackRateMenuButton;\n  }(MenuButton);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n\n  var Spacer =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Spacer, _Component);\n\n    function Spacer() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Spacer.prototype;\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass()\n      });\n    };\n\n    return Spacer;\n  }(Component);\n\n  Component.registerComponent('Spacer', Spacer);\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n\n  var CustomControlSpacer =\n  /*#__PURE__*/\n  function (_Spacer) {\n    _inheritsLoose(CustomControlSpacer, _Spacer);\n\n    function CustomControlSpacer() {\n      return _Spacer.apply(this, arguments) || this;\n    }\n\n    var _proto = CustomControlSpacer.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var el = _Spacer.prototype.createEl.call(this, {\n        className: this.buildCSSClass()\n      }); // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n\n\n      el.innerHTML = \"\\xA0\";\n      return el;\n    };\n\n    return CustomControlSpacer;\n  }(Spacer);\n\n  Component.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n\n  var ControlBar =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ControlBar, _Component);\n\n    function ControlBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ControlBar.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    };\n\n    return ControlBar;\n  }(Component);\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n  Component.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n\n  var ErrorDisplay =\n  /*#__PURE__*/\n  function (_ModalDialog) {\n    _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ErrorDisplay(player, options) {\n      var _this;\n\n      _this = _ModalDialog.call(this, player, options) || this;\n\n      _this.on(player, 'error', _this.open);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n\n\n    var _proto = ErrorDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    ;\n\n    _proto.content = function content() {\n      var error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    };\n\n    return ErrorDisplay;\n  }(ModalDialog);\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n\n\n  ErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  var LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n  var COLOR_BLACK = ['#000', 'Black'];\n  var COLOR_BLUE = ['#00F', 'Blue'];\n  var COLOR_CYAN = ['#0FF', 'Cyan'];\n  var COLOR_GREEN = ['#0F0', 'Green'];\n  var COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  var COLOR_RED = ['#F00', 'Red'];\n  var COLOR_WHITE = ['#FFF', 'White'];\n  var COLOR_YELLOW = ['#FF0', 'Yellow'];\n  var OPACITY_OPAQUE = ['1', 'Opaque'];\n  var OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  var OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n\n  var selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      default: 2,\n      parser: function parser(v) {\n        return v === '1.00' ? null : Number(v);\n      }\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n\n  function getSelectedOptionValue(el, parser) {\n    var value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n\n\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n\n    for (var i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n\n\n  var TextTrackSettings =\n  /*#__PURE__*/\n  function (_ModalDialog) {\n    _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    function TextTrackSettings(player, options) {\n      var _this;\n\n      options.temporary = false;\n      _this = _ModalDialog.call(this, player, options) || this;\n      _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n      _this.fill();\n\n      _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n      _this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: _this.localize('End of dialog window.')\n      });\n\n      _this.el().appendChild(_this.endDialog);\n\n      _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n      if (options.persistTextTrackSettings === undefined) {\n        _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n      }\n\n      _this.on(_this.$('.vjs-done-button'), 'click', function () {\n        _this.saveSettings();\n\n        _this.close();\n      });\n\n      _this.on(_this.$('.vjs-default-button'), 'click', function () {\n        _this.setDefaults();\n\n        _this.updateDisplay();\n      });\n\n      each(selectConfigs, function (config) {\n        _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n      });\n\n      if (_this.options_.persistTextTrackSettings) {\n        _this.restoreSettings();\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrackSettings.prototype;\n\n    _proto.dispose = function dispose() {\n      this.endDialog = null;\n\n      _ModalDialog.prototype.dispose.call(this);\n    }\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n      var _this2 = this;\n\n      if (legendId === void 0) {\n        legendId = '';\n      }\n\n      if (type === void 0) {\n        type = 'label';\n      }\n\n      var config = selectConfigs[key];\n      var id = config.id.replace('%s', this.id_);\n      var selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n        var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFgColor_ = function createElFgColor_() {\n      var legendId = \"captions-text-legend-\" + this.id_;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElBgColor_ = function createElBgColor_() {\n      var legendId = \"captions-background-\" + this.id_;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElWinColor_ = function createElWinColor_() {\n      var legendId = \"captions-window-\" + this.id_;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElColors_ = function createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFont_ = function createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElControls_ = function createElControls_() {\n      var defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n      });\n    };\n\n    _proto.content = function content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    };\n\n    _proto.label = function label() {\n      return this.localize('Caption Settings Dialog');\n    };\n\n    _proto.description = function description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    };\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n    }\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.getValues = function getValues() {\n      var _this3 = this;\n\n      return reduce(selectConfigs, function (accum, config, key) {\n        var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n\n        return accum;\n      }, {});\n    }\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.setValues = function setValues(values) {\n      var _this4 = this;\n\n      each(selectConfigs, function (config, key) {\n        setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n      });\n    }\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    ;\n\n    _proto.setDefaults = function setDefaults() {\n      var _this5 = this;\n\n      each(selectConfigs, function (config) {\n        var index = config.hasOwnProperty('default') ? config.default : 0;\n        _this5.$(config.selector).selectedIndex = index;\n      });\n    }\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    ;\n\n    _proto.restoreSettings = function restoreSettings() {\n      var values;\n\n      try {\n        values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n      } catch (err) {\n        log.warn(err);\n      }\n\n      if (values) {\n        this.setValues(values);\n      }\n    }\n    /**\n     * Save text track settings to localStorage\n     */\n    ;\n\n    _proto.saveSettings = function saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n\n      var values = this.getValues();\n\n      try {\n        if (Object.keys(values).length) {\n          window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n        } else {\n          window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n        }\n      } catch (err) {\n        log.warn(err);\n      }\n    }\n    /**\n     * Update display of text track settings\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      var cb = this.player_.controlBar;\n      var subsCapsBtn = cb && cb.subsCapsButton;\n      var ccBtn = cb && cb.captionsButton;\n\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    };\n\n    return TextTrackSettings;\n  }(ModalDialog);\n\n  Component.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n\n  var ResizeManager =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ResizeManager, _Component);\n\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    function ResizeManager(player, options) {\n      var _this;\n\n      var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      } // Only create an element when ResizeObserver isn't available\n\n\n      var options_ = mergeOptions({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n      _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n      _this.loadListener_ = null;\n      _this.resizeObserver_ = null;\n      _this.debouncedHandler_ = debounce(function () {\n        _this.resizeHandler();\n      }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n        _this.resizeObserver_.observe(player.el());\n      } else {\n        _this.loadListener_ = function () {\n          if (!_this.el_ || !_this.el_.contentWindow) {\n            return;\n          }\n\n          var debouncedHandler_ = _this.debouncedHandler_;\n\n          var unloadListener_ = _this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          }; // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n\n\n          on(_this.el_.contentWindow, 'unload', unloadListener_);\n          on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n\n        _this.one('load', _this.loadListener_);\n      }\n\n      return _this;\n    }\n\n    var _proto = ResizeManager.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    ;\n\n    _proto.resizeHandler = function resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n\n      this.player_.trigger('playerresize');\n    };\n\n    _proto.dispose = function dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n\n        this.resizeObserver_.disconnect();\n      }\n\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return ResizeManager;\n  }(Component);\n\n  Component.registerComponent('ResizeManager', ResizeManager);\n\n  /* track when we are at the live edge, and other helpers for live playback */\n\n  var LiveTracker =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(LiveTracker, _Component);\n\n    function LiveTracker(player, options) {\n      var _this;\n\n      // LiveTracker does not need an element\n      var options_ = mergeOptions({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n\n      _this.reset_();\n\n      _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n      // also, tracking when the document is hidden can\n      // cause the CPU to spike and eventually crash the page on IE11.\n\n\n      if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n        _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n      }\n\n      return _this;\n    }\n\n    var _proto = LiveTracker.prototype;\n\n    _proto.handleVisibilityChange = function handleVisibilityChange() {\n      if (this.player_.duration() !== Infinity) {\n        return;\n      }\n\n      if (document.hidden) {\n        this.stopTracking();\n      } else {\n        this.startTracking();\n      }\n    };\n\n    _proto.isBehind_ = function isBehind_() {\n      // don't report that we are behind until a timeupdate has been seen\n      if (!this.timeupdateSeen_) {\n        return false;\n      }\n\n      var liveCurrentTime = this.liveCurrentTime();\n      var currentTime = this.player_.currentTime();\n      var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n      // that a player can be, but still be considered live.\n      // we add 0.07 because the live tracking happens every 30ms\n      // and we want some wiggle room for short segment live playback\n\n      var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n      // can be Infinity, so we handle that case.\n\n      return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n    } // all the functionality for tracking when seek end changes\n    // and for tracking how far past seek end we should be\n    ;\n\n    _proto.trackLive_ = function trackLive_() {\n      this.pastSeekEnd_ = this.pastSeekEnd_;\n      var seekable = this.player_.seekable(); // skip undefined seekable\n\n      if (!seekable || !seekable.length) {\n        return;\n      }\n\n      var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n      // once we detect that seekable has changed we check the new seek\n      // end against current time, with a fudge value of half a second.\n\n      if (newSeekEnd !== this.lastSeekEnd_) {\n        if (this.lastSeekEnd_) {\n          this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n        }\n\n        this.pastSeekEnd_ = 0;\n        this.lastSeekEnd_ = newSeekEnd;\n        this.trigger('seekableendchange');\n      }\n\n      this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n      if (this.isBehind_() !== this.behindLiveEdge()) {\n        this.behindLiveEdge_ = this.isBehind_();\n        this.trigger('liveedgechange');\n      }\n    }\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    ;\n\n    _proto.handleDurationchange = function handleDurationchange() {\n      if (this.player_.duration() === Infinity) {\n        this.startTracking();\n      } else {\n        this.stopTracking();\n      }\n    }\n    /**\n     * start tracking live playback\n     */\n    ;\n\n    _proto.startTracking = function startTracking() {\n      var _this2 = this;\n\n      if (this.isTracking()) {\n        return;\n      }\n\n      this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n      this.trackLive_();\n      this.on(this.player_, 'play', this.trackLive_);\n      this.on(this.player_, 'pause', this.trackLive_);\n      this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n      // before a video starts to play\n\n      if (!this.timeupdateSeen_) {\n        this.handleTimeupdate = function () {\n          _this2.timeupdateSeen_ = true;\n          _this2.handleTimeupdate = null;\n        };\n\n        this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n      }\n    };\n\n    _proto.handlePlay = function handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n    }\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    ;\n\n    _proto.reset_ = function reset_() {\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = null;\n      this.behindLiveEdge_ = null;\n      this.timeupdateSeen_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.seekableIncrement_ = 12;\n      this.off(this.player_, 'play', this.trackLive_);\n      this.off(this.player_, 'pause', this.trackLive_);\n      this.off(this.player_, 'play', this.handlePlay);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n      if (this.handleTimeupdate) {\n        this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n        this.handleTimeupdate = null;\n      }\n    }\n    /**\n     * stop tracking live playback\n     */\n    ;\n\n    _proto.stopTracking = function stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n\n      this.reset_();\n    }\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     */\n    ;\n\n    _proto.seekableEnd = function seekableEnd() {\n      var seekable = this.player_.seekable();\n      var seekableEnds = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      } // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n\n\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     */\n    ;\n\n    _proto.seekableStart = function seekableStart() {\n      var seekable = this.player_.seekable();\n      var seekableStarts = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      } // grab the first seekable start after sorting, or if there are none\n      // default to 0\n\n\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n    /**\n     * Get the live time window\n     */\n    ;\n\n    _proto.liveWindow = function liveWindow() {\n      var liveCurrentTime = this.liveCurrentTime();\n\n      if (liveCurrentTime === Infinity) {\n        return Infinity;\n      }\n\n      return liveCurrentTime - this.seekableStart();\n    }\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     */\n    ;\n\n    _proto.isLive = function isLive() {\n      return this.isTracking();\n    }\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     */\n    ;\n\n    _proto.atLiveEdge = function atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n    /**\n     * get what we expect the live current time to be\n     */\n    ;\n\n    _proto.liveCurrentTime = function liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n    /**\n     * Returns how far past seek end we expect current time to be\n     */\n    ;\n\n    _proto.pastSeekEnd = function pastSeekEnd() {\n      return this.pastSeekEnd_;\n    }\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     */\n    ;\n\n    _proto.behindLiveEdge = function behindLiveEdge() {\n      return this.behindLiveEdge_;\n    };\n\n    _proto.isTracking = function isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    ;\n\n    _proto.seekToLiveEdge = function seekToLiveEdge() {\n      if (this.atLiveEdge()) {\n        return;\n      }\n\n      this.player_.currentTime(this.liveCurrentTime());\n\n      if (this.player_.paused()) {\n        this.player_.play();\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.stopTracking();\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return LiveTracker;\n  }(Component);\n\n  Component.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n\n  var sourcesetLoad = function sourcesetLoad(tech) {\n    var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n\n\n    var sources = tech.$$('source');\n    var srcUrls = [];\n    var src = ''; // if there are no sources, do not fire sourceset\n\n    if (!sources.length) {\n      return false;\n    } // only count valid/non-duplicate source elements\n\n\n    for (var i = 0; i < sources.length; i++) {\n      var url = sources[i].src;\n\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    } // there were no valid sources\n\n\n    if (!srcUrls.length) {\n      return false;\n    } // there is only one valid source element url\n    // use that\n\n\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n\n    tech.triggerSourceset(src);\n    return true;\n  };\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n      dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n      var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      } // remove content\n\n\n      this.innerText = ''; // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n\n      window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n      return this.innerHTML;\n    }\n  });\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n\n  var getDescriptor = function getDescriptor(priority, prop) {\n    var descriptor = {};\n\n    for (var i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n\n  var getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n    return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n  };\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n\n\n  var firstSourceWatch = function firstSourceWatch(tech) {\n    var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n    if (el.resetSourceWatch_) {\n      return;\n    }\n\n    var old = {};\n    var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n    var appendWrapper = function appendWrapper(appendFn) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var retval = appendFn.apply(el, args);\n        sourcesetLoad(tech);\n        return retval;\n      };\n    };\n\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n      if (!el[k]) {\n        return;\n      } // store the old function\n\n\n      old[k] = el[k]; // call the old function with a sourceset if a source\n      // was loaded\n\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n\n    el.resetSourceWatch_ = function () {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(function (k) {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    }; // on the first sourceset, we need to revert our changes\n\n\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window$1.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n\n  var getSrcDescriptor = function getSrcDescriptor(tech) {\n    return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n  };\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n\n\n  var setupSourceset = function setupSourceset(tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n\n    var el = tech.el(); // make sure sourceset isn't setup twice.\n\n    if (el.resetSourceset_) {\n      return;\n    }\n\n    var srcDescriptor = getSrcDescriptor(tech);\n    var oldSetAttribute = el.setAttribute;\n    var oldLoad = el.load;\n    Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n      set: function set(v) {\n        var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n\n      return retval;\n    };\n\n    el.load = function () {\n      var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n\n      return retval;\n    };\n\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n\n    el.resetSourceset_ = function () {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  function _templateObject$1() {\n    var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n    _templateObject$1 = function _templateObject() {\n      return data;\n    };\n\n    return data;\n  }\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n\n  var Html5 =\n  /*#__PURE__*/\n  function (_Tech) {\n    _inheritsLoose(Html5, _Tech);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Html5(options, ready) {\n      var _this;\n\n      _this = _Tech.call(this, options, ready) || this;\n      var source = options.source;\n      var crossoriginTracks = false; // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n\n      if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        _this.setSource(source);\n      } else {\n        _this.handleLateInit_(_this.el_);\n      } // setup sourceset after late sourceset/init\n\n\n      if (options.enableSourceset) {\n        _this.setupSourcesetHandling_();\n      }\n\n      if (_this.el_.hasChildNodes()) {\n        var nodes = _this.el_.childNodes;\n        var nodesLength = nodes.length;\n        var removeNodes = [];\n\n        while (nodesLength--) {\n          var node = nodes[nodesLength];\n          var nodeName = node.nodeName.toLowerCase();\n\n          if (nodeName === 'track') {\n            if (!_this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              _this.remoteTextTrackEls().addTrackElement_(node);\n\n              _this.remoteTextTracks().addTrack(node.track);\n\n              _this.textTracks().addTrack(node.track);\n\n              if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < removeNodes.length; i++) {\n          _this.el_.removeChild(removeNodes[i]);\n        }\n      }\n\n      _this.proxyNativeTracks_();\n\n      if (_this.featuresNativeTextTracks && crossoriginTracks) {\n        log.warn(tsml(_templateObject$1()));\n      } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n      _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n\n\n      if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n        _this.setControls(true);\n      } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n\n\n      _this.proxyWebkitFullscreen_();\n\n      _this.triggerReady();\n\n      return _this;\n    }\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n\n\n    var _proto = Html5.prototype;\n\n    _proto.dispose = function dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null; // tech will handle clearing of the emulated track list\n\n      _Tech.prototype.dispose.call(this);\n    }\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    ;\n\n    _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    ;\n\n    _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n      var textTracks = this.textTracks();\n      var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n      var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n        metadataTracksPreFullscreenState = [];\n\n        for (var i = 0; i < textTracks.length; i++) {\n          var track = textTracks[i];\n\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track: track,\n              storedMode: track.mode\n            });\n          }\n        }\n      }; // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n\n\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', function () {\n        return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      });\n\n      var restoreTrackMode = function restoreTrackMode() {\n        for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          var storedTrack = metadataTracksPreFullscreenState[i];\n\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        } // we only want this handler to be executed on the first 'change' event\n\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      }; // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n\n\n      this.on('webkitbeginfullscreen', function () {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      }); // start updating the snapshot again after leaving fullscreen\n\n      this.on('webkitendfullscreen', function () {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    ;\n\n    _proto.overrideNative_ = function overrideNative_(type, override) {\n      var _this2 = this;\n\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n        return;\n      }\n\n      var lowerCaseType = type.toLowerCase();\n\n      if (this[lowerCaseType + \"TracksListeners_\"]) {\n        Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n          var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n          elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n        });\n      }\n\n      this[\"featuresNative\" + type + \"Tracks\"] = !override;\n      this[lowerCaseType + \"TracksListeners_\"] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n      var _this3 = this;\n\n      var props = NORMAL[name];\n      var elTracks = this.el()[props.getterName];\n      var techTracks = this[props.getterName]();\n\n      if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      }); // Remove (native) tracks that are not used anymore\n\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    }\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n      var _this4 = this;\n\n      NORMAL.names.forEach(function (name) {\n        _this4.proxyNativeTracksForType_(name);\n      });\n    }\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          var clone = el.cloneNode(true);\n\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video'); // determine if native controls should be used\n\n          var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          var attributes = mergeOptions({}, tagAttributes);\n\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n\n          setAttributes(el, assign(attributes, {\n            id: this.options_.techId,\n            class: 'vjs-tech'\n          }));\n        }\n\n        el.playerId = this.options_.playerId;\n      }\n\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      } // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n\n\n      var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n      for (var i = 0; i < settingsAttrs.length; i++) {\n        var attr = settingsAttrs[i];\n        var value = this.options_[attr];\n\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n\n          el[attr] = value;\n        }\n      }\n\n      return el;\n    }\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    ;\n\n    _proto.handleLateInit_ = function handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        this.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      } // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n\n\n      var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n      eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      } // We still need to give the player time to add event listeners\n\n\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(seconds) {\n      try {\n        this.el_.currentTime = seconds;\n      } catch (e) {\n        log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    ;\n\n    _proto.duration = function duration() {\n      var _this5 = this;\n\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        var checkProgress = function checkProgress() {\n          if (_this5.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (_this5.el_.duration === Infinity) {\n              _this5.trigger('durationchange');\n            }\n\n            _this5.off('timeupdate', checkProgress);\n          }\n        };\n\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n\n      return this.el_.duration || NaN;\n    }\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    ;\n\n    _proto.width = function width() {\n      return this.el_.offsetWidth;\n    }\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    ;\n\n    _proto.height = function height() {\n      return this.el_.offsetHeight;\n    }\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    ;\n\n    _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n      var _this6 = this;\n\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n\n      var endFn = function endFn() {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        });\n      };\n\n      var beginFn = function beginFn() {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true\n          });\n        }\n      };\n\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', function () {\n        _this6.off('webkitbeginfullscreen', beginFn);\n\n        _this6.off('webkitendfullscreen', endFn);\n      });\n    }\n    /**\n     * Check if fullscreen is supported on the current playback device.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      if (typeof this.el_.webkitEnterFullScreen === 'function') {\n        var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n        if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    ;\n\n    _proto.enterFullScreen = function enterFullScreen() {\n      var video = this.el_;\n\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n\n        this.setTimeout(function () {\n          video.pause();\n          video.webkitEnterFullScreen();\n        }, 0);\n      } else {\n        video.webkitEnterFullScreen();\n      }\n    }\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    ;\n\n    _proto.exitFullScreen = function exitFullScreen() {\n      this.el_.webkitExitFullScreen();\n    }\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    ;\n\n    _proto.src = function src(_src) {\n      if (_src === undefined) {\n        return this.el_.src;\n      } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n      this.setSrc(_src);\n    }\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n\n      return this.el_.currentSrc;\n    }\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    ;\n\n    _proto.setControls = function setControls(val) {\n      this.el_.controls = !!val;\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n      }\n\n      return this.el_.addTextTrack(kind, label, language);\n    }\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.createRemoteTextTrack.call(this, options);\n      }\n\n      var htmlTrackElement = document.createElement('track');\n\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n\n      if (options.default) {\n        htmlTrackElement.default = options.default;\n      }\n\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     * automatically removed from the video element whenever the source changes\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     * to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n      if (this.featuresNativeTextTracks) {\n        var tracks = this.$$('track');\n        var i = tracks.length;\n\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n\n      var videoPlaybackQuality = {};\n\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n\n      if (window$1.performance && typeof window$1.performance.now === 'function') {\n        videoPlaybackQuality.creationTime = window$1.performance.now();\n      } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n        videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n      }\n\n      return videoPlaybackQuality;\n    };\n\n    return Html5;\n  }(Tech);\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n\n  if (isReal()) {\n    /**\n     * Element for testing browser HTML5 media capabilities\n     *\n     * @type {Element}\n     * @constant\n     * @private\n     */\n    Html5.TEST_VID = document.createElement('video');\n    var track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    Html5.TEST_VID.appendChild(track);\n  }\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n\n\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      var volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      return volume !== Html5.TEST_VID.volume;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n\n\n  Html5.canMuteVolume = function () {\n    try {\n      var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n\n      Html5.TEST_VID.muted = !muted;\n\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    } // IE will error if Windows Media Player not installed #3315\n\n\n    try {\n      var playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n\n\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      var noop = function noop() {};\n\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n\n\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n\n\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n\n  Html5.prototype.featuresVolumeControl = Html5.canControlVolume();\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  Html5.prototype.featuresMuteControl = Html5.canMuteVolume();\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  Html5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresFullscreenResize = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresProgressEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n\n  Html5.prototype.featuresTimeupdateEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n\n  Html5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n\n  Html5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n\n  Html5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\n  var canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n  var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n  Html5.patchCanPlayType = function () {\n    // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n    // Firefox and Chrome report correctly\n    if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n      Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n        if (type && mpegurlRE.test(type)) {\n          return 'maybe';\n        }\n\n        return canPlayType.call(this, type);\n      };\n    }\n  };\n\n  Html5.unpatchCanPlayType = function () {\n    var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n    return r;\n  }; // by default, patch the media element\n\n\n  Html5.patchCanPlayType();\n\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    } // remove any child track or source nodes to prevent their loading\n\n\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    } // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n\n\n    el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// not supported\n        }\n      })();\n    }\n  };\n\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    var sources = el.querySelectorAll('source');\n    var i = sources.length;\n\n    while (i--) {\n      el.removeChild(sources[i]);\n    } // remove any src reference.\n    // not setting `src=''` because that throws an error\n\n\n    el.removeAttribute('src');\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// satisfy linter\n        }\n      })();\n    }\n  };\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  }); // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on intial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n      this.el_[prop] = v;\n\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  }); // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n  // readyState, videoWidth, videoHeight\n\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  }); // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  }); // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n\n  Html5.nativeSourceHandler = {};\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n\n\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      var ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n    }\n\n    return '';\n  };\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n\n\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n\n\n  Html5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  function _templateObject$2() {\n    var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n    _templateObject$2 = function _templateObject() {\n      return data;\n    };\n\n    return data;\n  }\n  // on the player when they happen\n\n  var TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange']; // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n\n  var TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  var BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  var BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n\n  BREAKPOINT_ORDER.forEach(function (k) {\n    var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n    BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n  });\n  var DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n\n  var Player =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Player, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    function Player(tag, options, ready) {\n      var _this;\n\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n\n      options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n\n      options.initChildren = false; // Same with creating the element\n\n      options.createEl = false; // don't auto mixin the evented mixin\n\n      options.evented = false; // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n\n      options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n      if (!options.language) {\n        if (typeof tag.closest === 'function') {\n          var closest = tag.closest('[lang]');\n\n          if (closest && closest.getAttribute) {\n            options.language = closest.getAttribute('lang');\n          }\n        } else {\n          var element = tag;\n\n          while (element && element.nodeType === 1) {\n            if (getAttributes(element).hasOwnProperty('lang')) {\n              options.language = element.getAttribute('lang');\n              break;\n            }\n\n            element = element.parentNode;\n          }\n        }\n      } // Run base component initializing with new options\n\n\n      _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n      _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.documentFullscreenChange_);\n      _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.fullWindowOnEscKey); // create logger\n\n      _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n      _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n\n      _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      _this.isReady_ = false; // Init state hasStarted_\n\n      _this.hasStarted_ = false; // Init state userActive_\n\n      _this.userActive_ = false; // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n\n      if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      } // Store the original tag used to set options\n\n\n      _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n      _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n      _this.language(_this.options_.language); // Update Supported Languages\n\n\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n          languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n        });\n        _this.languages_ = languagesToLower;\n      } else {\n        _this.languages_ = Player.prototype.options_.languages;\n      }\n\n      _this.resetCache_(); // Set poster\n\n\n      _this.poster_ = options.poster || ''; // Set controls\n\n      _this.controls_ = !!options.controls; // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      _this.changingSrc_ = false;\n      _this.playCallbacks_ = [];\n      _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n      if (tag.hasAttribute('autoplay')) {\n        _this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        _this.autoplay(_this.options_.autoplay);\n      } // check plugins\n\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name$$1) {\n          if (typeof _this[name$$1] !== 'function') {\n            throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n          }\n        });\n      }\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n\n\n      _this.scrubbing_ = false;\n      _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n      evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n        eventBusKey: 'el_'\n      });\n\n      if (_this.fluid_) {\n        _this.on('playerreset', _this.updateStyleEl_);\n      } // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n\n\n      var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name$$1) {\n          _this[name$$1](options.plugins[name$$1]);\n        });\n      }\n\n      _this.options_.playerOptions = playerOptionsCopy;\n      _this.middleware_ = [];\n\n      _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n      _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n\n\n      if (_this.controls()) {\n        _this.addClass('vjs-controls-enabled');\n      } else {\n        _this.addClass('vjs-controls-disabled');\n      } // Set ARIA label and region role depending on player type\n\n\n      _this.el_.setAttribute('role', 'region');\n\n      if (_this.isAudio()) {\n        _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n      } else {\n        _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n      }\n\n      if (_this.isAudio()) {\n        _this.addClass('vjs-audio');\n      }\n\n      if (_this.flexNotSupported_()) {\n        _this.addClass('vjs-no-flex');\n      } // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n\n\n      if (TOUCH_ENABLED) {\n        _this.addClass('vjs-touch-enabled');\n      } // iOS Safari has broken hover handling\n\n\n      if (!IS_IOS) {\n        _this.addClass('vjs-workinghover');\n      } // Make player easily findable by ID\n\n\n      Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n      var majorVersion = version.split('.')[0];\n\n      _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n\n\n      _this.userActive(true);\n\n      _this.reportUserActivity();\n\n      _this.one('play', _this.listenForUserActivity_);\n\n      _this.on('stageclick', _this.handleStageClick_);\n\n      _this.on('keydown', _this.handleKeyDown);\n\n      _this.breakpoints(_this.options_.breakpoints);\n\n      _this.responsive(_this.options_.responsive);\n\n      return _this;\n    }\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n\n\n    var _proto = Player.prototype;\n\n    _proto.dispose = function dispose() {\n      var _this2 = this;\n\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose'); // prevent dispose from being called twice\n\n      this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n      off(document, FullscreenApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      } // Kill reference to this player\n\n\n      Player.players[this.id_] = null;\n\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n\n      if (this.tag) {\n        this.tag = null;\n      }\n\n      clearCacheForPlayer(this); // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n\n      ALL.names.forEach(function (name$$1) {\n        var props = ALL[name$$1];\n\n        var list = _this2[props.getterName](); // if it is not a native list\n        // we have to manually remove event listeners\n\n\n        if (list && list.off) {\n          list.off();\n        }\n      }); // the actual .el_ is removed here\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$$1() {\n      var tag = this.tag;\n      var el;\n      var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n      } // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n\n\n      var attrs = getAttributes(tag);\n\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n\n        Object.keys(el).forEach(function (k) {\n          tag[k] = el[k];\n        });\n      } // set tabindex to -1 to remove the video element from the focus order\n\n\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      //  doesn't change behavior of IE11 if JAWS is not being used\n\n      if (IE_VERSION) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }); // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech'; // Make player findable on elements\n\n      tag.player = el.player = this; // Default state of video is paused\n\n      this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n\n      if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        var defaultsStyleEl = $('.vjs-styles-defaults');\n        var head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n\n      this.fill_ = false;\n      this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n\n      var links = tag.getElementsByTagName('a');\n\n      for (var i = 0; i < links.length; i++) {\n        var linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n\n\n      tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      } // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n\n\n      prependTo(tag, el);\n      this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n\n      this.el_.setAttribute('lang', this.language_);\n      this.el_ = el;\n      return el;\n    }\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    ;\n\n    _proto.width = function width(value) {\n      return this.dimension('width', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    ;\n\n    _proto.height = function height(value) {\n      return this.dimension('height', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    ;\n\n    _proto.dimension = function dimension(_dimension, value) {\n      var privDimension = _dimension + '_';\n\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n\n      if (value === '') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n        return;\n      }\n\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fluid = function fluid(bool) {\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n\n      this.fluid_ = !!bool;\n\n      if (isEvented(this)) {\n        this.off('playerreset', this.updateStyleEl_);\n      }\n\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(function () {\n          this.on('playerreset', this.updateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fill = function fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n\n      this.fill_ = !!bool;\n\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player's aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.aspectRatio = function aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      } // Check for width:height format\n\n\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n\n      this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    ;\n\n    _proto.updateStyleEl_ = function updateStyleEl_() {\n      if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n        var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n        var techEl = this.tech_ && this.tech_.el();\n\n        if (techEl) {\n          if (_width >= 0) {\n            techEl.width = _width;\n          }\n\n          if (_height >= 0) {\n            techEl.height = _height;\n          }\n        }\n\n        return;\n      }\n\n      var width;\n      var height;\n      var aspectRatio;\n      var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      } // Ensure the CSS class is valid by starting with an alpha character\n\n\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      } // Ensure the right class is still on the player for the style element\n\n\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n    }\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadTech_ = function loadTech_(techName, source) {\n      var _this3 = this;\n\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n\n      var titleTechName = toTitleCase(techName);\n      var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n\n      this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      this.isReady_ = false; // if autoplay is a string we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n\n      var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n      var techOptions = {\n        source: source,\n        autoplay: autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': this.id() + \"_\" + camelTechName + \"_api\",\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset\n      };\n      ALL.names.forEach(function (name$$1) {\n        var props = ALL[name$$1];\n        techOptions[props.getterName] = _this3[props.privateName];\n      });\n      assign(techOptions, this.options_[titleTechName]);\n      assign(techOptions, this.options_[camelTechName]);\n      assign(techOptions, this.options_[techName.toLowerCase()]);\n\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      } // Initialize tech instance\n\n\n      var TechClass = Tech.getTech(techName);\n\n      if (!TechClass) {\n        throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n      }\n\n      this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n      this.tech_.ready(bind(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n      TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n        _this3.on(_this3.tech_, event, function (eventObj) {\n          if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n            _this3.queuedCallbacks_.push({\n              callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n              event: eventObj\n            });\n\n            return;\n          }\n\n          _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n      this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n      this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n      this.on(this.tech_, 'ended', this.handleTechEnded_);\n      this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n      this.on(this.tech_, 'play', this.handleTechPlay_);\n      this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n      this.on(this.tech_, 'pause', this.handleTechPause_);\n      this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n      this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n      this.on(this.tech_, 'error', this.handleTechError_);\n      this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n      this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n      this.on(this.tech_, 'textdata', this.handleTechTextData_);\n      this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n      this.usingNativeControls(this.techGet_('controls'));\n\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      } // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n\n\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      } // Get rid of the original video tag reference after the first tech is loaded\n\n\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unloadTech_ = function unloadTech_() {\n      var _this4 = this;\n\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(function (name$$1) {\n        var props = ALL[name$$1];\n        _this4[props.privateName] = _this4[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n\n      this.isPosterFromTech_ = false;\n    }\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    ;\n\n    _proto.tech = function tech(safety) {\n      if (safety === undefined) {\n        log.warn(tsml(_templateObject$2()));\n      }\n\n      return this.tech_;\n    }\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    ;\n\n    _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n      // trigger mousedown/up.\n      // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n      // Any touch events are set to block the mousedown event from happening\n\n      this.on(this.tech_, 'mousedown', this.handleTechClick_);\n      this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n\n      this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n\n      this.on(this.tech_, 'tap', this.handleTechTap_);\n    }\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.handleTechTap_);\n      this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n      this.off(this.tech_, 'mousedown', this.handleTechClick_);\n      this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n    }\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleTechReady_ = function handleTechReady_() {\n      this.triggerReady(); // Keep the same volume as before\n\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      } // Look if the tech found a higher resolution poster while loading\n\n\n      this.handleTechPosterChange_(); // Update the duration if available\n\n      this.handleTechDurationChange_();\n    }\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n     * function will also trigger {@link Player#firstplay} if it is the first loadstart\n     * for a video.\n     *\n     * @fires Player#loadstart\n     * @fires Player#firstplay\n     * @listens Tech#loadstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-seeking'); // reset the error state\n\n      this.error(null); // Update the duration\n\n      this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n      // The firstplay event relies on both the play and loadstart events\n      // which can happen in any order for a new source\n\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n        this.trigger('firstplay');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      } // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n\n\n      this.manualAutoplay_(this.autoplay());\n    }\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    ;\n\n    _proto.manualAutoplay_ = function manualAutoplay_(type) {\n      var _this5 = this;\n\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      }\n\n      var muted = function muted() {\n        var previouslyMuted = _this5.muted();\n\n        _this5.muted(true);\n\n        var restoreMuted = function restoreMuted() {\n          _this5.muted(previouslyMuted);\n        }; // restore muted on play terminatation\n\n\n        _this5.playTerminatedQueue_.push(restoreMuted);\n\n        var mutedPromise = _this5.play();\n\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n\n        return mutedPromise.catch(restoreMuted);\n      };\n\n      var promise; // if muted defaults to true\n      // the only thing we can do is call play\n\n      if (type === 'any' && this.muted() !== true) {\n        promise = this.play();\n\n        if (isPromise(promise)) {\n          promise = promise.catch(muted);\n        }\n      } else if (type === 'muted' && this.muted() !== true) {\n        promise = muted();\n      } else {\n        promise = this.play();\n      }\n\n      if (!isPromise(promise)) {\n        return;\n      }\n\n      return promise.then(function () {\n        _this5.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      }).catch(function (e) {\n        _this5.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    ;\n\n    _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n      if (srcObj === void 0) {\n        srcObj = '';\n      }\n\n      var src = srcObj;\n      var type = '';\n\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      } // make sure all the caches are set to default values\n      // to prevent null checking\n\n\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n      if (src && !type) {\n        type = findMimetype(this, src);\n      } // update `currentSource` cache always\n\n\n      this.cache_.source = mergeOptions({}, srcObj, {\n        src: src,\n        type: type\n      });\n      var matchingSources = this.cache_.sources.filter(function (s) {\n        return s.src && s.src === src;\n      });\n      var sourceElSources = [];\n      var sourceEls = this.$$('source');\n      var matchingSourceEls = [];\n\n      for (var i = 0; i < sourceEls.length; i++) {\n        var sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      } // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n\n\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      } // update the tech `src` cache\n\n\n      this.cache_.src = src;\n    }\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    ;\n\n    _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n      var _this6 = this;\n\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        var updateSourceCaches = function updateSourceCaches(src) {\n          return _this6.updateSourceCaches_(src);\n        };\n\n        var playerSrc = this.currentSource().src;\n        var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = function updateSourceCaches() {};\n          }\n        } // update the source to the intial source right away\n        // in some cases this will be empty string\n\n\n        updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n        // as this function will be called again.\n\n        if (!event.src) {\n          var updateCache = function updateCache(e) {\n            if (e.type !== 'sourceset') {\n              var techSrc = _this6.techGet('currentSrc');\n\n              _this6.lastSource_.tech = techSrc;\n\n              _this6.updateSourceCaches_(techSrc);\n            }\n\n            _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n          };\n\n          this.tech_.one(['sourceset', 'loadstart'], updateCache);\n        }\n      }\n\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     * @fires Player#firstplay\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    ;\n\n    _proto.hasStarted = function hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n\n      if (request === this.hasStarted_) {\n        return;\n      }\n\n      this.hasStarted_ = request;\n\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n        this.trigger('firstplay');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlay_ = function handleTechPlay_() {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('play');\n    }\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    ;\n\n    _proto.handleTechRateChange_ = function handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(function (queued) {\n          return queued.callback(queued.event);\n        });\n        this.queuedCallbacks_ = [];\n      }\n\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n\n      this.trigger('ratechange');\n    }\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    ;\n\n    _proto.handleTechWaiting_ = function handleTechWaiting_() {\n      var _this7 = this;\n\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n\n      var timeWhenWaiting = this.currentTime();\n\n      var timeUpdateListener = function timeUpdateListener() {\n        if (timeWhenWaiting !== _this7.currentTime()) {\n          _this7.removeClass('vjs-waiting');\n\n          _this7.off('timeupdate', timeUpdateListener);\n        }\n      };\n\n      this.on('timeupdate', timeUpdateListener);\n    }\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplay');\n    }\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplaythrough');\n    }\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlaying_ = function handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('playing');\n    }\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeking_ = function handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeking');\n    }\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeked_ = function handleTechSeeked_() {\n      this.removeClass('vjs-seeking');\n      this.removeClass('vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeked');\n    }\n    /**\n     * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#firstplay\n     * @listens Tech#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n     * @private\n     */\n    ;\n\n    _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n      // If the first starttime attribute is specified\n      // then we will start at the given offset in seconds\n      if (this.options_.starttime) {\n        log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n        this.currentTime(this.options_.starttime);\n      }\n\n      this.addClass('vjs-has-started');\n      /**\n       * Fired the first time a video is played. Not part of the HLS spec, and this is\n       * probably not the best implementation yet, so use sparingly. If you don't have a\n       * reason to prevent playback, use `myPlayer.one('play');` instead.\n       *\n       * @event Player#firstplay\n       * @deprecated As of 6.0 firstplay event is deprecated.\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('firstplay');\n    }\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    ;\n\n    _proto.handleTechPause_ = function handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('pause');\n    }\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    ;\n\n    _proto.handleTechEnded_ = function handleTechEnded_() {\n      this.addClass('vjs-ended');\n\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ended');\n    }\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#mousedown\n     * @private\n     */\n    ;\n\n    _proto.handleTechClick_ = function handleTechClick_(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n\n\n      if (!this.controls_) {\n        return;\n      }\n\n      if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    ;\n\n    _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      } // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n\n\n      var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n        return el.contains(event.target);\n      });\n\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    ;\n\n    _proto.handleTechTap_ = function handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      event.preventDefault();\n    }\n    /**\n     * native click events on the SWF aren't triggered on IE11, Win8.1RT\n     * use stageclick events triggered from inside the SWF instead\n     *\n     * @private\n     * @listens stageclick\n     */\n    ;\n\n    _proto.handleStageClick_ = function handleStageClick_() {\n      this.reportUserActivity();\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    ;\n\n    _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n      var fsApi = FullscreenApi;\n      var el = this.el();\n      var isFs = document[fsApi.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + fsApi.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + fsApi.fullscreen);\n      }\n\n      this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n      if (this.isFullscreen() === false) {\n        off(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n      }\n\n      if (!prefixedAPI) {\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }\n    }\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n      if (data) {\n        this.isFullscreen(data.isFullscreen);\n      }\n      /**\n       * Fired when going in and out of fullscreen.\n       *\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('fullscreenchange');\n    }\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    ;\n\n    _proto.handleTechError_ = function handleTechError_() {\n      var error = this.tech_.error();\n      this.error(error);\n    }\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    ;\n\n    _proto.handleTechTextData_ = function handleTechTextData_() {\n      var data = null;\n\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('textdata', data);\n    }\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    ;\n\n    _proto.getCache = function getCache() {\n      return this.cache_;\n    }\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetCache_ = function resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        volume: 1\n      };\n    }\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    ;\n\n    _proto.techCall_ = function techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set$1(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log(e);\n          throw e;\n        }\n      }, true);\n    }\n    /**\n     * Get calls can't wait for the tech, and sometimes don't need to.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {Function|undefined}\n     *         the method or undefined\n     *\n     * @private\n     */\n    ;\n\n    _proto.techGet_ = function techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      } // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n          throw e;\n        } // When a method isn't available on the object it throws a TypeError\n\n\n        if (e.name === 'TypeError') {\n          log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n          this.tech_.isReady_ = false;\n          throw e;\n        } // If error unknown, just log and throw\n\n\n        log(e);\n        throw e;\n      }\n    }\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    ;\n\n    _proto.play = function play() {\n      var _this8 = this;\n\n      var PromiseClass = this.options_.Promise || window$1.Promise;\n\n      if (PromiseClass) {\n        return new PromiseClass(function (resolve) {\n          _this8.play_(resolve);\n        });\n      }\n\n      return this.play_();\n    }\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    ;\n\n    _proto.play_ = function play_(callback) {\n      var _this9 = this;\n\n      if (callback === void 0) {\n        callback = silencePromise;\n      }\n\n      this.playCallbacks_.push(callback);\n      var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      } // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n\n\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = function (e) {\n          _this9.play_();\n        };\n\n        this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n\n        return;\n      } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n      var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    ;\n\n    _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n      var queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    ;\n\n    _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n      var callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    ;\n\n    _proto.pause = function pause() {\n      this.techCall_('pause');\n    }\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    ;\n\n    _proto.paused = function paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    ;\n\n    _proto.played = function played() {\n      return this.techGet_('played') || createTimeRanges(0, 0);\n    }\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n\n      this.scrubbing_ = !!isScrubbing;\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    ;\n\n    _proto.currentTime = function currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n\n        this.techCall_('setCurrentTime', seconds);\n        return;\n      } // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n\n\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and in the case of Flash, may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    ;\n\n    _proto.duration = function duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n\n      seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing (esp. Flash)\n        this.cache_.duration = seconds;\n\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n\n          if (this.options_.liveui && this.player_.liveTracker) {\n            this.addClass('vjs-liveui');\n          }\n        } else {\n          this.removeClass('vjs-live');\n          this.removeClass('vjs-liveui');\n        }\n\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTime = function remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    } //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var buffered = this.techGet_('buffered');\n\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges(0, 0);\n      }\n\n      return buffered;\n    }\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$$1() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    ;\n\n    _proto.bufferedEnd = function bufferedEnd() {\n      var buffered = this.buffered();\n      var duration = this.duration();\n      var end = buffered.end(buffered.length - 1);\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      return end;\n    }\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    ;\n\n    _proto.volume = function volume(percentAsDecimal) {\n      var vol;\n\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n\n        return;\n      } // Default to 1 when returning current volume.\n\n\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    ;\n\n    _proto.muted = function muted(_muted) {\n      if (_muted !== undefined) {\n        this.techCall_('setMuted', _muted);\n        return;\n      }\n\n      return this.techGet_('muted') || false;\n    }\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    ;\n\n    _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n      if (_defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', _defaultMuted);\n      }\n\n      return this.techGet_('defaultMuted') || false;\n    }\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    ;\n\n    _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n\n      return this.cache_.lastVolume;\n    }\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS, so not our flash swf)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    ;\n\n    _proto.isFullscreen = function isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        this.isFullscreen_ = !!isFS;\n        this.toggleFullscreenClass_();\n        return;\n      }\n\n      if (prefixedAPI) {\n        var fsApi = FullscreenApi;\n        var el = this.el();\n        var isFs = document[fsApi.fullscreenElement] === el;\n\n        if (!isFs && el.matches) {\n          isFs = el.matches(':' + fsApi.fullscreen);\n        } else if (!isFs && el.msMatchesSelector) {\n          isFs = el.msMatchesSelector(':' + fsApi.fullscreen);\n        }\n\n        return isFs;\n      }\n\n      return !!this.isFullscreen_;\n    }\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.requestFullscreen = function requestFullscreen() {\n      var fsApi = FullscreenApi;\n      this.isFullscreen(true);\n\n      if (fsApi.requestFullscreen) {\n        // the browser supports going fullscreen at the element level so we can\n        // take the controls fullscreen as well as the video\n        // Trigger fullscreenchange event after change\n        // We have to specifically add this each time, and remove\n        // when canceling fullscreen. Otherwise if there's multiple\n        // players on a page, they would all be reacting to the same fullscreen\n        // events\n        on(document, fsApi.fullscreenchange, this.boundDocumentFullscreenChange_);\n        this.el_[fsApi.requestFullscreen]();\n      } else if (this.tech_.supportsFullScreen()) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('fullscreenchange');\n      }\n    }\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.exitFullscreen = function exitFullscreen() {\n      var fsApi = FullscreenApi;\n      this.isFullscreen(false); // Check for browser element fullscreen support\n\n      if (fsApi.requestFullscreen) {\n        document[fsApi.exitFullscreen]();\n      } else if (this.tech_.supportsFullScreen()) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('fullscreenchange');\n      }\n    }\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    ;\n\n    _proto.enterFullWindow = function enterFullWindow() {\n      this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n      this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n      on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n      document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n      addClass(document.body, 'vjs-full-window');\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('enterFullWindow');\n    }\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    ;\n\n    _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    ;\n\n    _proto.exitFullWindow = function exitFullWindow() {\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n      document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n      removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('exitFullWindow');\n    }\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      } // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n\n\n      var excludeElement = function excludeElement(el) {\n        var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n        var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n\n        var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        }\n\n        return excludedTags.indexOf(tagName) !== -1;\n      }; // Bail out if the user is focused on an interactive form element.\n\n\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleHotkeys = function handleHotkeys(event) {\n      var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n      var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n          fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'f');\n      } : _hotkeys$fullscreenKe,\n          _hotkeys$muteKey = hotkeys.muteKey,\n          muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'm');\n      } : _hotkeys$muteKey,\n          _hotkeys$playPauseKey = hotkeys.playPauseKey,\n          playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n      } : _hotkeys$playPauseKey;\n\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var FSToggle = Component.getComponent('FullscreenToggle');\n\n        if (document[FullscreenApi.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var MuteToggle = Component.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var PlayToggle = Component.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this);\n      }\n    }\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType(type) {\n      var can; // Loop through each playback technology in the options order\n\n      for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        var techName = j[i];\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!tech) {\n          tech = Component.getComponent(techName);\n        } // Check if the current tech is defined before continuing\n\n\n        if (!tech) {\n          log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n          continue;\n        } // Check if the browser supports this technology\n\n\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n\n          if (can) {\n            return can;\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    ;\n\n    _proto.selectSource = function selectSource(sources) {\n      var _this10 = this;\n\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      var techs = this.options_.techOrder.map(function (techName) {\n        return [techName, Tech.getTech(techName)];\n      }).filter(function (_ref) {\n        var techName = _ref[0],\n            tech = _ref[1];\n\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        return false;\n      }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n\n      var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n        var found;\n        outerArray.some(function (outerChoice) {\n          return innerArray.some(function (innerChoice) {\n            found = tester(outerChoice, innerChoice);\n\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n\n      var foundSourceAndTech;\n\n      var flip = function flip(fn) {\n        return function (a, b) {\n          return fn(b, a);\n        };\n      };\n\n      var finder = function finder(_ref2, source) {\n        var techName = _ref2[0],\n            tech = _ref2[1];\n\n        if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n          return {\n            source: source,\n            tech: techName\n          };\n        }\n      }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n\n\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n\n      return foundSourceAndTech || false;\n    }\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.src = function src(source) {\n      var _this11 = this;\n\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      } // filter out invalid sources and turn our source into\n      // an array of source objects\n\n\n      var sources = filterSource(source); // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0);\n        return;\n      } // intial sources\n\n\n      this.changingSrc_ = true;\n      this.cache_.sources = sources;\n      this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n      setSource(this, sources[0], function (middlewareSource, mws) {\n        _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n\n        _this11.cache_.sources = sources;\n\n        _this11.updateSourceCaches_(middlewareSource);\n\n        var err = _this11.src_(middlewareSource);\n\n        if (err) {\n          if (sources.length > 1) {\n            return _this11.src(sources.slice(1));\n          }\n\n          _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n          _this11.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.localize(this.options_.notSupportedMessage)\n            });\n          }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n\n\n          _this11.triggerReady();\n\n          return;\n        }\n\n        setTech(mws, _this11.tech_);\n      });\n    }\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    ;\n\n    _proto.src_ = function src_(source) {\n      var _this12 = this;\n\n      var sourceTech = this.selectSource([source]);\n\n      if (!sourceTech) {\n        return true;\n      }\n\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true; // load this technology with the chosen source\n\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(function () {\n          _this12.changingSrc_ = false;\n        });\n        return false;\n      } // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n\n\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n    /**\n     * Begin loading the src data.\n     */\n    ;\n\n    _proto.load = function load() {\n      this.techCall_('load');\n    }\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      var _this13 = this;\n\n      var PromiseClass = this.options_.Promise || window$1.Promise;\n\n      if (this.paused() || !PromiseClass) {\n        this.doReset_();\n      } else {\n        var playPromise = this.play();\n        silencePromise(playPromise.then(function () {\n          return _this13.doReset_();\n        }));\n      }\n    };\n\n    _proto.doReset_ = function doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    ;\n\n    _proto.resetControlBarUI_ = function resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    ;\n\n    _proto.resetProgressBar_ = function resetProgressBar_() {\n      this.currentTime(0);\n      var _this$controlBar = this.controlBar,\n          durationDisplay = _this$controlBar.durationDisplay,\n          remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n    /**\n     * Reset Playback ratio\n     */\n    ;\n\n    _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n    /**\n     * Reset Volume bar\n     */\n    ;\n\n    _proto.resetVolumeBar_ = function resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    ;\n\n    _proto.currentSources = function currentSources() {\n      var source = this.currentSource();\n      var sources = []; // assume `{}` or `{ src }`\n\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n\n      return this.cache_.sources || sources;\n    }\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    ;\n\n    _proto.currentSource = function currentSource() {\n      return this.cache_.source || {};\n    }\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    ;\n\n    _proto.currentType = function currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    ;\n\n    _proto.preload = function preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n\n      return this.techGet_('preload');\n    }\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    ;\n\n    _proto.autoplay = function autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n\n      var techAutoplay; // if the value is a valid string set it to that\n\n      if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(value);\n        techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    ;\n\n    _proto.playsinline = function playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n\n      return this.techGet_('playsinline');\n    }\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    ;\n\n    _proto.loop = function loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n\n      return this.techGet_('loop');\n    }\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    ;\n\n    _proto.poster = function poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      } // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n\n\n      if (!src) {\n        src = '';\n      }\n\n      if (src === this.poster_) {\n        return;\n      } // update the internal poster variable\n\n\n      this.poster_ = src; // update the tech's poster\n\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('posterchange');\n    }\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        var newPoster = this.tech_.poster() || '';\n\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n          this.trigger('posterchange');\n        }\n      }\n    }\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    ;\n\n    _proto.controls = function controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.controls_ === bool) {\n        return;\n      }\n\n      this.controls_ = bool;\n\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsenabled');\n\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsdisabled');\n\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls), Flash, or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    ;\n\n    _proto.usingNativeControls = function usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n\n      this.usingNativeControls_ = bool;\n\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingcustomcontrols');\n      }\n    }\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err === undefined) {\n        return this.error_ || null;\n      } // restoring to default\n\n\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n\n        return;\n      }\n\n      this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n      this.addClass('vjs-error'); // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n      log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('error');\n      return;\n    }\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    ;\n\n    _proto.reportUserActivity = function reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    ;\n\n    _proto.userActive = function userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n\n      bool = !!bool;\n\n      if (bool === this.userActive_) {\n        return;\n      }\n\n      this.userActive_ = bool;\n\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('useractive');\n        return;\n      } // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('userinactive');\n    }\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    ;\n\n    _proto.listenForUserActivity_ = function listenForUserActivity_() {\n      var mouseInProgress;\n      var lastMoveX;\n      var lastMoveY;\n      var handleActivity = bind(this, this.reportUserActivity);\n\n      var handleMouseMove = function handleMouseMove(e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n\n      var handleMouseDown = function handleMouseDown() {\n        handleActivity(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n\n      var handleMouseUp = function handleMouseUp(event) {\n        handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n        this.clearInterval(mouseInProgress);\n      }; // Any mouse movement will be considered user activity\n\n\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUp);\n      var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      } // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n\n\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n\n      var inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        } // Reset the activity tracker\n\n\n        this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n        this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n        this.clearTimeout(inactivityTimeout);\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout <= 0) {\n          return;\n        } // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n\n\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    ;\n\n    _proto.playbackRate = function playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    ;\n\n    _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    ;\n\n    _proto.isAudio = function isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n\n      return !!this.isAudio_;\n    }\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n     * automatically removed from the video element whenever the source changes, unless\n     * manualCleanup is set to false.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     *             to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n\n      var _obj = obj,\n          track = _obj.track;\n\n      if (!track) {\n        track = obj;\n      } // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    ;\n\n    _proto.videoWidth = function videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    ;\n\n    _proto.videoHeight = function videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n    /**\n     * The player's language code\n     * NOTE: The language should be set in the player options if you want the\n     * the controls to be built with a specific language. Changing the language\n     * later will not update controls text.\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    ;\n\n    _proto.language = function language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n\n      this.language_ = String(code).toLowerCase();\n    }\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    ;\n\n    _proto.languages = function languages() {\n      return mergeOptions(Player.prototype.options_.languages, this.languages_);\n    }\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      var options = mergeOptions(this.options_);\n      var tracks = options.tracks;\n      options.tracks = [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n        track = mergeOptions(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n\n      return options;\n    }\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    ;\n\n    _proto.createModal = function createModal(content, options) {\n      var _this14 = this;\n\n      options = options || {};\n      options.content = content || '';\n      var modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', function () {\n        _this14.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n\n      var currentBreakpoint = this.currentBreakpoint();\n      var currentWidth = this.currentWidth();\n\n      for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        var candidateBreakpoint = BREAKPOINT_ORDER[i];\n        var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          } // Only remove a class if there is a current breakpoint.\n\n\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n      var className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    ;\n\n    _proto.breakpoints = function breakpoints(_breakpoints) {\n      // Used as a getter.\n      if (_breakpoints === undefined) {\n        return assign(this.breakpoints_);\n      }\n\n      this.breakpoint_ = '';\n      this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n\n      this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n      return assign(this.breakpoints_);\n    }\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    ;\n\n    _proto.responsive = function responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n\n      value = Boolean(value);\n      var current = this.responsive_; // Nothing changed.\n\n      if (value === current) {\n        return;\n      } // The value actually changed, set it.\n\n\n      this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n\n      if (value) {\n        this.on('playerresize', this.updateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.updateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n\n      return value;\n    }\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    ;\n\n    _proto.currentBreakpoint = function currentBreakpoint() {\n      return this.breakpoint_;\n    }\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    ;\n\n    _proto.currentBreakpointClass = function currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    ;\n\n    _proto.loadMedia = function loadMedia(media, ready) {\n      var _this15 = this;\n\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n\n      this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n      this.cache_.media = mergeOptions(media);\n      var _this$cache_$media = this.cache_.media,\n          artwork = _this$cache_$media.artwork,\n          poster = _this$cache_$media.poster,\n          src = _this$cache_$media.src,\n          textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n\n      if (src) {\n        this.src(src);\n      }\n\n      if (poster) {\n        this.poster(poster);\n      }\n\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(function (tt) {\n          return _this15.addRemoteTextTrack(tt, false);\n        });\n      }\n\n      this.ready(ready);\n    }\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    ;\n\n    _proto.getMedia = function getMedia() {\n      if (!this.cache_.media) {\n        var poster = this.poster();\n        var src = this.currentSources();\n        var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n          return {\n            kind: tt.kind,\n            label: tt.label,\n            language: tt.language,\n            src: tt.src\n          };\n        });\n        var media = {\n          src: src,\n          textTracks: textTracks\n        };\n\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n\n        return media;\n      }\n\n      return mergeOptions(this.cache_.media);\n    }\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    ;\n\n    Player.getTagSettings = function getTagSettings(tag) {\n      var baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      var tagOptions = getAttributes(tag);\n      var dataSetup = tagOptions['data-setup'];\n\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      } // Check if data-setup attr exists.\n\n\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        var _safeParseTuple = tuple(dataSetup || '{}'),\n            err = _safeParseTuple[0],\n            data = _safeParseTuple[1];\n\n        if (err) {\n          log.error(err);\n        }\n\n        assign(tagOptions, data);\n      }\n\n      assign(baseOptions, tagOptions); // Get tag children settings\n\n      if (tag.hasChildNodes()) {\n        var children = tag.childNodes;\n\n        for (var i = 0, j = children.length; i < j; i++) {\n          var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n          var childName = child.nodeName.toLowerCase();\n\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n\n      return baseOptions;\n    }\n    /**\n     * Determine whether or not flexbox is supported\n     *\n     * @return {boolean}\n     *         - true if flexbox is supported\n     *         - false if flexbox is not supported\n     */\n    ;\n\n    _proto.flexNotSupported_ = function flexNotSupported_() {\n      var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n      // common flex features that we can rely on when checking for flex support.\n\n      return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n      'msFlexOrder' in elem.style);\n    };\n\n    return Player;\n  }(Component);\n  /**\n   * Get the {@link VideoTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name$$1) {\n    var props = ALL[name$$1];\n\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n\n\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n\n  Player.players = {};\n  var navigator = window$1.navigator;\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    flash: {},\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    breakpoints: {},\n    responsive: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n      return this.trigger(event);\n    };\n  });\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component.registerComponent('Player', Player);\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n\n  var BASE_PLUGIN_NAME = 'plugin';\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n\n  var PLUGIN_CACHE_KEY = 'activePlugins_';\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n\n  var pluginStorage = {};\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n\n  var pluginExists = function pluginExists(name) {\n    return pluginStorage.hasOwnProperty(name);\n  };\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {Function|undefined}\n   *          The plugin (or undefined).\n   */\n\n\n  var getPlugin = function getPlugin(name) {\n    return pluginExists(name) ? pluginStorage[name] : undefined;\n  };\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n\n\n  var markPluginAsActive = function markPluginAsActive(player, name) {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n\n\n  var triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n    var eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n\n\n  var createBasicPlugin = function createBasicPlugin(name, plugin) {\n    var basicPluginWrapper = function basicPluginWrapper() {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: null\n      }, true);\n      var instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: instance\n      });\n      return instance;\n    };\n\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n\n\n  var createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function () {\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n      this[name] = function () {\n        return instance;\n      };\n\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n\n\n  var Plugin =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    function Plugin(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n\n      this.player = player; // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n\n      this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n      player.on('dispose', this.dispose);\n    }\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n\n\n    var _proto = Plugin.prototype;\n\n    _proto.version = function version() {\n      return this.constructor.VERSION;\n    }\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    ;\n\n    _proto.getEventHash = function getEventHash(hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    ;\n\n    _proto.trigger = function trigger$$1(event, hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    ;\n\n    _proto.handleStateChanged = function handleStateChanged(e) {}\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var name = this.name,\n          player = this.player;\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    ;\n\n    Plugin.isBasic = function isBasic(plugin) {\n      var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    ;\n\n    Plugin.registerPlugin = function registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n      }\n\n      if (pluginExists(name)) {\n        log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n      }\n\n      if (typeof plugin !== 'function') {\n        throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n      }\n\n      pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n\n      return plugin;\n    }\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    ;\n\n    Plugin.deregisterPlugin = function deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    ;\n\n    Plugin.getPlugins = function getPlugins(names) {\n      if (names === void 0) {\n        names = Object.keys(pluginStorage);\n      }\n\n      var result;\n      names.forEach(function (name) {\n        var plugin = getPlugin(name);\n\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    ;\n\n    Plugin.getPluginVersion = function getPluginVersion(name) {\n      var plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    };\n\n    return Plugin;\n  }();\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n\n\n  Plugin.getPlugin = getPlugin;\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  /**\n   * @file extend.js\n   * @module extend\n   */\n\n  /**\n   * A combination of node inherits and babel's inherits (after transpile).\n   * Both work the same but node adds `super_` to the subClass\n   * and Bable adds the superClass as __proto__. Both seem useful.\n   *\n   * @param {Object} subClass\n   *        The class to inherit to\n   *\n   * @param {Object} superClass\n   *        The class to inherit from\n   *\n   * @private\n   */\n  var _inherits$1 = function _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n\n    if (superClass) {\n      // node\n      subClass.super_ = superClass;\n    }\n  };\n  /**\n   * Used to subclass an existing class by emulating ES subclassing using the\n   * `extends` keyword.\n   *\n   * @function\n   * @example\n   * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n   *   myCustomMethod: function() {\n   *     // Do things in my method.\n   *   }\n   * });\n   *\n   * @param    {Function} superClass\n   *           The class to inherit from\n   *\n   * @param    {Object}   [subClassMethods={}]\n   *           Methods of the new class\n   *\n   * @return   {Function}\n   *           The new class with subClassMethods that inherited superClass.\n   */\n\n\n  var extend$1 = function extend(superClass, subClassMethods) {\n    if (subClassMethods === void 0) {\n      subClassMethods = {};\n    }\n\n    var subClass = function subClass() {\n      superClass.apply(this, arguments);\n    };\n\n    var methods = {};\n\n    if (typeof subClassMethods === 'object') {\n      if (subClassMethods.constructor !== Object.prototype.constructor) {\n        subClass = subClassMethods.constructor;\n      }\n\n      methods = subClassMethods;\n    } else if (typeof subClassMethods === 'function') {\n      subClass = subClassMethods;\n    }\n\n    _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        subClass.prototype[name] = methods[name];\n      }\n    }\n\n    return subClass;\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n\n  var normalizeId = function normalizeId(id) {\n    return id.indexOf('#') === 0 ? id.slice(1) : id;\n  };\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:computed-style~computedStyle as computedStyle\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:extend~extend as extend\n   * @borrows module:fn.bind as bind\n   * @borrows module:format-time.formatTime as formatTime\n   * @borrows module:format-time.resetFormatTime as resetFormatTime\n   * @borrows module:format-time.setFormatTime as setFormatTime\n   * @borrows module:merge-options.mergeOptions as mergeOptions\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows module:time-ranges.createTimeRanges as createTimeRange\n   * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n   * @borrows module:url.isCrossOrigin as isCrossOrigin\n   * @borrows module:url.parseUrl as parseUrl\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {Component~ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n\n\n  function videojs$1(id, options, ready) {\n    var player = videojs$1.getPlayer(id);\n\n    if (player) {\n      if (options) {\n        log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n      }\n\n      if (ready) {\n        player.ready(ready);\n      }\n\n      return player;\n    }\n\n    var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    } // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log.warn('The element supplied is not included in the DOM');\n    }\n\n    options = options || {};\n    videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n      var opts = hookFunction(el, mergeOptions(options));\n\n      if (!isObject(opts) || Array.isArray(opts)) {\n        log.error('please return an object in beforesetup hooks');\n        return;\n      }\n\n      options = mergeOptions(options, opts);\n    }); // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n\n    var PlayerComponent = Component.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    videojs$1.hooks('setup').forEach(function (hookFunction) {\n      return hookFunction(player);\n    });\n    return player;\n  }\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n\n\n  videojs$1.hooks_ = {};\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n\n  videojs$1.hooks = function (type, fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n    if (fn) {\n      videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n    }\n\n    return videojs$1.hooks_[type];\n  };\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  videojs$1.hook = function (type, fn) {\n    videojs$1.hooks(type, fn);\n  };\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  videojs$1.hookOnce = function (type, fn) {\n    videojs$1.hooks(type, [].concat(fn).map(function (original) {\n      var wrapper = function wrapper() {\n        videojs$1.removeHook(type, wrapper);\n        return original.apply(void 0, arguments);\n      };\n\n      return wrapper;\n    }));\n  };\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n\n\n  videojs$1.removeHook = function (type, fn) {\n    var index = videojs$1.hooks(type).indexOf(fn);\n\n    if (index <= -1) {\n      return false;\n    }\n\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n    videojs$1.hooks_[type].splice(index, 1);\n    return true;\n  }; // Add default styles\n\n\n  if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    var style$1 = $('.vjs-styles-defaults');\n\n    if (!style$1) {\n      style$1 = createStyleElement('vjs-styles-defaults');\n      var head = $('head');\n\n      if (head) {\n        head.insertBefore(style$1, head.firstChild);\n      }\n\n      setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n    }\n  } // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n\n\n  autoSetupTimeout(1, videojs$1);\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n\n  videojs$1.VERSION = version;\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n\n  videojs$1.options = Player.prototype.options_;\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n\n  videojs$1.getPlayers = function () {\n    return Player.players;\n  };\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n\n\n  videojs$1.getPlayer = function (id) {\n    var players = Player.players;\n    var tag;\n\n    if (typeof id === 'string') {\n      var nId = normalizeId(id);\n      var player = players[nId];\n\n      if (player) {\n        return player;\n      }\n\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n\n    if (isEl(tag)) {\n      var _tag = tag,\n          _player = _tag.player,\n          playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n\n      if (_player || players[playerId]) {\n        return _player || players[playerId];\n      }\n    }\n  };\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n\n\n  videojs$1.getAllPlayers = function () {\n    return (// Disposed players leave a key with a `null` value, so we need to make sure\n      // we filter those out.\n      Object.keys(Player.players).map(function (k) {\n        return Player.players[k];\n      }).filter(Boolean)\n    );\n  };\n\n  videojs$1.players = Player.players;\n  videojs$1.getComponent = Component.getComponent;\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n\n  videojs$1.registerComponent = function (name$$1, comp) {\n    if (Tech.isTech(comp)) {\n      log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n    }\n\n    Component.registerComponent.call(Component, name$$1, comp);\n  };\n\n  videojs$1.getTech = Tech.getTech;\n  videojs$1.registerTech = Tech.registerTech;\n  videojs$1.use = use;\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n\n  Object.defineProperty(videojs$1, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n\n  videojs$1.browser = browser;\n  /**\n   * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n   * included for backward-compatibility with 4.x.\n   *\n   * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n   * @type {boolean}\n   */\n\n  videojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n  videojs$1.extend = extend$1;\n  videojs$1.mergeOptions = mergeOptions;\n  videojs$1.bind = bind;\n  videojs$1.registerPlugin = Plugin.registerPlugin;\n  videojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n\n  videojs$1.plugin = function (name$$1, plugin) {\n    log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name$$1, plugin);\n  };\n\n  videojs$1.getPlugins = Plugin.getPlugins;\n  videojs$1.getPlugin = Plugin.getPlugin;\n  videojs$1.getPluginVersion = Plugin.getPluginVersion;\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n\n  videojs$1.addLanguage = function (code, data) {\n    var _mergeOptions;\n\n    code = ('' + code).toLowerCase();\n    videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n    return videojs$1.options.languages[code];\n  };\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n\n\n  videojs$1.log = log;\n  videojs$1.createLogger = createLogger$1;\n  videojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n  videojs$1.formatTime = formatTime;\n  videojs$1.setFormatTime = setFormatTime;\n  videojs$1.resetFormatTime = resetFormatTime;\n  videojs$1.parseUrl = parseUrl;\n  videojs$1.isCrossOrigin = isCrossOrigin;\n  videojs$1.EventTarget = EventTarget;\n  videojs$1.on = on;\n  videojs$1.one = one;\n  videojs$1.off = off;\n  videojs$1.trigger = trigger;\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n\n  videojs$1.xhr = xhr;\n  videojs$1.TextTrack = TextTrack;\n  videojs$1.AudioTrack = AudioTrack;\n  videojs$1.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n    videojs$1[k] = function () {\n      log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs$1.computedStyle = computedStyle;\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:dom|dom}\n   */\n\n  videojs$1.dom = Dom;\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:url|url}\n   */\n\n  videojs$1.url = Url;\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n\n    /* jshint ignore:start */\n    (function (root) {\n      /* jshint ignore:end */\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n      var URLToolkit = {\n        // jshint ignore:line\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      /* jshint ignore:start */\n\n      module.exports = URLToolkit;\n    })(commonjsGlobal);\n    /* jshint ignore:end */\n\n  });\n\n  /*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\n  function _extends$1() {\n    _extends$1 = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends$1.apply(this, arguments);\n  }\n\n  function _inheritsLoose$1(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _assertThisInitialized$1(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implementation that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n\n  var Stream =\n  /*#__PURE__*/\n  function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      var i;\n      var length;\n      var args;\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n\n  var LineStream =\n  /*#__PURE__*/\n  function (_Stream) {\n    _inheritsLoose$1(LineStream, _Stream);\n\n    function LineStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.buffer = '';\n      return _this;\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n\n    var _proto = LineStream.prototype;\n\n    _proto.push = function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    };\n\n    return LineStream;\n  }(Stream);\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n\n  var attributeSeparator = function attributeSeparator() {\n    var key = '[^=]*';\n    var value = '\"[^\"]*\"|[^,]*';\n    var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n\n  var parseAttributes = function parseAttributes(attributes) {\n    // split the string using attributes as the separator\n    var attrs = attributes.split(attributeSeparator());\n    var result = {};\n    var i = attrs.length;\n    var attr;\n\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n\n  var ParseStream =\n  /*#__PURE__*/\n  function (_Stream) {\n    _inheritsLoose$1(ParseStream, _Stream);\n\n    function ParseStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.customParsers = [];\n      _this.tagMappers = [];\n      return _this;\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n\n    var _proto = ParseStream.prototype;\n\n    _proto.push = function push(line) {\n      var _this2 = this;\n\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this2.customParsers.length; i++) {\n          if (_this2.customParsers[i].call(_this2, newLine)) {\n            return;\n          }\n        } // Comments\n\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this2.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n\n          return;\n        }\n\n        match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n\n          if (match[2]) {\n            event.title = match[2];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'totalduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'byterange'\n          };\n\n          if (match[1]) {\n            event.length = parseInt(match[1], 10);\n          }\n\n          if (match[2]) {\n            event.offset = parseInt(match[2], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n\n          if (match[1]) {\n            var attributes = parseAttributes(match[1]);\n\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n\n            if (attributes.BYTERANGE) {\n              var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                  length = _attributes$BYTERANGE[0],\n                  offset = _attributes$BYTERANGE[1];\n\n              event.byterange = {};\n\n              if (length) {\n                event.byterange.length = parseInt(length, 10);\n              }\n\n              if (offset) {\n                event.byterange.offset = parseInt(offset, 10);\n              }\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n\n              event.attributes.RESOLUTION = resolution;\n            }\n\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        } // unknown tag type\n\n\n        _this2.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    };\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n\n    _proto.addParser = function addParser(_ref) {\n      var _this3 = this;\n\n      var expression = _ref.expression,\n          customType = _ref.customType,\n          dataParser = _ref.dataParser,\n          segment = _ref.segment;\n\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n\n        if (match) {\n          _this3.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n\n          return true;\n        }\n      });\n    };\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n\n    _proto.addTagMapper = function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n          map = _ref2.map;\n\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n\n        return line;\n      };\n\n      this.tagMappers.push(mapFn);\n    };\n\n    return ParseStream;\n  }(Stream);\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n\n  var Parser =\n  /*#__PURE__*/\n  function (_Stream) {\n    _inheritsLoose$1(Parser, _Stream);\n\n    function Parser() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.lineStream = new LineStream();\n      _this.parseStream = new ParseStream();\n\n      _this.lineStream.pipe(_this.parseStream);\n      /* eslint-disable consistent-this */\n\n\n      var self = _assertThisInitialized$1(_assertThisInitialized$1(_this));\n      /* eslint-enable consistent-this */\n\n\n      var uris = [];\n      var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      var currentMap; // if specified, the active decryption key\n\n      var _key;\n\n      var noop = function noop() {};\n\n      var defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // group segments into numbered timelines delineated by discontinuities\n\n      var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      _this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // update the manifest with the m3u8 entry from the parse stream\n\n      _this.parseStream.on('data', function (entry) {\n        var mediaGroup;\n        var rendition;\n        ({\n          tag: function tag() {\n            // switch based on the tag type\n            (({\n              'allow-cache': function allowCache() {\n                this.manifest.allowCache = entry.allowed;\n\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange: function byterange() {\n                var byterange = {};\n\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n\n                  if (!('offset' in entry)) {\n                    this.trigger('info', {\n                      message: 'defaulting offset to zero'\n                    });\n                    entry.offset = 0;\n                  }\n                }\n\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n              },\n              endlist: function endlist() {\n                this.manifest.endList = true;\n              },\n              inf: function inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n\n                this.manifest.segments = uris;\n              },\n              key: function key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  _key = null;\n                  return;\n                }\n\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n\n                _key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  _key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence': function mediaSequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence': function discontinuitySequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type': function playlistType() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map: function map() {\n                currentMap = {};\n\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n              },\n              'stream-inf': function streamInf() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n\n                _extends$1(currentUri.attributes, entry.attributes);\n              },\n              media: function media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n\n                var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  default: /yes/i.test(entry.attributes.DEFAULT)\n                };\n\n                if (rendition.default) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity: function discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time': function programDateTime() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration: function targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.targetDuration = entry.duration;\n              },\n              totalduration: function totalduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid total duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.totalDuration = entry.duration;\n              },\n              start: function start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out': function cueOut() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont': function cueOutCont() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in': function cueIn() {\n                currentUri.cueIn = entry.data;\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri: function uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n\n            if (_key) {\n              currentUri.key = _key;\n            }\n\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // prepare for the next URI\n\n\n            currentUri = {};\n          },\n          comment: function comment() {// comments are not important for playback\n          },\n          custom: function custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n\n      return _this;\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n\n\n    var _proto = Parser.prototype;\n\n    _proto.push = function push(chunk) {\n      this.lineStream.push(chunk);\n    };\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n\n    _proto.end = function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    };\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n\n    _proto.addParser = function addParser(options) {\n      this.parseStream.addParser(options);\n    };\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n\n    _proto.addTagMapper = function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    };\n\n    return Parser;\n  }(Stream);\n\n  /*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\n\n  var isObject$1 = function isObject(obj) {\n    return !!obj && typeof obj === 'object';\n  };\n\n  var merge = function merge() {\n    for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n      objects[_key] = arguments[_key];\n    }\n\n    return objects.reduce(function (result, source) {\n      Object.keys(source).forEach(function (key) {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject$1(result[key]) && isObject$1(source[key])) {\n          result[key] = merge(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n\n  var values = function values(o) {\n    return Object.keys(o).map(function (k) {\n      return o[k];\n    });\n  };\n\n  var range = function range(start, end) {\n    var result = [];\n\n    for (var i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  var flatten = function flatten(lists) {\n    return lists.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n  };\n\n  var from = function from(list) {\n    if (!list.length) {\n      return [];\n    }\n\n    var result = [];\n\n    for (var i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n\n    return result;\n  };\n\n  var findIndexes = function findIndexes(l, key) {\n    return l.reduce(function (a, e, i) {\n      if (e[key]) {\n        a.push(i);\n      }\n\n      return a;\n    }, []);\n  };\n\n  var mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n    var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n      if (acc[name]) {\n        var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n        playlist.segments[0].discontinuity = true;\n\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      } else {\n        // first Period\n        acc[name] = playlist;\n      }\n\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(function (playlist) {\n      playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n      return playlist;\n    });\n  };\n\n  var formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n    var _attributes;\n\n    var attributes = _ref.attributes,\n        segments = _ref.segments;\n    var playlist = {\n      attributes: (_attributes = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs\n      }, _attributes['PROGRAM-ID'] = 1, _attributes),\n      uri: '',\n      endList: (attributes.type || 'static') === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    return playlist;\n  };\n\n  var formatVttPlaylist = function formatVttPlaylist(_ref2) {\n    var _attributes2;\n\n    var attributes = _ref2.attributes,\n        segments = _ref2.segments;\n\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodIndex,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n\n    return {\n      attributes: (_attributes2 = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n      uri: '',\n      endList: (attributes.type || 'static') === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n  };\n\n  var organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n    return playlists.reduce(function (a, playlist) {\n      var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n      var language = playlist.attributes.lang || '';\n      var label = 'main';\n\n      if (language) {\n        label = playlist.attributes.lang + \" (\" + role + \")\";\n      } // skip if we already have the highest quality audio for a language\n\n\n      if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n        return a;\n      }\n\n      a[label] = {\n        language: language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [formatAudioPlaylist(playlist)],\n        uri: ''\n      };\n      return a;\n    }, {});\n  };\n\n  var organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n    return playlists.reduce(function (a, playlist) {\n      var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n      if (a[label]) {\n        return a;\n      }\n\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [formatVttPlaylist(playlist)],\n        uri: ''\n      };\n      return a;\n    }, {});\n  };\n\n  var formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n    var _attributes3;\n\n    var attributes = _ref3.attributes,\n        segments = _ref3.segments;\n    var playlist = {\n      attributes: (_attributes3 = {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n      uri: '',\n      endList: (attributes.type || 'static') === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    return playlist;\n  };\n\n  var toM3u8 = function toM3u8(dashPlaylists) {\n    var _mediaGroups;\n\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all master attributes\n\n\n    var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n        duration = _dashPlaylists$0$attr.sourceDuration,\n        _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n        minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n    var videoOnly = function videoOnly(_ref4) {\n      var attributes = _ref4.attributes;\n      return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n    };\n\n    var audioOnly = function audioOnly(_ref5) {\n      var attributes = _ref5.attributes;\n      return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n    };\n\n    var vttOnly = function vttOnly(_ref6) {\n      var attributes = _ref6.attributes;\n      return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n    };\n\n    var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    var vttPlaylists = dashPlaylists.filter(vttOnly);\n    var master = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: (_mediaGroups = {\n        AUDIO: {},\n        VIDEO: {}\n      }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n      uri: '',\n      duration: duration,\n      playlists: videoPlaylists,\n      minimumUpdatePeriod: minimumUpdatePeriod * 1000\n    };\n\n    if (audioPlaylists.length) {\n      master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n    }\n\n    if (vttPlaylists.length) {\n      master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n    }\n\n    return master;\n  };\n\n  var commonjsGlobal$1 = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule$1(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var urlToolkit$1 = createCommonjsModule$1(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n\n    /* jshint ignore:start */\n    (function (root) {\n      /* jshint ignore:end */\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n      var URLToolkit = {\n        // jshint ignore:line\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      /* jshint ignore:start */\n\n      module.exports = URLToolkit;\n    })(commonjsGlobal$1);\n    /* jshint ignore:end */\n\n  });\n\n  var resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if the base URL is relative then combine with the current location\n\n\n    if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit$1.buildAbsoluteURL(window$1.location.href, baseUrl);\n    }\n\n    return urlToolkit$1.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls, follows\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n\n  var urlTypeToSegment = function urlTypeToSegment(_ref) {\n    var _ref$baseUrl = _ref.baseUrl,\n        baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n        _ref$source = _ref.source,\n        source = _ref$source === void 0 ? '' : _ref$source,\n        _ref$range = _ref.range,\n        range = _ref$range === void 0 ? '' : _ref$range;\n    var init = {\n      uri: source,\n      resolvedUri: resolveUrl(baseUrl || '', source)\n    };\n\n    if (range) {\n      var ranges = range.split('-');\n      var startRange = parseInt(ranges[0], 10);\n      var endRange = parseInt(ranges[1], 10);\n      init.byterange = {\n        length: endRange - startRange,\n        offset: startRange\n      };\n    }\n\n    return init;\n  };\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n\n\n  var getLiveRValue = function getLiveRValue(attributes, time, duration) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n    var _attributes$type = attributes.type,\n        type = _attributes$type === void 0 ? 'static' : _attributes$type,\n        _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n        _attributes$media = attributes.media,\n        media = _attributes$media === void 0 ? '' : _attributes$media,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n        timeline = attributes.periodIndex;\n    var segments = [];\n    var time = -1;\n\n    for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      var S = segmentTimeline[sIndex];\n      var duration = S.d;\n      var repeat = S.r || 0;\n      var segmentTime = S.t || 0;\n\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n\n      var count = void 0;\n\n      if (repeat < 0) {\n        var nextS = sIndex + 1;\n\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n\n      var end = startNumber + segments.length + count;\n      var number = startNumber + segments.length;\n\n      while (number < end) {\n        segments.push({\n          number: number,\n          duration: duration / timescale,\n          time: time,\n          timeline: timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n\n    return segments;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n\n  var segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    static: function _static(attributes) {\n      var duration = attributes.duration,\n          _attributes$timescale = attributes.timescale,\n          timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n          sourceDuration = attributes.sourceDuration;\n      return {\n        start: 0,\n        end: Math.ceil(sourceDuration / (duration / timescale))\n      };\n    },\n\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic: function dynamic(attributes) {\n      var NOW = attributes.NOW,\n          clientOffset = attributes.clientOffset,\n          availabilityStartTime = attributes.availabilityStartTime,\n          _attributes$timescale2 = attributes.timescale,\n          timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n          duration = attributes.duration,\n          _attributes$start = attributes.start,\n          start = _attributes$start === void 0 ? 0 : _attributes$start,\n          _attributes$minimumUp = attributes.minimumUpdatePeriod,\n          minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n          _attributes$timeShift = attributes.timeShiftBufferDepth,\n          timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n      var now = (NOW + clientOffset) / 1000;\n      var periodStartWC = availabilityStartTime + start;\n      var periodEndWC = now + minimumUpdatePeriod;\n      var periodDuration = periodEndWC - periodStartWC;\n      var segmentCount = Math.ceil(periodDuration * timescale / duration);\n      var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  var toSegments = function toSegments(attributes) {\n    return function (number, index) {\n      var duration = attributes.duration,\n          _attributes$timescale3 = attributes.timescale,\n          timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n          periodIndex = attributes.periodIndex,\n          _attributes$startNumb = attributes.startNumber,\n          startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n      return {\n        number: startNumber + number,\n        duration: duration / timescale,\n        timeline: periodIndex,\n        time: index * duration\n      };\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByDuration = function parseByDuration(attributes) {\n    var _attributes$type = attributes.type,\n        type = _attributes$type === void 0 ? 'static' : _attributes$type,\n        duration = attributes.duration,\n        _attributes$timescale4 = attributes.timescale,\n        timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n        sourceDuration = attributes.sourceDuration;\n\n    var _segmentRange$type = segmentRange[type](attributes),\n        start = _segmentRange$type.start,\n        end = _segmentRange$type.end;\n\n    var segments = range(start, end).map(toSegments(attributes));\n\n    if (type === 'static') {\n      var index = segments.length - 1; // final segment may be less than full segment duration\n\n      segments[index].duration = sourceDuration - duration / timescale * index;\n    }\n\n    return segments;\n  };\n\n  var identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  var identifierReplacement = function identifierReplacement(values) {\n    return function (match, identifier, format, width) {\n      if (match === '$$') {\n        // escape sequence\n        return '$';\n      }\n\n      if (typeof values[identifier] === 'undefined') {\n        return match;\n      }\n\n      var value = '' + values[identifier];\n\n      if (identifier === 'RepresentationID') {\n        // Format tag shall not be present with RepresentationID\n        return value;\n      }\n\n      if (!format) {\n        width = 1;\n      } else {\n        width = parseInt(width, 10);\n      }\n\n      if (value.length >= width) {\n        return value;\n      }\n\n      return \"\" + new Array(width - value.length + 1).join('0') + value;\n    };\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n\n  var constructTemplateUrl = function constructTemplateUrl(url, values) {\n    return url.replace(identifierPattern, identifierReplacement(values));\n  };\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodIndex\n      }];\n    }\n\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n\n  var segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n    var templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    var _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {\n      sourceURL: '',\n      range: ''\n    } : _attributes$initializ;\n    var mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    var segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(function (segment) {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      var uri = constructTemplateUrl(attributes.media || '', templateValues);\n      return {\n        uri: uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number\n      };\n    });\n  };\n\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n  var SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n    var duration = attributes.duration,\n        _attributes$segmentUr = attributes.segmentUrls,\n        segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n\n    var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n      return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n    });\n    var segmentTimeInfo;\n\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n\n    var segments = segmentTimeInfo.map(function (segmentTime, index) {\n      if (segmentUrlMap[index]) {\n        var segment = segmentUrlMap[index];\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n\n    }).filter(function (segment) {\n      return segment;\n    });\n    return segments;\n  };\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromBase = function segmentsFromBase(attributes) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$indexRang = attributes.indexRange,\n        indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n        duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: baseUrl,\n      range: indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      var segmentTimeInfo = parseByDuration(attributes);\n\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration / timescale;\n      segment.timeline = 0;\n    } // This is used for mediaSequence\n\n\n    segment.number = 0;\n    return [segment];\n  };\n\n  var generateSegments = function generateSegments(_ref) {\n    var attributes = _ref.attributes,\n        segmentInfo = _ref.segmentInfo;\n    var segmentAttributes;\n    var segmentsFn;\n\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge(attributes, segmentInfo.list);\n    }\n\n    if (!segmentsFn) {\n      return {\n        attributes: attributes\n      };\n    }\n\n    var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      var _segmentAttributes = segmentAttributes,\n          duration = _segmentAttributes.duration,\n          _segmentAttributes$ti = _segmentAttributes.timescale,\n          timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce(function (max, segment) {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n\n    return {\n      attributes: segmentAttributes,\n      segments: segments\n    };\n  };\n\n  var toPlaylists = function toPlaylists(representations) {\n    return representations.map(generateSegments);\n  };\n\n  var findChildren = function findChildren(element, name) {\n    return from(element.childNodes).filter(function (_ref) {\n      var tagName = _ref.tagName;\n      return tagName === name;\n    });\n  };\n\n  var getContent = function getContent(element) {\n    return element.textContent.trim();\n  };\n\n  var parseDuration = function parseDuration(str) {\n    var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    var SECONDS_IN_DAY = 24 * 60 * 60;\n    var SECONDS_IN_HOUR = 60 * 60;\n    var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    var match = durationRegex.exec(str);\n\n    if (!match) {\n      return 0;\n    }\n\n    var _match$slice = match.slice(1),\n        year = _match$slice[0],\n        month = _match$slice[1],\n        day = _match$slice[2],\n        hour = _match$slice[3],\n        minute = _match$slice[4],\n        second = _match$slice[5];\n\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n\n  var parseDate = function parseDate(str) {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n\n    return Date.parse(str);\n  };\n\n  var parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration: function mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime: function availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start: function start(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width: function width(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height: function height(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth: function bandwidth(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber: function startNumber(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The aprsed timescale\n     */\n    timescale: function timescale(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration: function duration(value) {\n      var parsedValue = parseInt(value, 10);\n\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n\n      return parsedValue;\n    },\n\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d: function d(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t: function t(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r: function r(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT: function DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  var parseAttributes$1 = function parseAttributes(el) {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n\n    return from(el.attributes).reduce(function (a, e) {\n      var parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = window$1.atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  var keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  var buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} timeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n\n  var getSegmentInformation = function getSegmentInformation(adaptationSet) {\n    var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n      return merge({\n        tag: 'SegmentURL'\n      }, parseAttributes$1(s));\n    });\n    var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    var segmentTimelineParentNode = segmentList || segmentTemplate;\n    var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    var template = segmentTemplate && parseAttributes$1(segmentTemplate);\n\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes$1(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n\n    var segmentInfo = {\n      template: template,\n      timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n        return parseAttributes$1(s);\n      }),\n      list: segmentList && merge(parseAttributes$1(segmentList), {\n        segmentUrls: segmentUrls,\n        initialization: parseAttributes$1(segmentInitialization)\n      }),\n      base: segmentBase && merge(parseAttributes$1(segmentBase), {\n        initialization: parseAttributes$1(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(function (key) {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n\n  var inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n    return function (representation) {\n      var repBaseUrlElements = findChildren(representation, 'BaseURL');\n      var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n      var attributes = merge(adaptationSetAttributes, parseAttributes$1(representation));\n      var representationSegmentInfo = getSegmentInformation(representation);\n      return repBaseUrls.map(function (baseUrl) {\n        return {\n          segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n          attributes: merge(attributes, {\n            baseUrl: baseUrl\n          })\n        };\n      });\n    };\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n\n  var generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n    return contentProtectionNodes.reduce(function (acc, node) {\n      var attributes = parseAttributes$1(node);\n      var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes: attributes\n        };\n        var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n        if (psshNode) {\n          var pssh = getContent(psshNode);\n          var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n          acc[keySystem].pssh = psshBuffer;\n        }\n      }\n\n      return acc;\n    }, {});\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n\n  var toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n    return function (adaptationSet) {\n      var adaptationSetAttributes = parseAttributes$1(adaptationSet);\n      var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n      var role = findChildren(adaptationSet, 'Role')[0];\n      var roleAttributes = {\n        role: parseAttributes$1(role)\n      };\n      var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n      var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n      if (Object.keys(contentProtection).length) {\n        attrs = merge(attrs, {\n          contentProtection: contentProtection\n        });\n      }\n\n      var segmentInfo = getSegmentInformation(adaptationSet);\n      var representations = findChildren(adaptationSet, 'Representation');\n      var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n      return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n    };\n  };\n  /**\n   * Maps an Period node to a list of Representation inforamtion objects for all\n   * AdaptationSet nodes contained within the Period\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {Node} period\n   *        Period node from the mpd\n   * @param {number} periodIndex\n   *        Index of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n\n  var toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n    return function (period, index) {\n      var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n      var periodAtt = parseAttributes$1(period);\n      var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n      var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n      var periodAttributes = merge(mpdAttributes, {\n        periodIndex: periodIndex\n      });\n      var adaptationSets = findChildren(period, 'AdaptationSet');\n      var periodSegmentInfo = getSegmentInformation(period);\n      return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n    };\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n\n  var inheritAttributes = function inheritAttributes(mpd, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$manifestUri = _options.manifestUri,\n        manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n        _options$NOW = _options.NOW,\n        NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n        _options$clientOffset = _options.clientOffset,\n        clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n    var periods = findChildren(mpd, 'Period');\n\n    if (!periods.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n\n    var mpdAttributes = parseAttributes$1(mpd);\n    var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n    return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n  };\n\n  var stringToMpdXml = function stringToMpdXml(manifestString) {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n\n    var parser = new window$1.DOMParser();\n    var xml = parser.parseFromString(manifestString, 'application/xml');\n    var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n\n    return mpd;\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n    var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n    if (!UTCTimingNode) {\n      return null;\n    }\n\n    var attributes = parseAttributes$1(UTCTimingNode);\n\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n\n    return attributes;\n  };\n\n  var parse = function parse(manifestString, options) {\n    return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTiming = function parseUTCTiming(manifestString) {\n    return parseUTCTimingScheme(stringToMpdXml(manifestString));\n  };\n\n  var toUnsigned = function toUnsigned(value) {\n    return value >>> 0;\n  };\n\n  var bin = {\n    toUnsigned: toUnsigned\n  };\n\n  var toUnsigned$1 = bin.toUnsigned;\n\n  var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n  _findBox = function findBox(data, path) {\n    var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of data\n\n\n    return results;\n  };\n  /**\n   * Returns the string representation of an ASCII encoded four byte buffer.\n   * @param buffer {Uint8Array} a four-byte buffer to translate\n   * @return {string} the corresponding string\n   */\n\n\n  parseType = function parseType(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n\n  timescale = function timescale(init) {\n    var result = {},\n        traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = _findBox(trak, ['tkhd'])[0];\n\n      if (!tkhd) {\n        return null;\n      }\n\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n      if (!mdhd) {\n        return null;\n      }\n\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n\n  startTime = function startTime(timescale, fragment) {\n    var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n    trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    baseTimes = [].concat.apply([], trafs.map(function (traf) {\n      return _findBox(traf, ['tfhd']).map(function (tfhd) {\n        var id, scale, baseTime; // get the track id from the tfhd\n\n        id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n          var version, result;\n          version = tfdt[0];\n          result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n          if (version === 1) {\n            result *= Math.pow(2, 32);\n            result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n          }\n\n          return result;\n        })[0];\n        baseTime = baseTime || Infinity; // convert base time to seconds\n\n        return baseTime / scale;\n      });\n    })); // return the minimum\n\n    result = Math.min.apply(null, baseTimes);\n    return isFinite(result) ? result : 0;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n\n  getVideoTrackIds = function getVideoTrackIds(init) {\n    var traks = _findBox(init, ['moov', 'trak']);\n\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n      var tkhds = _findBox(trak, ['tkhd']);\n\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n\n  var probe = {\n    findBox: _findBox,\n    parseType: parseType,\n    timescale: timescale,\n    startTime: startTime,\n    videoTrackIds: getVideoTrackIds\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) 2015 Brightcove\n   * All rights reserved.\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var UINT32_MAX = Math.pow(2, 32) - 1;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function box(type) {\n    var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n\n    return result;\n  };\n\n  dinf = function dinf() {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n\n  esds = function esds(track) {\n    return box(types.esds, new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15, // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function ftyp() {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n\n  hdlr = function hdlr(type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n\n  mdat = function mdat(data) {\n    return box(types.mdat, data);\n  };\n\n  mdhd = function mdhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n    0x55, 0xc4, // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n\n    return box(types.mdhd, result);\n  };\n\n  mdia = function mdia(track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n\n  mfhd = function mfhd(sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function minf(track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n\n  moof = function moof(sequenceNumber, tracks) {\n    var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n\n  moov = function moov(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n\n  mvex = function mvex(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n\n  mvhd = function mvhd(duration) {\n    var bytes = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // creation_time\n    0x00, 0x00, 0x00, 0x02, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\n    0x01, 0x00, // 1.0 volume\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n\n  sdtp = function sdtp(track) {\n    var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n\n    return box(types.sdtp, bytes);\n  };\n\n  stbl = function stbl(track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n\n  (function () {\n    var videoSample, audioSample;\n\n    stsd = function stsd(track) {\n      return box(types.stsd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n\n    videoSample = function videoSample(track) {\n      var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n\n      return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length // numOfSequenceParameterSets\n      ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n      ]).concat(pictureParameterSets))), // \"PPS\"\n      box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n      );\n    };\n\n    audioSample = function audioSample(track) {\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n\n  tkhd = function tkhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n\n  traf = function traf(track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 + // tfhd\n    20 + // tfdt\n    8 + // traf header\n    16 + // mfhd\n    8 + // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n\n  trak = function trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n\n  trex = function trex(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n\n    return box(types.trex, result);\n  };\n\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function trunHeader(samples, offset) {\n      var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n\n      return [0x00, // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function videoTrun(track, offset) {\n      var bytes, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      bytes = trunHeader(samples, offset);\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n        sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n        ]);\n      }\n\n      return box(types.trun, new Uint8Array(bytes));\n    };\n\n    audioTrun = function audioTrun(track, offset) {\n      var bytes, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      bytes = trunHeader(samples, offset);\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n      }\n\n      return box(types.trun, new Uint8Array(bytes));\n    };\n\n    trun = function trun(track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n\n      return videoTrun(track, offset);\n    };\n  })();\n\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function initSegment(tracks) {\n      var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) 2014 Brightcove\n   * All rights reserved.\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$1 = function Stream() {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n\n      this.off = function (type, listener) {\n        var index;\n\n        if (!listeners[type]) {\n          return false;\n        }\n\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream$1.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n\n  Stream$1.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n\n  Stream$1.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n\n  var stream = Stream$1;\n\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n    var i,\n        currentNal,\n        currentFrame = [],\n        frames = [];\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          frames.push(currentFrame);\n        }\n\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n\n\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n    var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n\n  var createDefaultSample = function createDefaultSample() {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n\n  var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n    var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n\n  var concatenateNalData = function concatenateNalData(gops) {\n    var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  var frameUtils = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable,\n    concatenateNalData: concatenateNalData\n  };\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n  var zeroFill = function zeroFill(count) {\n    var a = [];\n\n    while (count--) {\n      a.push(0);\n    }\n\n    return a;\n  };\n\n  var makeTable = function makeTable(metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n  var coneOfSilence = {\n    96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n    88200: [highPrefix, [231], zeroFill(170), [56]],\n    64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n    48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n    44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n    32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n    24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n    16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n    12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n    11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n    8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n  };\n  var silence = makeTable(coneOfSilence);\n\n  var ONE_SECOND_IN_TS = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n\n  var clock = {\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs\n  };\n\n  var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\n    var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n      return;\n    }\n\n    silentFrame = silence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n\n  var generateSampleTable$1 = function generateSampleTable(frames) {\n    var i,\n        currentFrame,\n        samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n\n  var concatenateFrameData = function concatenateFrameData(frames) {\n    var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var audioFrameUtils = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable$1,\n    concatenateFrameData: concatenateFrameData\n  };\n\n  var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function collectDtsInfo(track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n\n  var clearDtsInfo = function clearDtsInfo(track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$2;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n\n    return baseMediaDecodeTime;\n  };\n\n  var trackDecodeInfo = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) 2015 Brightcove\n   * All rights reserved.\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function parseSei(bytes) {\n    var i = 0,\n        result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        result.payloadType = payloadType;\n        result.payloadSize = payloadSize;\n        result.payload = bytes.subarray(i, i + payloadSize);\n        break;\n      } // skip the payload and parse the next message\n\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n  var parseUserData = function parseUserData(sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n    var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n\n    count = userData[0] & 0x1f;\n\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n\n    return results;\n  };\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  }; // exports\n\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n\n  // Link To Transport\n  // -----------------\n\n\n  var CaptionStream = function CaptionStream() {\n    CaptionStream.prototype.init.call(this);\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n  };\n\n  CaptionStream.prototype = new stream();\n\n  CaptionStream.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n\n      return;\n    } // parse out CC data packets and save them for later\n\n\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n\n  CaptionStream.prototype.flush = function () {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } // this is where an 'else' would go for a dispatching packets\n      // to a theoretical Cea708Stream that handles SERVICEn data\n\n    }, this);\n    this.captionPackets_.length = 0;\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  };\n\n  CaptionStream.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  };\n\n  CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, discard the\n      // data; we don't want jumbled captions\n      return;\n    }\n\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n\n  CaptionStream.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n\n  CaptionStream.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n\n  };\n\n  var getCharFromCode = function getCharFromCode(code) {\n    if (code === null) {\n      return '';\n    }\n\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function createDisplayBuffer() {\n    var result = [],\n        i = BOTTOM_ROW + 1;\n\n    while (i--) {\n      result.push('');\n    }\n\n    return result;\n  };\n\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n\n          this.setRollUp(packet.pts, row);\n        }\n\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n\n    };\n  };\n\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    }) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n\n    this.displayed_[this.row_] = '';\n  };\n\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n\n  var captionStream = {\n    CaptionStream: CaptionStream,\n    Cea608Stream: Cea608Stream\n  };\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n\n  var handleRollover = function handleRollover(value, reference) {\n    var direction = 1;\n\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n\n    return value;\n  };\n\n  var TimestampRolloverStream = function TimestampRolloverStream(type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream.prototype.init.call(this);\n    this.type_ = type;\n\n    this.push = function (data) {\n      if (data.type !== this.type_) {\n        return;\n      }\n\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n\n      data.dts = handleRollover(data.dts, referenceDTS);\n      data.pts = handleRollover(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n  };\n\n  TimestampRolloverStream.prototype = new stream();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream,\n    handleRollover: handleRollover\n  };\n\n  var percentEncode = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function parseUtf8(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n      parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  },\n      tagParsers = {\n    TXXX: function TXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n\n      tag.data = tag.value;\n    },\n    WXXX: function WXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function PRIV(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n      _MetadataStream;\n\n  _MetadataStream = function MetadataStream(options) {\n    var settings = {\n      debug: !!(options && options.debug),\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n        // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n        // tag data that is not complete enough to be parsed\n    buffer = [],\n        // the total number of bytes currently in the buffer\n    bufferSize = 0,\n        i;\n\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        if (settings.debug) {\n          // eslint-disable-next-line no-console\n          console.log('Skipping unrecognized metadata packet');\n        }\n\n        return;\n      } // add this chunk to the data we've collected so far\n\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n\n      frameStart = 10;\n\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          // eslint-disable-next-line no-console\n          return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n        }\n\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id;\n\n        if (tagParsers[frame.id]) {\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n\n            this.trigger('timestamp', frame);\n          }\n        }\n\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n\n      this.trigger('data', tag);\n    };\n  };\n\n  _MetadataStream.prototype = new stream();\n  var metadataStream = _MetadataStream;\n\n  var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n  var MP2T_PACKET_LENGTH = 188,\n      // bytes\n  SYNC_BYTE = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  _TransportPacketStream = function TransportPacketStream() {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n        bytesInBuffer = 0;\n\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n\n      this.trigger('done');\n    };\n  };\n\n  _TransportPacketStream.prototype = new stream();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  _TransportParseStream = function TransportParseStream() {\n    var parsePsi, parsePat, parsePmt, self;\n\n    _TransportParseStream.prototype.init.call(this);\n\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n\n    parsePsi = function parsePsi(payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n\n    parsePat = function parsePat(payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n\n    parsePmt = function parsePmt(payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n\n    this.push = function (packet) {\n      var result = {},\n          offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = streamTypes.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n\n  _TransportParseStream.prototype = new stream();\n  _TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  _ElementaryStream = function ElementaryStream() {\n    var self = this,\n        // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n        audio = {\n      data: [],\n      size: 0\n    },\n        timedMetadata = {\n      data: [],\n      size: 0\n    },\n        parsePes = function parsePes(payload, pes) {\n      var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      } // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n\n\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function flushStream(stream$$1, type, forceFlush) {\n      var packetData = new Uint8Array(stream$$1.size),\n          event = {\n        type: type\n      },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n      // PES header\n\n      if (!stream$$1.data.length || stream$$1.size < 9) {\n        return;\n      }\n\n      event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n      for (i = 0; i < stream$$1.data.length; i++) {\n        fragment = stream$$1.data[i];\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      } // parse assembled packet's PES header\n\n\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n\n      packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n      if (forceFlush || packetFlushable) {\n        stream$$1.size = 0;\n        stream$$1.data.length = 0;\n      } // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n\n\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n    _ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n\n    this.push = function (data) {\n      ({\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function pes() {\n          var stream$$1, streamType;\n\n          switch (data.streamType) {\n            case streamTypes.H264_STREAM_TYPE:\n            case streamTypes.H264_STREAM_TYPE:\n              stream$$1 = video;\n              streamType = 'video';\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              stream$$1 = audio;\n              streamType = 'audio';\n              break;\n\n            case streamTypes.METADATA_STREAM_TYPE:\n              stream$$1 = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream$$1, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n\n          stream$$1.data.push(data);\n          stream$$1.size += data.data.byteLength;\n        },\n        pmt: function pmt() {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          },\n              programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n\n    this.flush = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n      this.trigger('done');\n    };\n  };\n\n  _ElementaryStream.prototype = new stream();\n  var m2ts = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n    TransportPacketStream: _TransportPacketStream,\n    TransportParseStream: _TransportParseStream,\n    ElementaryStream: _ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    CaptionStream: captionStream.CaptionStream,\n    Cea608Stream: captionStream.Cea608Stream,\n    MetadataStream: metadataStream\n  };\n\n  for (var type$1 in streamTypes) {\n    if (streamTypes.hasOwnProperty(type$1)) {\n      m2ts[type$1] = streamTypes[type$1];\n    }\n  }\n\n  var m2ts_1 = m2ts;\n\n  var _AdtsStream;\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  _AdtsStream = function AdtsStream() {\n    var buffer;\n\n    _AdtsStream.prototype.init.call(this);\n\n    this.push = function (packet) {\n      var i = 0,\n          frameNum = 0,\n          frameLength,\n          protectionSkipBytes,\n          frameEnd,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n\n      if (buffer) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n      while (i + 5 < buffer.length) {\n        // Loook for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n        frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n        // and wait for more data\n\n        if (buffer.byteLength < frameEnd) {\n          return;\n        } // Otherwise, deliver the complete AAC frame\n\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n        }); // If the buffer is empty, clear it and return\n\n        if (buffer.byteLength === frameEnd) {\n          buffer = undefined;\n          return;\n        }\n\n        frameNum++; // Remove the finished frame from the buffer and start the process again\n\n        buffer = buffer.subarray(frameEnd);\n      }\n    };\n\n    this.flush = function () {\n      this.trigger('done');\n    };\n  };\n\n  _AdtsStream.prototype = new stream();\n  var adts = _AdtsStream;\n\n  var ExpGolomb;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb = function ExpGolomb(workingData) {\n    var // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n    workingWord = 0,\n        // :uint\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n      valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n\n      bits = size - bits;\n\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n\n      return valu;\n    }; // ():uint\n\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n\n    this.loadWord();\n  };\n\n  var expGolomb = ExpGolomb;\n\n  var _H264Stream, _NalByteStream;\n\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  _NalByteStream = function NalByteStream() {\n    var syncPoint = 0,\n        i,\n        buffer;\n\n    _NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n\n    this.push = function (data) {\n      var swapBuffer;\n\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      } // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n\n      for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n\n      while (i < buffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < buffer.length);\n\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n  };\n\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  _H264Stream = function H264Stream() {\n    var nalByteStream = new _NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n\n    _H264Stream.prototype.init.call(this);\n\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n      switch (data[0] & 0x1f) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n\n        default:\n          break;\n      } // This triggers data on the H264Stream\n\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          sarScale = 1,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio,\n          aspectRatioIdc,\n          i;\n      expGolombDecoder = new expGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n\n            case 2:\n              sarRatio = [12, 11];\n              break;\n\n            case 3:\n              sarRatio = [10, 11];\n              break;\n\n            case 4:\n              sarRatio = [16, 11];\n              break;\n\n            case 5:\n              sarRatio = [40, 33];\n              break;\n\n            case 6:\n              sarRatio = [24, 11];\n              break;\n\n            case 7:\n              sarRatio = [20, 11];\n              break;\n\n            case 8:\n              sarRatio = [32, 11];\n              break;\n\n            case 9:\n              sarRatio = [80, 33];\n              break;\n\n            case 10:\n              sarRatio = [18, 11];\n              break;\n\n            case 11:\n              sarRatio = [15, 11];\n              break;\n\n            case 12:\n              sarRatio = [64, 33];\n              break;\n\n            case 13:\n              sarRatio = [160, 99];\n              break;\n\n            case 14:\n              sarRatio = [4, 3];\n              break;\n\n            case 15:\n              sarRatio = [3, 2];\n              break;\n\n            case 16:\n              sarRatio = [2, 1];\n              break;\n\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n\n          if (sarRatio) {\n            sarScale = sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n      };\n    };\n  };\n\n  _H264Stream.prototype = new stream();\n  var h264 = {\n    H264Stream: _H264Stream,\n    NalByteStream: _NalByteStream\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) 2016 Brightcove\n   * All rights reserved.\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n  var isLikelyAacData = function isLikelyAacData(data) {\n    if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n\n  var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n\n  var parseType$1 = function parseType(header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n\n    return null;\n  };\n\n  var parseSampleRate = function parseSampleRate(packet) {\n    var i = 0;\n\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n    }\n\n    return null;\n  };\n\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        return null;\n      }\n\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591$1(frame, 0, i);\n\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n\n            break;\n          }\n        }\n      }\n\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n\n    return null;\n  };\n\n  var utils = {\n    isLikelyAacData: isLikelyAacData,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$1,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n\n  var _AacStream;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n\n  _AacStream = function AacStream() {\n    var everything = new Uint8Array(),\n        timeStamp = 0;\n\n    _AacStream.prototype.init.call(this);\n\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n\n    this.push = function (bytes) {\n      var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n\n        byteIndex++;\n      }\n\n      bytesLeft = everything.length - byteIndex;\n\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n  };\n\n  _AacStream.prototype = new stream();\n  var aac = _AacStream;\n\n  var H264Stream = h264.H264Stream;\n  var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n\n  var arrayEquals = function arrayEquals(a, b) {\n    var i;\n\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\n    var adtsFrames = [],\n        sequenceNumber = 0,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n\n    _AudioSegmentStream.prototype.init.call(this);\n\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n\n      adtsFrames.push(data);\n    };\n\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n    };\n\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n\n    this.flush = function () {\n      var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4Generator.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n  };\n\n  _AudioSegmentStream.prototype = new stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\n    var sequenceNumber = 0,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n    options = options || {};\n\n    _VideoSegmentStream.prototype.init.call(this);\n\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n\n    this.flush = function () {\n      var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n      allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          break;\n        }\n\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n\n        gopIndex--;\n      }\n\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n\n      var trimIndex;\n\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n\n      if (trimIndex === 0) {\n        return gops;\n      }\n\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n\n  _VideoSegmentStream.prototype = new stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    }\n\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n\n      this.pendingTracks.push(output.track);\n      this.pendingBoxes.push(output.boxes);\n      this.pendingBytes += output.boxes.byteLength;\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n      }\n\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n      }\n    };\n  };\n\n  _CoalesceStream.prototype = new stream();\n\n  _CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n        event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n\n        return;\n      }\n    }\n\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n\n    if (this.pendingTracks.length === 1) {\n      event.type = this.pendingTracks[0].type;\n    } else {\n      event.type = 'combined';\n    }\n\n    this.emittedTracks += this.pendingTracks.length;\n    initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n    event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n    // and track definitions\n\n    event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n    event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n    for (i = 0; i < this.pendingBoxes.length; i++) {\n      event.data.set(this.pendingBoxes[i], offset);\n      offset += this.pendingBoxes[i].byteLength;\n    } // Translate caption PTS times into second offsets to match the\n    // video timeline for the segment, and add track info\n\n\n    for (i = 0; i < this.pendingCaptions.length; i++) {\n      caption = this.pendingCaptions[i];\n      caption.startTime = caption.startPts;\n\n      if (!this.keepOriginalTimestamps) {\n        caption.startTime -= timelineStartPts;\n      }\n\n      caption.startTime /= 90e3;\n      caption.endTime = caption.endPts;\n\n      if (!this.keepOriginalTimestamps) {\n        caption.endTime -= timelineStartPts;\n      }\n\n      caption.endTime /= 90e3;\n      event.captionStreams[caption.stream] = true;\n      event.captions.push(caption);\n    } // Translate ID3 frame PTS times into second offsets to match the\n    // video timeline for the segment\n\n\n    for (i = 0; i < this.pendingMetadata.length; i++) {\n      id3 = this.pendingMetadata[i];\n      id3.cueTime = id3.pts;\n\n      if (!this.keepOriginalTimestamps) {\n        id3.cueTime -= timelineStartPts;\n      }\n\n      id3.cueTime /= 90e3;\n      event.metadata.push(id3);\n    } // We add this to every single emitted segment even though we only need\n    // it for the first\n\n\n    event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n    this.pendingTracks.length = 0;\n    this.videoTrack = null;\n    this.pendingBoxes.length = 0;\n    this.pendingCaptions.length = 0;\n    this.pendingBytes = 0;\n    this.pendingMetadata.length = 0; // Emit the built segment\n\n    this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n\n  _Transmuxer = function Transmuxer(options) {\n    var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n\n    _Transmuxer.prototype.init.call(this);\n\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new aac();\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n    };\n\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n      pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts_1.CaptionStream();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n      pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.\n              if (audioTrack) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            }); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n    }; // hook up the segment streams once track metadata is delivered\n\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n\n        if (!options.keepOriginalTimestamps) {\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n          pipeline.videoTimestampRolloverStream.discontinuity();\n        }\n\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n\n        if (!options.keepOriginalTimestamps) {\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n      }\n\n      if (pipeline.timedMetadataTimestampRolloverStream) {\n        pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n      }\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    }; // feed incoming data to the front of the parsing pipeline\n\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData$1(data);\n\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n\n        hasFlushed = false;\n      }\n\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    }; // Caption data has to be reset when seeking outside buffered range\n\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n\n  _Transmuxer.prototype = new stream();\n  var transmuxer = {\n    Transmuxer: _Transmuxer,\n    VideoSegmentStream: _VideoSegmentStream,\n    AudioSegmentStream: _AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n  };\n\n  var inspectMp4,\n      _textifyMp,\n      parseType$2 = probe.parseType,\n      parseMp4Date = function parseMp4Date(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n      parseSampleFlags = function parseSampleFlags(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  },\n      nalParse = function nalParse(avcStream) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = [],\n        i,\n        length;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x01:\n          result.push('slice_layer_without_partitioning_rbsp');\n          break;\n\n        case 0x05:\n          result.push('slice_layer_without_partitioning_rbsp_idr');\n          break;\n\n        case 0x06:\n          result.push('sei_rbsp');\n          break;\n\n        case 0x07:\n          result.push('seq_parameter_set_rbsp');\n          break;\n\n        case 0x08:\n          result.push('pic_parameter_set_rbsp');\n          break;\n\n        case 0x09:\n          result.push('access_unit_delimiter_rbsp');\n          break;\n\n        default:\n          result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n          break;\n      }\n    }\n\n    return result;\n  },\n      // registry of handlers for individual mp4 box types\n  parse$1 = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function avc1(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n        vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function avcC(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        configurationVersion: data[0],\n        avcProfileIndication: data[1],\n        profileCompatibility: data[2],\n        avcLevelIndication: data[3],\n        lengthSizeMinusOne: data[4] & 0x03,\n        sps: [],\n        pps: []\n      },\n          numOfSequenceParameterSets = data[5] & 0x1f,\n          numOfPictureParameterSets,\n          nalSize,\n          offset,\n          i; // iterate past any SPSs\n\n      offset = 6;\n\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      } // iterate past any PPSs\n\n\n      numOfPictureParameterSets = data[offset];\n      offset++;\n\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n\n      return result;\n    },\n    btrt: function btrt(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function esds(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: data[6] << 8 | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: data[12] >>> 2 & 0x3f,\n          bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n          maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n          avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: data[26] >>> 3 & 0x1f,\n            samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n            channelConfiguration: data[27] >>> 3 & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function ftyp(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        majorBrand: parseType$2(data.subarray(0, 4)),\n        minorVersion: view.getUint32(4),\n        compatibleBrands: []\n      },\n          i = 8;\n\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n        i += 4;\n      }\n\n      return result;\n    },\n    dinf: function dinf(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function dref(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function hdlr(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        handlerType: parseType$2(data.subarray(8, 12)),\n        name: ''\n      },\n          i = 8; // parse out the name field\n\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n\n        result.name += String.fromCharCode(data[i]);\n      } // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n      result.name = decodeURIComponent(escape(result.name));\n      return result;\n    },\n    mdat: function mdat(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function mdhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          language,\n          result = {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        language: ''\n      };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n\n      i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n      return result;\n    },\n    mdia: function mdia(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function mfhd(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n    },\n    minf: function minf(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function mp4a(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        // 6 bytes reserved\n        dataReferenceIndex: view.getUint16(6),\n        // 4 + 4 bytes reserved\n        channelcount: view.getUint16(16),\n        samplesize: view.getUint16(18),\n        // 2 bytes pre_defined\n        // 2 bytes reserved\n        samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n      }; // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n\n      return result;\n    },\n    moof: function moof(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function moov(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function mvex(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function mvhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n\n      i += 4; // convert fixed-point, base 16 back to a number\n\n      result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n      i += 4;\n      result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function pdin(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function sdtp(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n\n      return result;\n    },\n    sidx: function sidx(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8),\n        earliestPresentationTime: view.getUint32(12),\n        firstOffset: view.getUint32(16)\n      },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function smhd(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + data[5] / 256\n      };\n    },\n    stbl: function stbl(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function stco(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        chunkOffsets: []\n      },\n          entryCount = view.getUint32(4),\n          i;\n\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n\n      return result;\n    },\n    stsc: function stsc(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          entryCount = view.getUint32(4),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleToChunks: []\n      },\n          i;\n\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n\n      return result;\n    },\n    stsd: function stsd(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function stsz(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleSize: view.getUint32(4),\n        entries: []\n      },\n          i;\n\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n\n      return result;\n    },\n    stts: function stts(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        timeToSamples: []\n      },\n          entryCount = view.getUint32(4),\n          i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n\n      return result;\n    },\n    styp: function styp(data) {\n      return parse$1.ftyp(data);\n    },\n    tfdt: function tfdt(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n\n      return result;\n    },\n    tfhd: function tfhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n          baseDataOffsetPresent = result.flags[2] & 0x01,\n          sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n          defaultSampleDurationPresent = result.flags[2] & 0x08,\n          defaultSampleSizePresent = result.flags[2] & 0x10,\n          defaultSampleFlagsPresent = result.flags[2] & 0x20,\n          durationIsEmpty = result.flags[0] & 0x010000,\n          defaultBaseIsMoof = result.flags[0] & 0x020000,\n          i;\n      i = 8;\n\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n\n      return result;\n    },\n    tkhd: function tkhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2; // convert fixed-point, base 16 back to a number\n\n      result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n      i += 4;\n      result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n      return result;\n    },\n    traf: function traf(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function trak(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function trex(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function trun(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n          // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n          // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n          // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n          // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n          // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n          // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n          offset = 8,\n          sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n      }\n\n      return result;\n    },\n    'url ': function url(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function vmhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n      };\n    }\n  };\n  /**\n   * Return a javascript array of box objects parsed from an ISO base\n   * media file.\n   * @param data {Uint8Array} the binary data of the media to be inspected\n   * @return {array} a javascript array of potentially nested box objects\n   */\n\n\n  inspectMp4 = function inspectMp4(data) {\n    var i = 0,\n        result = [],\n        view,\n        size,\n        type,\n        end,\n        box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n    var ab = new ArrayBuffer(data.length);\n    var v = new Uint8Array(ab);\n\n    for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n    }\n\n    view = new DataView(ab);\n\n    while (i < data.byteLength) {\n      // parse box data\n      size = view.getUint32(i);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n      box = (parse$1[type] || function (data) {\n        return {\n          data: data\n        };\n      })(data.subarray(i + 8, end));\n\n      box.size = size;\n      box.type = type; // store this box and move to the next\n\n      result.push(box);\n      i = end;\n    }\n\n    return result;\n  };\n  /**\n   * Returns a textual representation of the javascript represtentation\n   * of an MP4 file. You can use it as an alternative to\n   * JSON.stringify() to compare inspected MP4s.\n   * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n   * file\n   * @param depth {number} (optional) the number of ancestor boxes of\n   * the elements of inspectedMp4. Assumed to be zero if unspecified.\n   * @return {string} a text representation of the parsed MP4\n   */\n\n\n  _textifyMp = function textifyMp4(inspectedMp4, depth) {\n    var indent;\n    depth = depth || 0;\n    indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n    return inspectedMp4.map(function (box, index) {\n      // list the box type first at the current indentation level\n      return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function (key) {\n        return key !== 'type' && key !== 'boxes'; // output all the box properties\n      }).map(function (key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key]; // print out raw bytes as hexademical\n\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n            return ' ' + ('00' + byte.toString(16)).slice(-2);\n          }).join('').match(/.{1,24}/g);\n\n          if (!bytes) {\n            return prefix + '<>';\n          }\n\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n\n          return prefix + '<\\n' + bytes.map(function (line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        } // stringify generic objects\n\n\n        return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n          if (index === 0) {\n            return line;\n          }\n\n          return indent + '  ' + line;\n        }).join('\\n');\n      }).join('\\n') + ( // recursively textify the child boxes\n      box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n    }).join('\\n');\n  };\n\n  var mp4Inspector = {\n    inspect: inspectMp4,\n    textify: _textifyMp,\n    parseTfdt: parse$1.tfdt,\n    parseHdlr: parse$1.hdlr,\n    parseTfhd: parse$1.tfhd,\n    parseTrun: parse$1.trun,\n    parseSidx: parse$1.sidx\n  };\n\n  var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream$1 = captionStream.CaptionStream;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function mapToSample(offset, samples) {\n    var approximateOffset = offset;\n\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n\n      approximateOffset -= sample.size;\n    }\n\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = [],\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes$1(data),\n            trackId: trackId\n          };\n\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          }\n\n          result.push(seiNal);\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = mp4Inspector.parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n\n        sample.pts = currentDts + sample.compositionTimeOffset;\n        currentDts += sample.duration;\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n    // To get the samples\n    var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = probe.findBox(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = probe.findBox(traf, ['trun']);\n      var samples;\n      var seiNals; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        seiNals = findSeiNals(mdat, samples, trackId);\n\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = [];\n        }\n\n        captionNals[trackId] = captionNals[trackId].concat(seiNals);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n    var seiNals;\n\n    if (!trackId) {\n      return null;\n    }\n\n    seiNals = parseCaptionNals(segment, trackId);\n    return {\n      seiNals: seiNals[trackId],\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n\n  var CaptionParser = function CaptionParser() {\n    var isInitialized = false;\n    var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n\n    this.init = function () {\n      captionStream$$1 = new CaptionStream$1();\n      isInitialized = true; // Collect dispatched captions\n\n      captionStream$$1.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one\n      } else if (!trackId || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n      if (parsedData === null || !parsedData.seiNals) {\n        return null;\n      }\n\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n\n      nals.forEach(function (nal) {\n        captionStream$$1.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream$$1.flush();\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream$$1.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {}\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n\n      this.resetCaptionStream();\n    };\n\n    this.reset();\n  };\n\n  var captionParser = CaptionParser;\n\n  var mp4 = {\n    generator: mp4Generator,\n    probe: probe,\n    Transmuxer: transmuxer.Transmuxer,\n    AudioSegmentStream: transmuxer.AudioSegmentStream,\n    VideoSegmentStream: transmuxer.VideoSegmentStream,\n    CaptionParser: captionParser\n  };\n  var mp4_6 = mp4.CaptionParser;\n\n  var parsePid = function parsePid(packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n    return !!(packet[1] & 0x40);\n  };\n\n  var parseAdaptionField = function parseAdaptionField(packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n\n    return offset;\n  };\n\n  var parseType$3 = function parseType(packet, pmtPid) {\n    var pid = parsePid(packet);\n\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n\n    return null;\n  };\n\n  var parsePat = function parsePat(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n\n  var parsePmt = function parsePmt(packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n\n    return programMapTable;\n  };\n\n  var parsePesType = function parsePesType(packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n\n    switch (type) {\n      case streamTypes.H264_STREAM_TYPE:\n        return 'video';\n\n      case streamTypes.ADTS_STREAM_TYPE:\n        return 'audio';\n\n      case streamTypes.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n\n      default:\n        return null;\n    }\n  };\n\n  var parsePesTime = function parsePesTime(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n\n    if (!pusi) {\n      return null;\n    }\n\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n\n  var parseNalUnitType = function parseNalUnitType(type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n\n      case 0x06:\n        return 'sei_rbsp';\n\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n\n      default:\n        return null;\n    }\n  };\n\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n\n    return foundKeyFrame;\n  };\n\n  var probe$1 = {\n    parseType: parseType$3,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n\n  var handleRollover$1 = timestampRolloverStream.handleRollover;\n  var probe$2 = {};\n  probe$2.ts = probe$1;\n  probe$2.aac = utils;\n  var PES_TIMESCALE = 90000,\n      MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n  SYNC_BYTE$1 = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        packet,\n        type;\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE$1 && bytes[endIndex] === SYNC_BYTE$1) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe$2.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pat':\n            if (!pmt.pid) {\n              pmt.pid = probe$2.ts.parsePat(packet);\n            }\n\n            break;\n\n          case 'pmt':\n            if (!pmt.table) {\n              pmt.table = probe$2.ts.parsePmt(packet);\n            }\n\n            break;\n\n          default:\n            break;\n        } // Found the pat and pmt, we can stop walking the segment\n\n\n        if (pmt.pid && pmt.table) {\n          return;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH$1;\n        endIndex += MP2T_PACKET_LENGTH$1;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE$1 && (bytes[endIndex] === SYNC_BYTE$1 || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe$2.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe$2.ts.parsePesType(packet, pmt.table);\n            pusi = probe$2.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe$2.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH$1;\n        endIndex += MP2T_PACKET_LENGTH$1;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH$1;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE$1 && (bytes[endIndex] === SYNC_BYTE$1 || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe$2.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe$2.ts.parsePesType(packet, pmt.table);\n            pusi = probe$2.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe$2.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH$1;\n        endIndex -= MP2T_PACKET_LENGTH$1;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE$1 && bytes[endIndex] === SYNC_BYTE$1) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe$2.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe$2.ts.parsePesType(packet, pmt.table);\n            pusi = probe$2.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe$2.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n\n                    if (probe$2.ts.videoPacketContainsKeyFrame(frame)) {\n                      result.firstKeyFrame = probe$2.ts.parsePesTime(frame);\n                      result.firstKeyFrame.type = 'video';\n                    }\n\n                    currentFrame.size = 0;\n                  }\n                }\n\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH$1;\n        endIndex += MP2T_PACKET_LENGTH$1;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH$1;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE$1 && bytes[endIndex] === SYNC_BYTE$1) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe$2.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe$2.ts.parsePesType(packet, pmt.table);\n            pusi = probe$2.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video' && pusi) {\n              parsed = probe$2.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH$1;\n        endIndex -= MP2T_PACKET_LENGTH$1;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n\n      if (typeof audioBaseTimestamp === 'undefined') {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover$1(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover$1(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / PES_TIMESCALE;\n        info.ptsTime = info.pts / PES_TIMESCALE;\n      });\n    }\n\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n\n      if (typeof videoBaseTimestamp === 'undefined') {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover$1(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover$1(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / PES_TIMESCALE;\n        info.ptsTime = info.pts / PES_TIMESCALE;\n      });\n\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover$1(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover$1(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / PES_TIMESCALE;\n        frame.ptsTime = frame.dts / PES_TIMESCALE;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n\n  var inspectAac_ = function inspectAac_(bytes) {\n    var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe$2.aac.parseType(bytes, byteIndex);\n\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe$2.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe$2.aac.parseAacTimestamp(packet);\n          }\n\n          byteIndex += frameSize;\n          break;\n\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe$2.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe$2.aac.parseSampleRate(packet);\n          }\n\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n\n        default:\n          byteIndex++;\n          break;\n      }\n\n      if (endLoop) {\n        return null;\n      }\n    }\n\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n\n    var audioTimescale = PES_TIMESCALE / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n\n  var inspectTs_ = function inspectTs_(bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n\n        switch (type) {\n          case streamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n\n            break;\n\n          case streamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n\n  var inspect = function inspect(bytes, baseTimestamp) {\n    var isAacData = probe$2.aac.isLikelyAacData(bytes);\n    var result;\n\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n\n  /*\n   * pkcs7.pad\n   * https://github.com/brightcove/pkcs7\n   *\n   * Copyright (c) 2014 Brightcove\n   * Licensed under the apache2 license.\n   */\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n\n  var precompute = function precompute() {\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    var encTable = tables[0];\n    var decTable = tables[1];\n    var sbox = encTable[4];\n    var sboxInv = decTable[4];\n    var i = void 0;\n    var x = void 0;\n    var xInv = void 0;\n    var d = [];\n    var th = [];\n    var x2 = void 0;\n    var x4 = void 0;\n    var x8 = void 0;\n    var s = void 0;\n    var tEnc = void 0;\n    var tDec = void 0; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n\n    return tables;\n  };\n\n  var aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  var AES = function () {\n    function AES(key) {\n      classCallCheck(this, AES);\n      /**\n       * The expanded S-box and inverse S-box tables. These will be computed\n       * on the client so that we don't have to send them down the wire.\n       *\n       * There are two tables, _tables[0] is for encryption and\n       * _tables[1] is for decryption.\n       *\n       * The first 4 sub-tables are the expanded S-box with MixColumns. The\n       * last (_tables[01][4]) is the S-box itself.\n       *\n       * @private\n       */\n      // if we have yet to precompute the S-box tables\n      // do so now\n\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      var i = void 0;\n      var j = void 0;\n      var tmp = void 0;\n      var encKey = void 0;\n      var decKey = void 0;\n      var sbox = this._tables[0][4];\n      var decTable = this._tables[1];\n      var keyLen = key.length;\n      var rcon = 1;\n\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n\n      encKey = key.slice(0);\n      decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {Number} encrypted0 the first word to decrypt\n     * @param {Number} encrypted1 the second word to decrypt\n     * @param {Number} encrypted2 the third word to decrypt\n     * @param {Number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {Number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n\n    AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = void 0;\n      var b2 = void 0;\n      var c2 = void 0; // key.length === 2 ?\n\n      var nInnerRounds = key.length / 4 - 2;\n      var i = void 0;\n      var kIndex = 4;\n      var table = this._tables[1]; // load up the tables\n\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    };\n\n    return AES;\n  }();\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n\n  var Stream$2 = function () {\n    function Stream() {\n      classCallCheck(this, Stream);\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    Stream.prototype.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n\n\n    Stream.prototype.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n\n\n    Stream.prototype.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    Stream.prototype.dispose = function dispose() {\n      this.listeners = {};\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTiemout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n\n  var AsyncStream = function (_Stream) {\n    inherits(AsyncStream, _Stream);\n\n    function AsyncStream() {\n      classCallCheck(this, AsyncStream);\n\n      var _this = possibleConstructorReturn(this, _Stream.call(this, Stream$2));\n\n      _this.jobs = [];\n      _this.delay = 1;\n      _this.timeout_ = null;\n      return _this;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n\n    AsyncStream.prototype.processJob_ = function processJob_() {\n      this.jobs.shift()();\n\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    };\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n\n    AsyncStream.prototype.push = function push(job) {\n      this.jobs.push(job);\n\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    };\n\n    return AsyncStream;\n  }(Stream$2);\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n\n  var ntoh = function ntoh(word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n\n  var decrypt = function decrypt(encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    var init0 = void 0;\n    var init1 = void 0;\n    var init2 = void 0;\n    var init3 = void 0;\n    var encrypted0 = void 0;\n    var encrypted1 = void 0;\n    var encrypted2 = void 0;\n    var encrypted3 = void 0; // iteration variable\n\n    var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n\n  var Decrypter = function () {\n    function Decrypter(encrypted, key, initVector, done) {\n      classCallCheck(this, Decrypter);\n      var step = Decrypter.STEP;\n      var encrypted32 = new Int32Array(encrypted.buffer);\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {Number} the value of step 32000\n     */\n\n    /**\n     * @private\n     */\n\n\n    Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    };\n\n    createClass(Decrypter, null, [{\n      key: 'STEP',\n      get: function get$$1() {\n        // 4 * 8000;\n        return 32000;\n      }\n    }]);\n    return Decrypter;\n  }();\n\n  /**\n   * @videojs/http-streaming\n   * @version 1.9.3\n   * @copyright 2019 Brightcove, Inc\n   * @license Apache-2.0\n   */\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n\n  var resolveUrl$1 = function resolveUrl(baseURL, relativeURL) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeURL)) {\n      return relativeURL;\n    } // if the base URL is relative then combine with the current location\n\n\n    if (!/\\/\\//i.test(baseURL)) {\n      baseURL = urlToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseURL, relativeURL);\n  };\n  /**\n   * Checks whether xhr request was redirected and returns correct url depending\n   * on `handleManifestRedirects` option\n   *\n   * @api private\n   *\n   * @param  {String} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {String}\n   */\n\n\n  var resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n\n    return url;\n  };\n\n  var classCallCheck$1 = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass$1 = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var get$1 = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var inherits$1 = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn$1 = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  /**\n   * @file playlist-loader.js\n   *\n   * A state machine that manages the loading, caching, and updating of\n   * M3U8 playlists.\n   *\n   */\n\n\n  var mergeOptions$1 = videojs$1.mergeOptions,\n      EventTarget$1 = videojs$1.EventTarget,\n      log$1 = videojs$1.log;\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n  var forEachMediaGroup = function forEachMediaGroup(master, callback) {\n    ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n    * Returns a new array of segments that is the result of merging\n    * properties from an older list of segments onto an updated\n    * list. No properties on the updated playlist will be overridden.\n    *\n    * @param {Array} original the outdated list of segments\n    * @param {Array} update the updated list of segments\n    * @param {Number=} offset the index of the first update\n    * segment in the original segment list. For non-live playlists,\n    * this should always be zero and does not need to be\n    * specified. For live playlists, it should be the difference\n    * between the media sequence numbers in the original and updated\n    * playlists.\n    * @return a list of merged segment objects\n    */\n\n\n  var updateSegments = function updateSegments(original, update, offset) {\n    var result = update.slice();\n    offset = offset || 0;\n    var length = Math.min(original.length, update.length + offset);\n\n    for (var i = offset; i < length; i++) {\n      result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n    }\n\n    return result;\n  };\n\n  var resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n    if (!segment.resolvedUri) {\n      segment.resolvedUri = resolveUrl$1(baseUri, segment.uri);\n    }\n\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl$1(baseUri, segment.key.uri);\n    }\n\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl$1(baseUri, segment.map.uri);\n    }\n  };\n  /**\n    * Returns a new master playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original master playlist, null is returned.\n    *\n    * @param {Object} master a parsed master M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * master playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n\n  var updateMaster = function updateMaster(master, media) {\n    var result = mergeOptions$1(master, {});\n    var playlist = result.playlists[media.uri];\n\n    if (!playlist) {\n      return null;\n    } // consider the playlist unchanged if the number of segments is equal, the media\n    // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n    if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n      return null;\n    }\n\n    var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n    if (playlist.segments) {\n      mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n\n    mergedPlaylist.segments.forEach(function (segment) {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (var i = 0; i < result.playlists.length; i++) {\n      if (result.playlists[i].uri === media.uri) {\n        result.playlists[i] = mergedPlaylist;\n      }\n    }\n\n    result.playlists[media.uri] = mergedPlaylist;\n    return result;\n  };\n\n  var setupMediaPlaylists = function setupMediaPlaylists(master) {\n    // setup by-URI lookups and resolve media playlist URIs\n    var i = master.playlists.length;\n\n    while (i--) {\n      var playlist = master.playlists[i];\n      master.playlists[playlist.uri] = playlist;\n      playlist.resolvedUri = resolveUrl$1(master.uri, playlist.uri);\n      playlist.id = i;\n\n      if (!playlist.attributes) {\n        // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n        // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n        // formatted master playlist may not have an attribute list. An attributes\n        // property is added here to prevent undefined references when we encounter\n        // this scenario.\n        playlist.attributes = {};\n        log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n\n  var resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n    forEachMediaGroup(master, function (properties) {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl$1(master.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {Boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {Number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n\n  var refreshDelay = function refreshDelay(media, update) {\n    var lastSegment = media.segments[media.segments.length - 1];\n    var delay = void 0;\n\n    if (update && lastSegment && lastSegment.duration) {\n      delay = lastSegment.duration * 1000;\n    } else {\n      // if the playlist is unchanged since the last reload or last segment duration\n      // cannot be determined, try again after half the target duration\n      delay = (media.targetDuration || 10) * 500;\n    }\n\n    return delay;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {String} srcUrl the url to start with\n   * @param {Boolean} withCredentials the withCredentials xhr option\n   * @constructor\n   */\n\n\n  var PlaylistLoader = function (_EventTarget) {\n    inherits$1(PlaylistLoader, _EventTarget);\n\n    function PlaylistLoader(srcUrl, hls) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck$1(this, PlaylistLoader);\n\n      var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n      var _options$withCredenti = options.withCredentials,\n          withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n          _options$handleManife = options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n      _this.srcUrl = srcUrl;\n      _this.hls_ = hls;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n      var hlsOptions = hls.options_;\n      _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n      _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n      if (!_this.srcUrl) {\n        throw new Error('A non-empty playlist URL is required');\n      } // initialize the loader state\n\n\n      _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      _this.on('mediaupdatetimeout', function () {\n        if (_this.state !== 'HAVE_METADATA') {\n          // only refresh the media playlist if no other activity is going on\n          return;\n        }\n\n        _this.state = 'HAVE_CURRENT_METADATA';\n        _this.request = _this.hls_.xhr({\n          uri: resolveUrl$1(_this.master.uri, _this.media().uri),\n          withCredentials: _this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this.request) {\n            return;\n          }\n\n          if (error) {\n            return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n          }\n\n          _this.haveMetadata(_this.request, _this.media().uri);\n        });\n      });\n\n      return _this;\n    }\n\n    createClass$1(PlaylistLoader, [{\n      key: 'playlistRequestError',\n      value: function playlistRequestError(xhr, url, startingState) {\n        // any in-flight request is now finished\n        this.request = null;\n\n        if (startingState) {\n          this.state = startingState;\n        }\n\n        this.error = {\n          playlist: this.master.playlists[url],\n          status: xhr.status,\n          message: 'HLS playlist request error at URL: ' + url,\n          responseText: xhr.responseText,\n          code: xhr.status >= 500 ? 4 : 2\n        };\n        this.trigger('error');\n      } // update the playlist loader's state in response to a new or\n      // updated playlist.\n\n    }, {\n      key: 'haveMetadata',\n      value: function haveMetadata(xhr, url) {\n        var _this2 = this; // any in-flight request is now finished\n\n\n        this.request = null;\n        this.state = 'HAVE_METADATA';\n        var parser = new Parser(); // adding custom tag parsers\n\n        this.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n        this.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n        parser.push(xhr.responseText);\n        parser.end();\n        parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n\n        parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n        var update = updateMaster(this.master, parser.manifest);\n        this.targetDuration = parser.manifest.targetDuration;\n\n        if (update) {\n          this.master = update;\n          this.media_ = this.master.playlists[parser.manifest.uri];\n        } else {\n          this.trigger('playlistunchanged');\n        } // refresh live playlists after a target duration passes\n\n\n        if (!this.media().endList) {\n          window$1.clearTimeout(this.mediaUpdateTimeout);\n          this.mediaUpdateTimeout = window$1.setTimeout(function () {\n            _this2.trigger('mediaupdatetimeout');\n          }, refreshDelay(this.media(), !!update));\n        }\n\n        this.trigger('loadedplaylist');\n      }\n      /**\n       * Abort any outstanding work and clean up.\n       */\n\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        this.stopRequest();\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n      }\n    }, {\n      key: 'stopRequest',\n      value: function stopRequest() {\n        if (this.request) {\n          var oldRequest = this.request;\n          this.request = null;\n          oldRequest.onreadystatechange = null;\n          oldRequest.abort();\n        }\n      }\n      /**\n       * When called without any arguments, returns the currently\n       * active media playlist. When called with a single argument,\n       * triggers the playlist loader to asynchronously switch to the\n       * specified media playlist. Calling this method while the\n       * loader is in the HAVE_NOTHING causes an error to be emitted\n       * but otherwise has no effect.\n       *\n       * @param {Object=} playlist the parsed media playlist\n       * object to switch to\n       * @return {Playlist} the current loaded media\n       */\n\n    }, {\n      key: 'media',\n      value: function media(playlist) {\n        var _this3 = this; // getter\n\n\n        if (!playlist) {\n          return this.media_;\n        } // setter\n\n\n        if (this.state === 'HAVE_NOTHING') {\n          throw new Error('Cannot switch media playlist from ' + this.state);\n        }\n\n        var startingState = this.state; // find the playlist object if the target playlist has been\n        // specified by URI\n\n        if (typeof playlist === 'string') {\n          if (!this.master.playlists[playlist]) {\n            throw new Error('Unknown playlist URI: ' + playlist);\n          }\n\n          playlist = this.master.playlists[playlist];\n        }\n\n        var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n        if (this.master.playlists[playlist.uri].endList) {\n          // abort outstanding playlist requests\n          if (this.request) {\n            this.request.onreadystatechange = null;\n            this.request.abort();\n            this.request = null;\n          }\n\n          this.state = 'HAVE_METADATA';\n          this.media_ = playlist; // trigger media change if the active media has been updated\n\n          if (mediaChange) {\n            this.trigger('mediachanging');\n            this.trigger('mediachange');\n          }\n\n          return;\n        } // switching to the active playlist is a no-op\n\n\n        if (!mediaChange) {\n          return;\n        }\n\n        this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n        if (this.request) {\n          if (playlist.resolvedUri === this.request.url) {\n            // requesting to switch to the same playlist multiple times\n            // has no effect after the first\n            return;\n          }\n\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        } // request the new playlist\n\n\n        if (this.media_) {\n          this.trigger('mediachanging');\n        }\n\n        this.request = this.hls_.xhr({\n          uri: playlist.resolvedUri,\n          withCredentials: this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this3.request) {\n            return;\n          }\n\n          playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n          if (error) {\n            return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n          }\n\n          _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n          if (startingState === 'HAVE_MASTER') {\n            _this3.trigger('loadedmetadata');\n          } else {\n            _this3.trigger('mediachange');\n          }\n        });\n      }\n      /**\n       * pause loading of the playlist\n       */\n\n    }, {\n      key: 'pause',\n      value: function pause() {\n        this.stopRequest();\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n\n        if (this.state === 'HAVE_NOTHING') {\n          // If we pause the loader before any data has been retrieved, its as if we never\n          // started, so reset to an unstarted state.\n          this.started = false;\n        } // Need to restore state now that no activity is happening\n\n\n        if (this.state === 'SWITCHING_MEDIA') {\n          // if the loader was in the process of switching media, it should either return to\n          // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n          // playlist yet. This is determined by the existence of loader.media_\n          if (this.media_) {\n            this.state = 'HAVE_METADATA';\n          } else {\n            this.state = 'HAVE_MASTER';\n          }\n        } else if (this.state === 'HAVE_CURRENT_METADATA') {\n          this.state = 'HAVE_METADATA';\n        }\n      }\n      /**\n       * start loading of the playlist\n       */\n\n    }, {\n      key: 'load',\n      value: function load(isFinalRendition) {\n        var _this4 = this;\n\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        var media = this.media();\n\n        if (isFinalRendition) {\n          var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n          this.mediaUpdateTimeout = window$1.setTimeout(function () {\n            return _this4.load();\n          }, delay);\n          return;\n        }\n\n        if (!this.started) {\n          this.start();\n          return;\n        }\n\n        if (media && !media.endList) {\n          this.trigger('mediaupdatetimeout');\n        } else {\n          this.trigger('loadedplaylist');\n        }\n      }\n      /**\n       * start loading of the playlist\n       */\n\n    }, {\n      key: 'start',\n      value: function start() {\n        var _this5 = this;\n\n        this.started = true; // request the specified URL\n\n        this.request = this.hls_.xhr({\n          uri: this.srcUrl,\n          withCredentials: this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this5.request) {\n            return;\n          } // clear the loader's request reference\n\n\n          _this5.request = null;\n\n          if (error) {\n            _this5.error = {\n              status: req.status,\n              message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n              responseText: req.responseText,\n              // MEDIA_ERR_NETWORK\n              code: 2\n            };\n\n            if (_this5.state === 'HAVE_NOTHING') {\n              _this5.started = false;\n            }\n\n            return _this5.trigger('error');\n          }\n\n          var parser = new Parser(); // adding custom tag parsers\n\n          _this5.customTagParsers.forEach(function (customParser) {\n            return parser.addParser(customParser);\n          }); // adding custom tag mappers\n\n\n          _this5.customTagMappers.forEach(function (mapper) {\n            return parser.addTagMapper(mapper);\n          });\n\n          parser.push(req.responseText);\n          parser.end();\n          _this5.state = 'HAVE_MASTER';\n          _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n          parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n          if (parser.manifest.playlists) {\n            _this5.master = parser.manifest;\n            setupMediaPlaylists(_this5.master);\n            resolveMediaGroupUris(_this5.master);\n\n            _this5.trigger('loadedplaylist');\n\n            if (!_this5.request) {\n              // no media playlist was specifically selected so start\n              // from the first listed one\n              _this5.media(parser.manifest.playlists[0]);\n            }\n\n            return;\n          } // loaded a media playlist\n          // infer a master playlist if none was previously requested\n\n\n          _this5.master = {\n            mediaGroups: {\n              'AUDIO': {},\n              'VIDEO': {},\n              'CLOSED-CAPTIONS': {},\n              'SUBTITLES': {}\n            },\n            uri: window$1.location.href,\n            playlists: [{\n              uri: _this5.srcUrl,\n              id: 0,\n              resolvedUri: _this5.srcUrl,\n              // m3u8-parser does not attach an attributes property to media playlists so make\n              // sure that the property is attached to avoid undefined reference errors\n              attributes: {}\n            }]\n          };\n          _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n          _this5.haveMetadata(req, _this5.srcUrl);\n\n          return _this5.trigger('loadedmetadata');\n        });\n      }\n    }]);\n    return PlaylistLoader;\n  }(EventTarget$1);\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n\n\n  var createTimeRange = videojs$1.createTimeRange;\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n  var backwardDuration = function backwardDuration(playlist, endSequence) {\n    var result = 0;\n    var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n\n    while (i--) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n\n      result += segment.duration;\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n\n    return {\n      result: result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var forwardDuration = function forwardDuration(playlist, endSequence) {\n    var result = 0;\n    var segment = void 0;\n    var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n\n      result += segment.duration;\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {Number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {Number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {Number} the duration between the first available segment\n    * and end index.\n    */\n\n\n  var intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n    var backward = void 0;\n    var forward = void 0;\n\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n\n    backward = backwardDuration(playlist, endSequence);\n\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n\n    forward = forwardDuration(playlist, endSequence);\n\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {Number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {Number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {Number} the duration between the start index and end\n    * index.\n    */\n\n\n  var duration = function duration(playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n\n      if (!playlist.endList) {\n        return window$1.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {Number} startIndex\n    * @param {Number} endIndex\n    * @return {Number} the number of seconds between startIndex and endIndex\n    */\n\n\n  var sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n    var durations = 0;\n\n    if (startIndex > endIndex) {\n      var _ref = [endIndex, startIndex];\n      startIndex = _ref[0];\n      endIndex = _ref[1];\n    }\n\n    if (startIndex < 0) {\n      for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += playlist.targetDuration;\n      }\n\n      startIndex = 0;\n    }\n\n    for (var _i = startIndex; _i < endIndex; _i++) {\n      durations += playlist.segments[_i].duration;\n    }\n\n    return durations;\n  };\n  /**\n   * Determines the media index of the segment corresponding to the safe edge of the live\n   * window which is the duration of the last segment plus 2 target durations from the end\n   * of the playlist.\n   *\n   * @param {Object} playlist\n   *        a media playlist object\n   * @return {Number}\n   *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n   *         point.\n   * @function safeLiveIndex\n   */\n\n\n  var safeLiveIndex = function safeLiveIndex(playlist) {\n    if (!playlist.segments.length) {\n      return 0;\n    }\n\n    var i = playlist.segments.length - 1;\n    var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n    var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n    while (i--) {\n      distanceFromEnd += playlist.segments[i].duration;\n\n      if (distanceFromEnd >= safeDistance) {\n        break;\n      }\n    }\n\n    return Math.max(0, i);\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {Number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   * @returns {Number} the end time of playlist\n   * @function playlistEnd\n   */\n\n\n  var playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n\n    if (expired === null) {\n      return null;\n    }\n\n    expired = expired || 0;\n    var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n    return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {Number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n\n  var seekable = function seekable(playlist, expired) {\n    var useSafeLiveEnd = true;\n    var seekableStart = expired || 0;\n    var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n    if (seekableEnd === null) {\n      return createTimeRange();\n    }\n\n    return createTimeRange(seekableStart, seekableEnd);\n  };\n\n  var isWholeNumber = function isWholeNumber(num) {\n    return num - Math.floor(num) === 0;\n  };\n\n  var roundSignificantDigit = function roundSignificantDigit(increment, num) {\n    // If we have a whole number, just add 1 to it\n    if (isWholeNumber(num)) {\n      return num + increment * 0.1;\n    }\n\n    var numDecimalDigits = num.toString().split('.')[1].length;\n\n    for (var i = 1; i <= numDecimalDigits; i++) {\n      var scale = Math.pow(10, i);\n      var temp = num * scale;\n\n      if (isWholeNumber(temp) || i === numDecimalDigits) {\n        return (temp + increment) / scale;\n      }\n    }\n  };\n\n  var ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\n  var floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} playlist the media playlist to query\n   * @param {Number} currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {Number} startIndex\n   * @param {Number} startTime\n   * @return {Object}\n   */\n\n  var getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n    var i = void 0;\n    var segment = void 0;\n    var numSegments = playlist.segments.length;\n    var time = currentTime - startTime;\n\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (i = startIndex - 1; i >= 0; i--) {\n          segment = playlist.segments[i];\n          time += floorLeastSignificantDigit(segment.duration);\n\n          if (time > 0) {\n            return {\n              mediaIndex: i,\n              startTime: startTime - sumDurations(playlist, startIndex, i)\n            };\n          }\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n\n      return {\n        mediaIndex: 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n\n    if (startIndex < 0) {\n      for (i = startIndex; i < 0; i++) {\n        time -= playlist.targetDuration;\n\n        if (time < 0) {\n          return {\n            mediaIndex: 0,\n            startTime: currentTime\n          };\n        }\n      }\n\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n\n    for (i = startIndex; i < numSegments; i++) {\n      segment = playlist.segments[i];\n      time -= ceilLeastSignificantDigit(segment.duration);\n\n      if (time < 0) {\n        return {\n          mediaIndex: i,\n          startTime: startTime + sumDurations(playlist, startIndex, i)\n        };\n      }\n    } // We are out of possible candidates so load the last one...\n\n\n    return {\n      mediaIndex: numSegments - 1,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is blacklisted or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is blacklisted or not\n   * @function isBlacklisted\n   */\n\n\n  var isBlacklisted = function isBlacklisted(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been blacklisted permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n\n  var isIncompatible = function isIncompatible(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n\n  var isEnabled = function isEnabled(playlist) {\n    var blacklisted = isBlacklisted(playlist);\n    return !playlist.disabled && !blacklisted;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n\n  var isDisabled = function isDisabled(playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {Boolean} true if it's an AES encrypted HLS stream\n   */\n\n\n  var isAes = function isAes(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns whether the current playlist contains fMP4\n   *\n   * @return {Boolean} true if the playlist contains fMP4\n   */\n\n\n  var isFmp4 = function isFmp4(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].map) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {String} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {Boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n\n  var hasAttribute = function hasAttribute(attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {Number} segmentDuration\n   *        Duration of requested segment\n   * @param {Number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {Number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {Number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n\n  var estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n    var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n\n    var size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n\n  var isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n    if (master.playlists.length === 1) {\n      return true;\n    }\n\n    var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return master.playlists.filter(function (playlist) {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  }; // exports\n\n\n  var Playlist = {\n    duration: duration,\n    seekable: seekable,\n    safeLiveIndex: safeLiveIndex,\n    getMediaInfoForTime: getMediaInfoForTime,\n    isEnabled: isEnabled,\n    isDisabled: isDisabled,\n    isBlacklisted: isBlacklisted,\n    isIncompatible: isIncompatible,\n    playlistEnd: playlistEnd,\n    isAes: isAes,\n    isFmp4: isFmp4,\n    hasAttribute: hasAttribute,\n    estimateSegmentRequestTime: estimateSegmentRequestTime,\n    isLowestEnabledRendition: isLowestEnabledRendition\n  };\n  /**\n   * @file xhr.js\n   */\n\n  var videojsXHR = videojs$1.xhr,\n      mergeOptions$1$1 = videojs$1.mergeOptions;\n\n  var xhrFactory = function xhrFactory() {\n    var xhr = function XhrFunction(options, callback) {\n      // Add a default timeout for all hls requests\n      options = mergeOptions$1$1({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        var newOptions = beforeRequest(options);\n\n        if (newOptions) {\n          options = newOptions;\n        }\n      }\n\n      var request = videojsXHR(options, function (error, response) {\n        var reqResponse = request.response;\n\n        if (!error && reqResponse) {\n          request.responseTime = Date.now();\n          request.roundTripTime = request.responseTime - request.requestTime;\n          request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n          if (!request.bandwidth) {\n            request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n          }\n        }\n\n        if (response.headers) {\n          request.responseHeaders = response.headers;\n        } // videojs.xhr now uses a specific code on the error\n        // object to signal that a request has timed out instead\n        // of setting a boolean on the request object\n\n\n        if (error && error.code === 'ETIMEDOUT') {\n          request.timedout = true;\n        } // videojs.xhr no longer considers status codes outside of 200 and 0\n        // (for file uris) to be errors, but the old XHR did, so emulate that\n        // behavior. Status 206 may be used in response to byterange requests.\n\n\n        if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n          error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n        }\n\n        callback(error, request);\n      });\n      var originalAbort = request.abort;\n\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n\n    return xhr;\n  };\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {Number} i the iterator on the range to convert\n   */\n\n\n  var textRange = function textRange(range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {Number} e The number\n   * @param {Number} i the iterator\n   */\n\n\n  var formatHexString = function formatHexString(e, i) {\n    var value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n\n  var formatAsciiString = function formatAsciiString(e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (ArrayBuffer.isView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   */\n\n\n  var initSegmentId = function initSegmentId(initSegment) {\n    var byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * utils to help dump binary data to the console\n   */\n\n\n  var hexDump = function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex = void 0;\n    var ascii = void 0;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n\n    return result;\n  };\n\n  var tagDump = function tagDump(_ref) {\n    var bytes = _ref.bytes;\n    return hexDump(bytes);\n  };\n\n  var textRanges = function textRanges(ranges) {\n    var result = '';\n    var i = void 0;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n\n    return result;\n  };\n\n  var utils$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  }); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // Add 25% to the segment duration to account for small discrepencies in segment timing.\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  var SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {Number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  var playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n\n    var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    var offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n\n  var originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {String} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    var dateTimeObject = void 0;\n\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segment = playlist.segments[0];\n\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n\n    for (var i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n    var lastSegmentStart = lastSegment.dateTimeObject;\n    var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {Number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segmentEnd = 0;\n    var segment = void 0;\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {String} programTime The programTime as an ISO-8601 string\n   * @return {Number} offset\n   */\n\n\n  var getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n    var segmentDateTime = void 0;\n    var programDateTime = void 0;\n\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n\n    var segmentTimeEpoch = segmentDateTime.getTime();\n    var programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n\n  var verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      var segment = playlist.segments[i];\n\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {Number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @returns {String} err.message A detailed error message\n   * @returns {Object} programTime\n   * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n   * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n\n  var getProgramTime = function getProgramTime(_ref) {\n    var playlist = _ref.playlist,\n        _ref$time = _ref.time,\n        time = _ref$time === undefined ? undefined : _ref$time,\n        callback = _ref.callback;\n\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n\n    var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n\n    var programTimeObject = {\n      mediaSeconds: time\n    };\n    var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @returns {String} err.message A detailed error message\n   * @returns {Number} newTime The exact time that was seeked to in seconds\n   */\n\n\n  var seekToProgramTime = function seekToProgramTime(_ref2) {\n    var programTime = _ref2.programTime,\n        playlist = _ref2.playlist,\n        _ref2$retryCount = _ref2.retryCount,\n        retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n        seekTo = _ref2.seekTo,\n        _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n        pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n        tech = _ref2.tech,\n        callback = _ref2.callback;\n\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n\n    var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: programTime + ' was not found in the stream'\n      });\n    }\n\n    var segment = matchedSegment.segment;\n    var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: programTime + ' is not buffered yet. Try again'\n        });\n      }\n\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', function () {\n        seekToProgramTime({\n          programTime: programTime,\n          playlist: playlist,\n          retryCount: retryCount - 1,\n          seekTo: seekTo,\n          pauseAfterSeek: pauseAfterSeek,\n          tech: tech,\n          callback: callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n\n    var seekToTime = segment.start + mediaOffset;\n\n    var seekedCallback = function seekedCallback() {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n\n    seekTo(seekToTime);\n  };\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n  // Fudge factor to account for TimeRanges rounding\n\n\n  var TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  var SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n  var filterRanges = function filterRanges(timeRanges, predicate) {\n    var results = [];\n    var i = void 0;\n\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n\n    return videojs$1.createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @returns {TimeRanges} a new TimeRanges object\n   */\n\n\n  var findRange = function findRange(buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @returns {TimeRanges} a new TimeRanges object.\n   */\n\n\n  var findNextRange = function findNextRange(timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n\n  var findGaps = function findGaps(buffered) {\n    if (buffered.length < 2) {\n      return videojs$1.createTimeRanges();\n    }\n\n    var ranges = [];\n\n    for (var i = 1; i < buffered.length; i++) {\n      var start = buffered.end(i - 1);\n      var end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n\n    return videojs$1.createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @returns {String} a human readable string\n   */\n\n\n  var printableRange = function printableRange(range) {\n    var strArr = [];\n\n    if (!range || !range.length) {\n      return '';\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {Number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {Number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n\n  var timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n    var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   * @param {TimeRanges} timeRanges\n   * @returns {Array}\n   */\n\n\n  var timeRangesToArray = function timeRangesToArray(timeRanges) {\n    var timeRangesList = [];\n\n    for (var i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n\n    return timeRangesList;\n  };\n  /**\n   * @file create-text-tracks-if-necessary.js\n   */\n\n  /**\n   * Create text tracks on video.js if they exist on a segment.\n   *\n   * @param {Object} sourceBuffer the VSB or FSB\n   * @param {Object} mediaSource the HTML media source\n   * @param {Object} segment the segment that may contain the text track\n   * @private\n   */\n\n\n  var createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n    var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n    if (segment.captions && segment.captions.length) {\n      if (!sourceBuffer.inbandTextTracks_) {\n        sourceBuffer.inbandTextTracks_ = {};\n      }\n\n      for (var trackId in segment.captionStreams) {\n        if (!sourceBuffer.inbandTextTracks_[trackId]) {\n          player.tech_.trigger({\n            type: 'usage',\n            name: 'hls-608'\n          });\n          var track = player.textTracks().getTrackById(trackId);\n\n          if (track) {\n            // Resuse an existing track with a CC# id because this was\n            // very likely created by videojs-contrib-hls from information\n            // in the m3u8 for us to use\n            sourceBuffer.inbandTextTracks_[trackId] = track;\n          } else {\n            // Otherwise, create a track with the default `CC#` label and\n            // without a language\n            sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n              kind: 'captions',\n              id: trackId,\n              label: trackId\n            }, false).track;\n          }\n        }\n      }\n    }\n\n    if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n      sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'Timed Metadata'\n      }, false).track;\n      sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n    }\n  };\n  /**\n   * @file remove-cues-from-track.js\n   */\n\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n\n  var removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n    var i = void 0;\n    var cue = void 0;\n\n    if (!track) {\n      return;\n    }\n\n    if (!track.cues) {\n      return;\n    }\n\n    i = track.cues.length;\n\n    while (i--) {\n      cue = track.cues[i]; // Remove any overlapping cue\n\n      if (cue.startTime <= end && cue.endTime >= start) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * @file add-text-track-data.js\n   */\n\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n\n  var deprecateOldCue = function deprecateOldCue(cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get: function get() {\n          videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get: function get() {\n          videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get: function get() {\n          videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n\n  var durationOfVideo = function durationOfVideo(duration) {\n    var dur = void 0;\n\n    if (isNaN(duration) || Math.abs(duration) === Infinity) {\n      dur = Number.MAX_VALUE;\n    } else {\n      dur = duration;\n    }\n\n    return dur;\n  };\n  /**\n   * Add text track data to a source handler given the captions and\n   * metadata from the buffer.\n   *\n   * @param {Object} sourceHandler the virtual source buffer\n   * @param {Array} captionArray an array of caption data\n   * @param {Array} metadataArray an array of meta data\n   * @private\n   */\n\n\n  var addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n    if (captionArray) {\n      captionArray.forEach(function (caption) {\n        var track = caption.stream;\n        this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n      }, sourceHandler);\n    }\n\n    if (metadataArray) {\n      var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n      metadataArray.forEach(function (metadata) {\n        var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n        // ignore this bit of metadata.\n        // This likely occurs when you have an non-timed ID3 tag like TIT2,\n        // which is the \"Title/Songname/Content description\" frame\n\n        if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n          return;\n        }\n\n        metadata.frames.forEach(function (frame) {\n          var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n          cue.frame = frame;\n          cue.value = frame;\n          deprecateOldCue(cue);\n          this.metadataTrack_.addCue(cue);\n        }, this);\n      }, sourceHandler); // Updating the metadeta cues so that\n      // the endTime of each cue is the startTime of the next cue\n      // the endTime of last cue is the duration of the video\n\n      if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n        var cues = sourceHandler.metadataTrack_.cues;\n        var cuesArray = []; // Create a copy of the TextTrackCueList...\n        // ...disregarding cues with a falsey value\n\n        for (var i = 0; i < cues.length; i++) {\n          if (cues[i]) {\n            cuesArray.push(cues[i]);\n          }\n        } // Group cues by their startTime value\n\n\n        var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n          var timeSlot = obj[cue.startTime] || [];\n          timeSlot.push(cue);\n          obj[cue.startTime] = timeSlot;\n          return obj;\n        }, {}); // Sort startTimes by ascending order\n\n        var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n          return Number(a) - Number(b);\n        }); // Map each cue group's endTime to the next group's startTime\n\n        sortedStartTimes.forEach(function (startTime, idx) {\n          var cueGroup = cuesGroupedByStartTime[startTime];\n          var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n          cueGroup.forEach(function (cue) {\n            cue.endTime = nextTime;\n          });\n        });\n      }\n    }\n  };\n\n  var win = typeof window !== 'undefined' ? window : {},\n      TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n      SCRIPT_TYPE = 'application/javascript',\n      BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n      URL = win.URL || win.webkitURL || URL && URL.msURL,\n      Worker = win.Worker;\n  /**\n   * Returns a wrapper around Web Worker code that is constructible.\n   *\n   * @function shimWorker\n   *\n   * @param { String }    filename    The name of the file\n   * @param { Function }  fn          Function wrapping the code of the worker\n   */\n\n  function shimWorker(filename, fn) {\n    return function ShimWorker(forceFallback) {\n      var o = this;\n\n      if (!fn) {\n        return new Worker(filename);\n      } else if (Worker && !forceFallback) {\n        // Convert the function's inner code to a string to construct the worker\n        var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n            objURL = createSourceObject(source);\n        this[TARGET] = new Worker(objURL);\n        wrapTerminate(this[TARGET], objURL);\n        return this[TARGET];\n      } else {\n        var selfShim = {\n          postMessage: function postMessage(m) {\n            if (o.onmessage) {\n              setTimeout(function () {\n                o.onmessage({\n                  data: m,\n                  target: selfShim\n                });\n              });\n            }\n          }\n        };\n        fn.call(selfShim);\n\n        this.postMessage = function (m) {\n          setTimeout(function () {\n            selfShim.onmessage({\n              data: m,\n              target: o\n            });\n          });\n        };\n\n        this.isThisThread = true;\n      }\n    };\n  } // Test Worker capabilities\n\n\n  if (Worker) {\n    var testWorker,\n        objURL = createSourceObject('self.onmessage = function () {}'),\n        testArray = new Uint8Array(1);\n\n    try {\n      testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n      testWorker.postMessage(testArray, [testArray.buffer]);\n    } catch (e) {\n      Worker = null;\n    } finally {\n      URL.revokeObjectURL(objURL);\n\n      if (testWorker) {\n        testWorker.terminate();\n      }\n    }\n  }\n\n  function createSourceObject(str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: SCRIPT_TYPE\n      }));\n    } catch (e) {\n      var blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob(type));\n    }\n  }\n\n  function wrapTerminate(worker, objURL) {\n    if (!worker || !objURL) return;\n    var term = worker.terminate;\n    worker.objURL = objURL;\n\n    worker.terminate = function () {\n      if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n      term.call(worker);\n    };\n  }\n\n  var TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n    var self = this;\n\n    var transmuxerWorker = function () {\n      /**\n       * mux.js\n       *\n       * Copyright (c) 2015 Brightcove\n       * All rights reserved.\n       *\n       * Functions that generate fragmented MP4s suitable for use with Media\n       * Source Extensions.\n       */\n      var UINT32_MAX = Math.pow(2, 32) - 1;\n      var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n      (function () {\n        var i;\n        types = {\n          avc1: [],\n          // codingname\n          avcC: [],\n          btrt: [],\n          dinf: [],\n          dref: [],\n          esds: [],\n          ftyp: [],\n          hdlr: [],\n          mdat: [],\n          mdhd: [],\n          mdia: [],\n          mfhd: [],\n          minf: [],\n          moof: [],\n          moov: [],\n          mp4a: [],\n          // codingname\n          mvex: [],\n          mvhd: [],\n          sdtp: [],\n          smhd: [],\n          stbl: [],\n          stco: [],\n          stsc: [],\n          stsd: [],\n          stsz: [],\n          stts: [],\n          styp: [],\n          tfdt: [],\n          tfhd: [],\n          traf: [],\n          trak: [],\n          trun: [],\n          trex: [],\n          tkhd: [],\n          vmhd: []\n        }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n        // don't throw an error\n\n        if (typeof Uint8Array === 'undefined') {\n          return;\n        }\n\n        for (i in types) {\n          if (types.hasOwnProperty(i)) {\n            types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n          }\n        }\n\n        MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n        AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n        MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n        VIDEO_HDLR = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x00, // pre_defined\n        0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n        ]);\n        AUDIO_HDLR = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x00, // pre_defined\n        0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n        ]);\n        HDLR_TYPES = {\n          video: VIDEO_HDLR,\n          audio: AUDIO_HDLR\n        };\n        DREF = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01, // entry_count\n        0x00, 0x00, 0x00, 0x0c, // entry_size\n        0x75, 0x72, 0x6c, 0x20, // 'url' type\n        0x00, // version 0\n        0x00, 0x00, 0x01 // entry_flags\n        ]);\n        SMHD = new Uint8Array([0x00, // version\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, // balance, 0 means centered\n        0x00, 0x00 // reserved\n        ]);\n        STCO = new Uint8Array([0x00, // version\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x00 // entry_count\n        ]);\n        STSC = STCO;\n        STSZ = new Uint8Array([0x00, // version\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x00, // sample_size\n        0x00, 0x00, 0x00, 0x00 // sample_count\n        ]);\n        STTS = STCO;\n        VMHD = new Uint8Array([0x00, // version\n        0x00, 0x00, 0x01, // flags\n        0x00, 0x00, // graphicsmode\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n        ]);\n      })();\n\n      box = function box(type) {\n        var payload = [],\n            size = 0,\n            i,\n            result,\n            view;\n\n        for (i = 1; i < arguments.length; i++) {\n          payload.push(arguments[i]);\n        }\n\n        i = payload.length; // calculate the total size we need to allocate\n\n        while (i--) {\n          size += payload[i].byteLength;\n        }\n\n        result = new Uint8Array(size + 8);\n        view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n        view.setUint32(0, result.byteLength);\n        result.set(type, 4); // copy the payload into the result\n\n        for (i = 0, size = 8; i < payload.length; i++) {\n          result.set(payload[i], size);\n          size += payload[i].byteLength;\n        }\n\n        return result;\n      };\n\n      dinf = function dinf() {\n        return box(types.dinf, box(types.dref, DREF));\n      };\n\n      esds = function esds(track) {\n        return box(types.esds, new Uint8Array([0x00, // version\n        0x00, 0x00, 0x00, // flags\n        // ES_Descriptor\n        0x03, // tag, ES_DescrTag\n        0x19, // length\n        0x00, 0x00, // ES_ID\n        0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n        // DecoderConfigDescriptor\n        0x04, // tag, DecoderConfigDescrTag\n        0x11, // length\n        0x40, // object type\n        0x15, // streamType\n        0x00, 0x06, 0x00, // bufferSizeDB\n        0x00, 0x00, 0xda, 0xc0, // maxBitrate\n        0x00, 0x00, 0xda, 0xc0, // avgBitrate\n        // DecoderSpecificInfo\n        0x05, // tag, DecoderSpecificInfoTag\n        0x02, // length\n        // ISO/IEC 14496-3, AudioSpecificConfig\n        // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n        track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n        ]));\n      };\n\n      ftyp = function ftyp() {\n        return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n      };\n\n      hdlr = function hdlr(type) {\n        return box(types.hdlr, HDLR_TYPES[type]);\n      };\n\n      mdat = function mdat(data) {\n        return box(types.mdat, data);\n      };\n\n      mdhd = function mdhd(track) {\n        var result = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x02, // creation_time\n        0x00, 0x00, 0x00, 0x03, // modification_time\n        0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n        track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n        0x55, 0xc4, // 'und' language (undetermined)\n        0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n        // defined. The sample rate can be parsed out of an ADTS header, for\n        // instance.\n\n        if (track.samplerate) {\n          result[12] = track.samplerate >>> 24 & 0xFF;\n          result[13] = track.samplerate >>> 16 & 0xFF;\n          result[14] = track.samplerate >>> 8 & 0xFF;\n          result[15] = track.samplerate & 0xFF;\n        }\n\n        return box(types.mdhd, result);\n      };\n\n      mdia = function mdia(track) {\n        return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n      };\n\n      mfhd = function mfhd(sequenceNumber) {\n        return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n        (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n        ]));\n      };\n\n      minf = function minf(track) {\n        return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n      };\n\n      moof = function moof(sequenceNumber, tracks) {\n        var trackFragments = [],\n            i = tracks.length; // build traf boxes for each track fragment\n\n        while (i--) {\n          trackFragments[i] = traf(tracks[i]);\n        }\n\n        return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n      };\n      /**\n       * Returns a movie box.\n       * @param tracks {array} the tracks associated with this movie\n       * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n       */\n\n\n      moov = function moov(tracks) {\n        var i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n          boxes[i] = trak(tracks[i]);\n        }\n\n        return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n      };\n\n      mvex = function mvex(tracks) {\n        var i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n          boxes[i] = trex(tracks[i]);\n        }\n\n        return box.apply(null, [types.mvex].concat(boxes));\n      };\n\n      mvhd = function mvhd(duration) {\n        var bytes = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01, // creation_time\n        0x00, 0x00, 0x00, 0x02, // modification_time\n        0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n        (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n        0x00, 0x01, 0x00, 0x00, // 1.0 rate\n        0x01, 0x00, // 1.0 volume\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        0xff, 0xff, 0xff, 0xff // next_track_ID\n        ]);\n        return box(types.mvhd, bytes);\n      };\n\n      sdtp = function sdtp(track) {\n        var samples = track.samples || [],\n            bytes = new Uint8Array(4 + samples.length),\n            flags,\n            i; // leave the full box header (4 bytes) all zero\n        // write the sample table\n\n        for (i = 0; i < samples.length; i++) {\n          flags = samples[i].flags;\n          bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n        }\n\n        return box(types.sdtp, bytes);\n      };\n\n      stbl = function stbl(track) {\n        return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n      };\n\n      (function () {\n        var videoSample, audioSample;\n\n        stsd = function stsd(track) {\n          return box(types.stsd, new Uint8Array([0x00, // version 0\n          0x00, 0x00, 0x00, // flags\n          0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n        };\n\n        videoSample = function videoSample(track) {\n          var sps = track.sps || [],\n              pps = track.pps || [],\n              sequenceParameterSets = [],\n              pictureParameterSets = [],\n              i; // assemble the SPSs\n\n          for (i = 0; i < sps.length; i++) {\n            sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n            sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n            sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n          } // assemble the PPSs\n\n\n          for (i = 0; i < pps.length; i++) {\n            pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n            pictureParameterSets.push(pps[i].byteLength & 0xFF);\n            pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n          }\n\n          return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n          0x00, 0x01, // data_reference_index\n          0x00, 0x00, // pre_defined\n          0x00, 0x00, // reserved\n          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n          (track.width & 0xff00) >> 8, track.width & 0xff, // width\n          (track.height & 0xff00) >> 8, track.height & 0xff, // height\n          0x00, 0x48, 0x00, 0x00, // horizresolution\n          0x00, 0x48, 0x00, 0x00, // vertresolution\n          0x00, 0x00, 0x00, 0x00, // reserved\n          0x00, 0x01, // frame_count\n          0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n          0x00, 0x18, // depth = 24\n          0x11, 0x11 // pre_defined = -1\n          ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n          track.profileIdc, // AVCProfileIndication\n          track.profileCompatibility, // profile_compatibility\n          track.levelIdc, // AVCLevelIndication\n          0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n          ].concat([sps.length // numOfSequenceParameterSets\n          ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n          ]).concat(pictureParameterSets))), // \"PPS\"\n          box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n          0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n          0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n          );\n        };\n\n        audioSample = function audioSample(track) {\n          return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n          0x00, 0x01, // data_reference_index\n          // AudioSampleEntry, ISO/IEC 14496-12\n          0x00, 0x00, 0x00, 0x00, // reserved\n          0x00, 0x00, 0x00, 0x00, // reserved\n          (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n          (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n          0x00, 0x00, // pre_defined\n          0x00, 0x00, // reserved\n          (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n          // MP4AudioSampleEntry, ISO/IEC 14496-14\n          ]), esds(track));\n        };\n      })();\n\n      tkhd = function tkhd(track) {\n        var result = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x07, // flags\n        0x00, 0x00, 0x00, 0x00, // creation_time\n        0x00, 0x00, 0x00, 0x00, // modification_time\n        (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, // layer\n        0x00, 0x00, // alternate_group\n        0x01, 0x00, // non-audio track volume\n        0x00, 0x00, // reserved\n        0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n        (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n        (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n        ]);\n        return box(types.tkhd, result);\n      };\n      /**\n       * Generate a track fragment (traf) box. A traf box collects metadata\n       * about tracks in a movie fragment (moof) box.\n       */\n\n\n      traf = function traf(track) {\n        var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n        trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x3a, // flags\n        (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n        0x00, 0x00, 0x00, 0x01, // sample_description_index\n        0x00, 0x00, 0x00, 0x00, // default_sample_duration\n        0x00, 0x00, 0x00, 0x00, // default_sample_size\n        0x00, 0x00, 0x00, 0x00 // default_sample_flags\n        ]));\n        upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n        lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n        trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        // baseMediaDecodeTime\n        upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n        // the containing moof to the first payload byte of the associated\n        // mdat\n\n        dataOffset = 32 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8; // mdat header\n        // audio tracks require less metadata\n\n        if (track.type === 'audio') {\n          trackFragmentRun = trun(track, dataOffset);\n          return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n        } // video tracks should contain an independent and disposable samples\n        // box (sdtp)\n        // generate one and adjust offsets to match\n\n\n        sampleDependencyTable = sdtp(track);\n        trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n      };\n      /**\n       * Generate a track box.\n       * @param track {object} a track definition\n       * @return {Uint8Array} the track box\n       */\n\n\n      trak = function trak(track) {\n        track.duration = track.duration || 0xffffffff;\n        return box(types.trak, tkhd(track), mdia(track));\n      };\n\n      trex = function trex(track) {\n        var result = new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n        0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n        0x00, 0x00, 0x00, 0x00, // default_sample_duration\n        0x00, 0x00, 0x00, 0x00, // default_sample_size\n        0x00, 0x01, 0x00, 0x01 // default_sample_flags\n        ]); // the last two bytes of default_sample_flags is the sample\n        // degradation priority, a hint about the importance of this sample\n        // relative to others. Lower the degradation priority for all sample\n        // types other than video.\n\n        if (track.type !== 'video') {\n          result[result.length - 1] = 0x00;\n        }\n\n        return box(types.trex, result);\n      };\n\n      (function () {\n        var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n        // duration is present for the first sample, it will be present for\n        // all subsequent samples.\n        // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n        trunHeader = function trunHeader(samples, offset) {\n          var durationPresent = 0,\n              sizePresent = 0,\n              flagsPresent = 0,\n              compositionTimeOffset = 0; // trun flag constants\n\n          if (samples.length) {\n            if (samples[0].duration !== undefined) {\n              durationPresent = 0x1;\n            }\n\n            if (samples[0].size !== undefined) {\n              sizePresent = 0x2;\n            }\n\n            if (samples[0].flags !== undefined) {\n              flagsPresent = 0x4;\n            }\n\n            if (samples[0].compositionTimeOffset !== undefined) {\n              compositionTimeOffset = 0x8;\n            }\n          }\n\n          return [0x00, // version 0\n          0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n          (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n          (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n          ];\n        };\n\n        videoTrun = function videoTrun(track, offset) {\n          var bytes, samples, sample, i;\n          samples = track.samples || [];\n          offset += 8 + 12 + 16 * samples.length;\n          bytes = trunHeader(samples, offset);\n\n          for (i = 0; i < samples.length; i++) {\n            sample = samples[i];\n            bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n            (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n            sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n            (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n            ]);\n          }\n\n          return box(types.trun, new Uint8Array(bytes));\n        };\n\n        audioTrun = function audioTrun(track, offset) {\n          var bytes, samples, sample, i;\n          samples = track.samples || [];\n          offset += 8 + 12 + 8 * samples.length;\n          bytes = trunHeader(samples, offset);\n\n          for (i = 0; i < samples.length; i++) {\n            sample = samples[i];\n            bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n            (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n          }\n\n          return box(types.trun, new Uint8Array(bytes));\n        };\n\n        trun = function trun(track, offset) {\n          if (track.type === 'audio') {\n            return audioTrun(track, offset);\n          }\n\n          return videoTrun(track, offset);\n        };\n      })();\n\n      var mp4Generator = {\n        ftyp: ftyp,\n        mdat: mdat,\n        moof: moof,\n        moov: moov,\n        initSegment: function initSegment(tracks) {\n          var fileType = ftyp(),\n              movie = moov(tracks),\n              result;\n          result = new Uint8Array(fileType.byteLength + movie.byteLength);\n          result.set(fileType);\n          result.set(movie, fileType.byteLength);\n          return result;\n        }\n      };\n\n      var toUnsigned = function toUnsigned(value) {\n        return value >>> 0;\n      };\n\n      var bin = {\n        toUnsigned: toUnsigned\n      };\n      var toUnsigned$1 = bin.toUnsigned;\n\n      var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n      _findBox = function findBox(data, path) {\n        var results = [],\n            i,\n            size,\n            type,\n            end,\n            subresults;\n\n        if (!path.length) {\n          // short-circuit the search for empty paths\n          return null;\n        }\n\n        for (i = 0; i < data.byteLength;) {\n          size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n          type = parseType(data.subarray(i + 4, i + 8));\n          end = size > 1 ? i + size : data.byteLength;\n\n          if (type === path[0]) {\n            if (path.length === 1) {\n              // this is the end of the path and we've found the box we were\n              // looking for\n              results.push(data.subarray(i + 8, end));\n            } else {\n              // recursively search for the next box along the path\n              subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n              if (subresults.length) {\n                results = results.concat(subresults);\n              }\n            }\n          }\n\n          i = end;\n        } // we've finished searching all of data\n\n\n        return results;\n      };\n      /**\n       * Returns the string representation of an ASCII encoded four byte buffer.\n       * @param buffer {Uint8Array} a four-byte buffer to translate\n       * @return {string} the corresponding string\n       */\n\n\n      parseType = function parseType(buffer) {\n        var result = '';\n        result += String.fromCharCode(buffer[0]);\n        result += String.fromCharCode(buffer[1]);\n        result += String.fromCharCode(buffer[2]);\n        result += String.fromCharCode(buffer[3]);\n        return result;\n      };\n      /**\n       * Parses an MP4 initialization segment and extracts the timescale\n       * values for any declared tracks. Timescale values indicate the\n       * number of clock ticks per second to assume for time-based values\n       * elsewhere in the MP4.\n       *\n       * To determine the start time of an MP4, you need two pieces of\n       * information: the timescale unit and the earliest base media decode\n       * time. Multiple timescales can be specified within an MP4 but the\n       * base media decode time is always expressed in the timescale from\n       * the media header box for the track:\n       * ```\n       * moov > trak > mdia > mdhd.timescale\n       * ```\n       * @param init {Uint8Array} the bytes of the init segment\n       * @return {object} a hash of track ids to timescale values or null if\n       * the init segment is malformed.\n       */\n\n\n      timescale = function timescale(init) {\n        var result = {},\n            traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n        return traks.reduce(function (result, trak) {\n          var tkhd, version, index, id, mdhd;\n          tkhd = _findBox(trak, ['tkhd'])[0];\n\n          if (!tkhd) {\n            return null;\n          }\n\n          version = tkhd[0];\n          index = version === 0 ? 12 : 20;\n          id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n          mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n          if (!mdhd) {\n            return null;\n          }\n\n          version = mdhd[0];\n          index = version === 0 ? 12 : 20;\n          result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n          return result;\n        }, result);\n      };\n      /**\n       * Determine the base media decode start time, in seconds, for an MP4\n       * fragment. If multiple fragments are specified, the earliest time is\n       * returned.\n       *\n       * The base media decode time can be parsed from track fragment\n       * metadata:\n       * ```\n       * moof > traf > tfdt.baseMediaDecodeTime\n       * ```\n       * It requires the timescale value from the mdhd to interpret.\n       *\n       * @param timescale {object} a hash of track ids to timescale values.\n       * @return {number} the earliest base media decode start time for the\n       * fragment, in seconds\n       */\n\n\n      startTime = function startTime(timescale, fragment) {\n        var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n        trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n        baseTimes = [].concat.apply([], trafs.map(function (traf) {\n          return _findBox(traf, ['tfhd']).map(function (tfhd) {\n            var id, scale, baseTime; // get the track id from the tfhd\n\n            id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n            scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n            baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n              var version, result;\n              version = tfdt[0];\n              result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n              if (version === 1) {\n                result *= Math.pow(2, 32);\n                result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n              }\n\n              return result;\n            })[0];\n            baseTime = baseTime || Infinity; // convert base time to seconds\n\n            return baseTime / scale;\n          });\n        })); // return the minimum\n\n        result = Math.min.apply(null, baseTimes);\n        return isFinite(result) ? result : 0;\n      };\n      /**\n        * Find the trackIds of the video tracks in this source.\n        * Found by parsing the Handler Reference and Track Header Boxes:\n        *   moov > trak > mdia > hdlr\n        *   moov > trak > tkhd\n        *\n        * @param {Uint8Array} init - The bytes of the init segment for this source\n        * @return {Number[]} A list of trackIds\n        *\n        * @see ISO-BMFF-12/2015, Section 8.4.3\n       **/\n\n\n      getVideoTrackIds = function getVideoTrackIds(init) {\n        var traks = _findBox(init, ['moov', 'trak']);\n\n        var videoTrackIds = [];\n        traks.forEach(function (trak) {\n          var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n          var tkhds = _findBox(trak, ['tkhd']);\n\n          hdlrs.forEach(function (hdlr, index) {\n            var handlerType = parseType(hdlr.subarray(8, 12));\n            var tkhd = tkhds[index];\n            var view;\n            var version;\n            var trackId;\n\n            if (handlerType === 'vide') {\n              view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n              version = view.getUint8(0);\n              trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n              videoTrackIds.push(trackId);\n            }\n          });\n        });\n        return videoTrackIds;\n      };\n\n      var probe$$1 = {\n        findBox: _findBox,\n        parseType: parseType,\n        timescale: timescale,\n        startTime: startTime,\n        videoTrackIds: getVideoTrackIds\n      };\n      /**\n       * mux.js\n       *\n       * Copyright (c) 2014 Brightcove\n       * All rights reserved.\n       *\n       * A lightweight readable stream implemention that handles event dispatching.\n       * Objects that inherit from streams should call init in their constructors.\n       */\n\n      var Stream = function Stream() {\n        this.init = function () {\n          var listeners = {};\n          /**\n           * Add a listener for a specified event type.\n           * @param type {string} the event name\n           * @param listener {function} the callback to be invoked when an event of\n           * the specified type occurs\n           */\n\n          this.on = function (type, listener) {\n            if (!listeners[type]) {\n              listeners[type] = [];\n            }\n\n            listeners[type] = listeners[type].concat(listener);\n          };\n          /**\n           * Remove a listener for a specified event type.\n           * @param type {string} the event name\n           * @param listener {function} a function previously registered for this\n           * type of event through `on`\n           */\n\n\n          this.off = function (type, listener) {\n            var index;\n\n            if (!listeners[type]) {\n              return false;\n            }\n\n            index = listeners[type].indexOf(listener);\n            listeners[type] = listeners[type].slice();\n            listeners[type].splice(index, 1);\n            return index > -1;\n          };\n          /**\n           * Trigger an event of the specified type on this stream. Any additional\n           * arguments to this function are passed as parameters to event listeners.\n           * @param type {string} the event name\n           */\n\n\n          this.trigger = function (type) {\n            var callbacks, i, length, args;\n            callbacks = listeners[type];\n\n            if (!callbacks) {\n              return;\n            } // Slicing the arguments on every invocation of this method\n            // can add a significant amount of overhead. Avoid the\n            // intermediate object creation for the common case of a\n            // single callback argument\n\n\n            if (arguments.length === 2) {\n              length = callbacks.length;\n\n              for (i = 0; i < length; ++i) {\n                callbacks[i].call(this, arguments[1]);\n              }\n            } else {\n              args = [];\n              i = arguments.length;\n\n              for (i = 1; i < arguments.length; ++i) {\n                args.push(arguments[i]);\n              }\n\n              length = callbacks.length;\n\n              for (i = 0; i < length; ++i) {\n                callbacks[i].apply(this, args);\n              }\n            }\n          };\n          /**\n           * Destroys the stream and cleans up.\n           */\n\n\n          this.dispose = function () {\n            listeners = {};\n          };\n        };\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       * @param destination {stream} the stream that will receive all `data` events\n       * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n       *                            when the current stream emits a 'done' event\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function (destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n        this.on('done', function (flushSource) {\n          destination.flush(flushSource);\n        });\n        return destination;\n      }; // Default stream functions that are expected to be overridden to perform\n      // actual work. These are provided by the prototype as a sort of no-op\n      // implementation so that we don't have to check for their existence in the\n      // `pipe` function above.\n\n\n      Stream.prototype.push = function (data) {\n        this.trigger('data', data);\n      };\n\n      Stream.prototype.flush = function (flushSource) {\n        this.trigger('done', flushSource);\n      };\n\n      var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n\n      var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        } // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n\n\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        } // Push the final frame\n\n\n        frames.push(currentFrame);\n        return frames;\n      }; // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n\n\n      var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = []; // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration; // push the final Gop\n\n        gops.push(currentGop);\n        return gops;\n      };\n      /*\n       * Search for the first keyframe in the GOPs and throw away all frames\n       * until that keyframe. Then extend the duration of the pulled keyframe\n       * and pull the PTS and DTS of the keyframe so that it covers the time\n       * range of the frames that were disposed.\n       *\n       * @param {Array} gops video GOPs\n       * @returns {Array} modified video GOPs\n       */\n\n\n      var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n      /**\n       * Default sample object\n       * see ISO/IEC 14496-12:2012, section 8.6.4.3\n       */\n\n\n      var createDefaultSample = function createDefaultSample() {\n        return {\n          size: 0,\n          flags: {\n            isLeading: 0,\n            dependsOn: 1,\n            isDependedOn: 0,\n            hasRedundancy: 0,\n            degradationPriority: 0,\n            isNonSyncSample: 1\n          }\n        };\n      };\n      /*\n       * Collates information from a video frame into an object for eventual\n       * entry into an MP4 sample table.\n       *\n       * @param {Object} frame the video frame\n       * @param {Number} dataOffset the byte offset to position the sample\n       * @return {Object} object containing sample table info for a frame\n       */\n\n\n      var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n        var sample = createDefaultSample();\n        sample.dataOffset = dataOffset;\n        sample.compositionTimeOffset = frame.pts - frame.dts;\n        sample.duration = frame.duration;\n        sample.size = 4 * frame.length; // Space for nal unit size\n\n        sample.size += frame.byteLength;\n\n        if (frame.keyFrame) {\n          sample.flags.dependsOn = 2;\n          sample.flags.isNonSyncSample = 0;\n        }\n\n        return sample;\n      }; // generate the track's sample table from an array of gops\n\n\n      var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n            sample = sampleForFrame(currentFrame, dataOffset);\n            dataOffset += sample.size;\n            samples.push(sample);\n          }\n        }\n\n        return samples;\n      }; // generate the track's raw mdat data from an array of gops\n\n\n      var concatenateNalData = function concatenateNalData(gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer); // For each Gop..\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h]; // For each Frame..\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i]; // For each NAL..\n\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n\n        return data;\n      };\n\n      var frameUtils = {\n        groupNalsIntoFrames: groupNalsIntoFrames,\n        groupFramesIntoGops: groupFramesIntoGops,\n        extendFirstKeyFrame: extendFirstKeyFrame,\n        generateSampleTable: generateSampleTable,\n        concatenateNalData: concatenateNalData\n      };\n      var highPrefix = [33, 16, 5, 32, 164, 27];\n      var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n      var zeroFill = function zeroFill(count) {\n        var a = [];\n\n        while (count--) {\n          a.push(0);\n        }\n\n        return a;\n      };\n\n      var makeTable = function makeTable(metaTable) {\n        return Object.keys(metaTable).reduce(function (obj, key) {\n          obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n            return arr.concat(part);\n          }, []));\n          return obj;\n        }, {});\n      }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      var silence = makeTable(coneOfSilence);\n      var ONE_SECOND_IN_TS = 90000,\n          // 90kHz clock\n      secondsToVideoTs,\n          secondsToAudioTs,\n          videoTsToSeconds,\n          audioTsToSeconds,\n          audioTsToVideoTs,\n          videoTsToAudioTs;\n\n      secondsToVideoTs = function secondsToVideoTs(seconds) {\n        return seconds * ONE_SECOND_IN_TS;\n      };\n\n      secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n        return seconds * sampleRate;\n      };\n\n      videoTsToSeconds = function videoTsToSeconds(timestamp) {\n        return timestamp / ONE_SECOND_IN_TS;\n      };\n\n      audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n        return timestamp / sampleRate;\n      };\n\n      audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n        return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n      };\n\n      videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n        return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n      };\n\n      var clock = {\n        secondsToVideoTs: secondsToVideoTs,\n        secondsToAudioTs: secondsToAudioTs,\n        videoTsToSeconds: videoTsToSeconds,\n        audioTsToSeconds: audioTsToSeconds,\n        audioTsToVideoTs: audioTsToVideoTs,\n        videoTsToAudioTs: videoTsToAudioTs\n      };\n      var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n      /**\n       * Sum the `byteLength` properties of the data in each AAC frame\n       */\n\n      var sumFrameByteLengths = function sumFrameByteLengths(array) {\n        var i,\n            currentObj,\n            sum = 0; // sum the byteLength's all each nal unit in the frame\n\n        for (i = 0; i < array.length; i++) {\n          currentObj = array[i];\n          sum += currentObj.data.byteLength;\n        }\n\n        return sum;\n      }; // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n\n\n      var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        } // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n\n\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      }; // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n\n\n      var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        } // We will need to recalculate the earliest segment Dts\n\n\n        track.minSegmentDts = Infinity;\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          } // Otherwise, discard it\n\n\n          return false;\n        });\n      }; // generate the track's raw mdat data from an array of frames\n\n\n      var generateSampleTable$1 = function generateSampleTable(frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n          });\n        }\n\n        return samples;\n      }; // generate the track's sample table from an array of frames\n\n\n      var concatenateFrameData = function concatenateFrameData(frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n\n        return data;\n      };\n\n      var audioFrameUtils = {\n        prefixWithSilence: prefixWithSilence,\n        trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n        generateSampleTable: generateSampleTable$1,\n        concatenateFrameData: concatenateFrameData\n      };\n      var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n      /**\n       * Store information about the start and end of the track and the\n       * duration for each frame/sample we process in order to calculate\n       * the baseMediaDecodeTime\n       */\n\n      var collectDtsInfo = function collectDtsInfo(track, data) {\n        if (typeof data.pts === 'number') {\n          if (track.timelineStartInfo.pts === undefined) {\n            track.timelineStartInfo.pts = data.pts;\n          }\n\n          if (track.minSegmentPts === undefined) {\n            track.minSegmentPts = data.pts;\n          } else {\n            track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n          }\n\n          if (track.maxSegmentPts === undefined) {\n            track.maxSegmentPts = data.pts;\n          } else {\n            track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n          }\n        }\n\n        if (typeof data.dts === 'number') {\n          if (track.timelineStartInfo.dts === undefined) {\n            track.timelineStartInfo.dts = data.dts;\n          }\n\n          if (track.minSegmentDts === undefined) {\n            track.minSegmentDts = data.dts;\n          } else {\n            track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n          }\n\n          if (track.maxSegmentDts === undefined) {\n            track.maxSegmentDts = data.dts;\n          } else {\n            track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n          }\n        }\n      };\n      /**\n       * Clear values used to calculate the baseMediaDecodeTime between\n       * tracks\n       */\n\n\n      var clearDtsInfo = function clearDtsInfo(track) {\n        delete track.minSegmentDts;\n        delete track.maxSegmentDts;\n        delete track.minSegmentPts;\n        delete track.maxSegmentPts;\n      };\n      /**\n       * Calculate the track's baseMediaDecodeTime based on the earliest\n       * DTS the transmuxer has ever seen and the minimum DTS for the\n       * current track\n       * @param track {object} track metadata configuration\n       * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n       *        in the source; false to adjust the first segment to start at 0.\n       */\n\n\n      var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n        var baseMediaDecodeTime,\n            scale,\n            minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n        if (!keepOriginalTimestamps) {\n          minSegmentDts -= track.timelineStartInfo.dts;\n        } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n        // we want the start of the first segment to be placed\n\n\n        baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n        baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n        baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n        if (track.type === 'audio') {\n          // Audio has a different clock equal to the sampling_rate so we need to\n          // scale the PTS values into the clock rate of the track\n          scale = track.samplerate / ONE_SECOND_IN_TS$2;\n          baseMediaDecodeTime *= scale;\n          baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n        }\n\n        return baseMediaDecodeTime;\n      };\n\n      var trackDecodeInfo = {\n        clearDtsInfo: clearDtsInfo,\n        calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n        collectDtsInfo: collectDtsInfo\n      };\n      /**\n       * mux.js\n       *\n       * Copyright (c) 2015 Brightcove\n       * All rights reserved.\n       *\n       * Reads in-band caption information from a video elementary\n       * stream. Captions must follow the CEA-708 standard for injection\n       * into an MPEG-2 transport streams.\n       * @see https://en.wikipedia.org/wiki/CEA-708\n       * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n       */\n      // Supplemental enhancement information (SEI) NAL units have a\n      // payload type field to indicate how they are to be\n      // interpreted. CEAS-708 caption content is always transmitted with\n      // payload type 0x04.\n\n      var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n          RBSP_TRAILING_BITS = 128;\n      /**\n        * Parse a supplemental enhancement information (SEI) NAL unit.\n        * Stops parsing once a message of type ITU T T35 has been found.\n        *\n        * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n        * @return {object} the parsed SEI payload\n        * @see Rec. ITU-T H.264, 7.3.2.3.1\n        */\n\n      var parseSei = function parseSei(bytes) {\n        var i = 0,\n            result = {\n          payloadType: -1,\n          payloadSize: 0\n        },\n            payloadType = 0,\n            payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n        while (i < bytes.byteLength) {\n          // stop once we have hit the end of the sei_rbsp\n          if (bytes[i] === RBSP_TRAILING_BITS) {\n            break;\n          } // Parse payload type\n\n\n          while (bytes[i] === 0xFF) {\n            payloadType += 255;\n            i++;\n          }\n\n          payloadType += bytes[i++]; // Parse payload size\n\n          while (bytes[i] === 0xFF) {\n            payloadSize += 255;\n            i++;\n          }\n\n          payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n          // there can only ever be one caption message in a frame's sei\n\n          if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } // skip the payload and parse the next message\n\n\n          i += payloadSize;\n          payloadType = 0;\n          payloadSize = 0;\n        }\n\n        return result;\n      }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n      var parseUserData = function parseUserData(sei) {\n        // itu_t_t35_contry_code must be 181 (United States) for\n        // captions\n        if (sei.payload[0] !== 181) {\n          return null;\n        } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n        if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n          return null;\n        } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n        if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n          return null;\n        } // finally, user_data_type_code should be 0x03 for caption data\n\n\n        if (sei.payload[7] !== 0x03) {\n          return null;\n        } // return the user_data_type_structure and strip the trailing\n        // marker bits\n\n\n        return sei.payload.subarray(8, sei.payload.length - 1);\n      }; // see CEA-708-D, section 4.4\n\n\n      var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n        var results = [],\n            i,\n            count,\n            offset,\n            data; // if this is just filler, return immediately\n\n        if (!(userData[0] & 0x40)) {\n          return results;\n        } // parse out the cc_data_1 and cc_data_2 fields\n\n\n        count = userData[0] & 0x1f;\n\n        for (i = 0; i < count; i++) {\n          offset = i * 3;\n          data = {\n            type: userData[offset + 2] & 0x03,\n            pts: pts\n          }; // capture cc data when cc_valid is 1\n\n          if (userData[offset + 2] & 0x04) {\n            data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n            results.push(data);\n          }\n        }\n\n        return results;\n      };\n\n      var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      }; // exports\n\n\n      var captionPacketParser = {\n        parseSei: parseSei,\n        parseUserData: parseUserData,\n        parseCaptionPackets: parseCaptionPackets,\n        discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n        USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n      }; // -----------------\n      // Link To Transport\n      // -----------------\n\n      var CaptionStream = function CaptionStream() {\n        CaptionStream.prototype.init.call(this);\n        this.captionPackets_ = [];\n        this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n        new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n        new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n        new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n        ];\n        this.reset(); // forward data and done events from CCs to this CaptionStream\n\n        this.ccStreams_.forEach(function (cc) {\n          cc.on('data', this.trigger.bind(this, 'data'));\n          cc.on('done', this.trigger.bind(this, 'done'));\n        }, this);\n      };\n\n      CaptionStream.prototype = new stream();\n\n      CaptionStream.prototype.push = function (event) {\n        var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n        if (event.nalUnitType !== 'sei_rbsp') {\n          return;\n        } // parse the sei\n\n\n        sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n        if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n          return;\n        } // parse out the user data payload\n\n\n        userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n        if (!userData) {\n          return;\n        } // Sometimes, the same segment # will be downloaded twice. To stop the\n        // caption data from being processed twice, we track the latest dts we've\n        // received and ignore everything with a dts before that. However, since\n        // data for a specific dts can be split across packets on either side of\n        // a segment boundary, we need to make sure we *don't* ignore the packets\n        // from the *next* segment that have dts === this.latestDts_. By constantly\n        // tracking the number of packets received with dts === this.latestDts_, we\n        // know how many should be ignored once we start receiving duplicates.\n\n\n        if (event.dts < this.latestDts_) {\n          // We've started getting older data, so set the flag.\n          this.ignoreNextEqualDts_ = true;\n          return;\n        } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n          this.numSameDts_--;\n\n          if (!this.numSameDts_) {\n            // We've received the last duplicate packet, time to start processing again\n            this.ignoreNextEqualDts_ = false;\n          }\n\n          return;\n        } // parse out CC data packets and save them for later\n\n\n        newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n        this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n        if (this.latestDts_ !== event.dts) {\n          this.numSameDts_ = 0;\n        }\n\n        this.numSameDts_++;\n        this.latestDts_ = event.dts;\n      };\n\n      CaptionStream.prototype.flush = function () {\n        // make sure we actually parsed captions before proceeding\n        if (!this.captionPackets_.length) {\n          this.ccStreams_.forEach(function (cc) {\n            cc.flush();\n          }, this);\n          return;\n        } // In Chrome, the Array#sort function is not stable so add a\n        // presortIndex that we can use to ensure we get a stable-sort\n\n\n        this.captionPackets_.forEach(function (elem, idx) {\n          elem.presortIndex = idx;\n        }); // sort caption byte-pairs based on their PTS values\n\n        this.captionPackets_.sort(function (a, b) {\n          if (a.pts === b.pts) {\n            return a.presortIndex - b.presortIndex;\n          }\n\n          return a.pts - b.pts;\n        });\n        this.captionPackets_.forEach(function (packet) {\n          if (packet.type < 2) {\n            // Dispatch packet to the right Cea608Stream\n            this.dispatchCea608Packet(packet);\n          } // this is where an 'else' would go for a dispatching packets\n          // to a theoretical Cea708Stream that handles SERVICEn data\n\n        }, this);\n        this.captionPackets_.length = 0;\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      };\n\n      CaptionStream.prototype.reset = function () {\n        this.latestDts_ = null;\n        this.ignoreNextEqualDts_ = false;\n        this.numSameDts_ = 0;\n        this.activeCea608Channel_ = [null, null];\n        this.ccStreams_.forEach(function (ccStream) {\n          ccStream.reset();\n        });\n      };\n\n      CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n        // NOTE: packet.type is the CEA608 field\n        if (this.setsChannel1Active(packet)) {\n          this.activeCea608Channel_[packet.type] = 0;\n        } else if (this.setsChannel2Active(packet)) {\n          this.activeCea608Channel_[packet.type] = 1;\n        }\n\n        if (this.activeCea608Channel_[packet.type] === null) {\n          // If we haven't received anything to set the active channel, discard the\n          // data; we don't want jumbled captions\n          return;\n        }\n\n        this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n      };\n\n      CaptionStream.prototype.setsChannel1Active = function (packet) {\n        return (packet.ccData & 0x7800) === 0x1000;\n      };\n\n      CaptionStream.prototype.setsChannel2Active = function (packet) {\n        return (packet.ccData & 0x7800) === 0x1800;\n      }; // ----------------------\n      // Session to Application\n      // ----------------------\n      // This hash maps non-ASCII, special, and extended character codes to their\n      // proper Unicode equivalent. The first keys that are only a single byte\n      // are the non-standard ASCII characters, which simply map the CEA608 byte\n      // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n      // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n      // can be performed regardless of the field and data channel on which the\n      // character code was received.\n\n\n      var CHARACTER_TRANSLATION = {\n        0x2a: 0xe1,\n        // á\n        0x5c: 0xe9,\n        // é\n        0x5e: 0xed,\n        // í\n        0x5f: 0xf3,\n        // ó\n        0x60: 0xfa,\n        // ú\n        0x7b: 0xe7,\n        // ç\n        0x7c: 0xf7,\n        // ÷\n        0x7d: 0xd1,\n        // Ñ\n        0x7e: 0xf1,\n        // ñ\n        0x7f: 0x2588,\n        // █\n        0x0130: 0xae,\n        // ®\n        0x0131: 0xb0,\n        // °\n        0x0132: 0xbd,\n        // ½\n        0x0133: 0xbf,\n        // ¿\n        0x0134: 0x2122,\n        // ™\n        0x0135: 0xa2,\n        // ¢\n        0x0136: 0xa3,\n        // £\n        0x0137: 0x266a,\n        // ♪\n        0x0138: 0xe0,\n        // à\n        0x0139: 0xa0,\n        //\n        0x013a: 0xe8,\n        // è\n        0x013b: 0xe2,\n        // â\n        0x013c: 0xea,\n        // ê\n        0x013d: 0xee,\n        // î\n        0x013e: 0xf4,\n        // ô\n        0x013f: 0xfb,\n        // û\n        0x0220: 0xc1,\n        // Á\n        0x0221: 0xc9,\n        // É\n        0x0222: 0xd3,\n        // Ó\n        0x0223: 0xda,\n        // Ú\n        0x0224: 0xdc,\n        // Ü\n        0x0225: 0xfc,\n        // ü\n        0x0226: 0x2018,\n        // ‘\n        0x0227: 0xa1,\n        // ¡\n        0x0228: 0x2a,\n        // *\n        0x0229: 0x27,\n        // '\n        0x022a: 0x2014,\n        // —\n        0x022b: 0xa9,\n        // ©\n        0x022c: 0x2120,\n        // ℠\n        0x022d: 0x2022,\n        // •\n        0x022e: 0x201c,\n        // “\n        0x022f: 0x201d,\n        // ”\n        0x0230: 0xc0,\n        // À\n        0x0231: 0xc2,\n        // Â\n        0x0232: 0xc7,\n        // Ç\n        0x0233: 0xc8,\n        // È\n        0x0234: 0xca,\n        // Ê\n        0x0235: 0xcb,\n        // Ë\n        0x0236: 0xeb,\n        // ë\n        0x0237: 0xce,\n        // Î\n        0x0238: 0xcf,\n        // Ï\n        0x0239: 0xef,\n        // ï\n        0x023a: 0xd4,\n        // Ô\n        0x023b: 0xd9,\n        // Ù\n        0x023c: 0xf9,\n        // ù\n        0x023d: 0xdb,\n        // Û\n        0x023e: 0xab,\n        // «\n        0x023f: 0xbb,\n        // »\n        0x0320: 0xc3,\n        // Ã\n        0x0321: 0xe3,\n        // ã\n        0x0322: 0xcd,\n        // Í\n        0x0323: 0xcc,\n        // Ì\n        0x0324: 0xec,\n        // ì\n        0x0325: 0xd2,\n        // Ò\n        0x0326: 0xf2,\n        // ò\n        0x0327: 0xd5,\n        // Õ\n        0x0328: 0xf5,\n        // õ\n        0x0329: 0x7b,\n        // {\n        0x032a: 0x7d,\n        // }\n        0x032b: 0x5c,\n        // \\\n        0x032c: 0x5e,\n        // ^\n        0x032d: 0x5f,\n        // _\n        0x032e: 0x7c,\n        // |\n        0x032f: 0x7e,\n        // ~\n        0x0330: 0xc4,\n        // Ä\n        0x0331: 0xe4,\n        // ä\n        0x0332: 0xd6,\n        // Ö\n        0x0333: 0xf6,\n        // ö\n        0x0334: 0xdf,\n        // ß\n        0x0335: 0xa5,\n        // ¥\n        0x0336: 0xa4,\n        // ¤\n        0x0337: 0x2502,\n        // │\n        0x0338: 0xc5,\n        // Å\n        0x0339: 0xe5,\n        // å\n        0x033a: 0xd8,\n        // Ø\n        0x033b: 0xf8,\n        // ø\n        0x033c: 0x250c,\n        // ┌\n        0x033d: 0x2510,\n        // ┐\n        0x033e: 0x2514,\n        // └\n        0x033f: 0x2518 // ┘\n\n      };\n\n      var getCharFromCode = function getCharFromCode(code) {\n        if (code === null) {\n          return '';\n        }\n\n        code = CHARACTER_TRANSLATION[code] || code;\n        return String.fromCharCode(code);\n      }; // the index of the last row in a CEA-608 display buffer\n\n\n      var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n      // getting it through bit logic.\n\n      var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n      // cells. The \"bottom\" row is the last element in the outer array.\n\n      var createDisplayBuffer = function createDisplayBuffer() {\n        var result = [],\n            i = BOTTOM_ROW + 1;\n\n        while (i--) {\n          result.push('');\n        }\n\n        return result;\n      };\n\n      var Cea608Stream = function Cea608Stream(field, dataChannel) {\n        Cea608Stream.prototype.init.call(this);\n        this.field_ = field || 0;\n        this.dataChannel_ = dataChannel || 0;\n        this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n        this.setConstants();\n        this.reset();\n\n        this.push = function (packet) {\n          var data, swap, char0, char1, text; // remove the parity bits\n\n          data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n          if (data === this.lastControlCode_) {\n            this.lastControlCode_ = null;\n            return;\n          } // Store control codes\n\n\n          if ((data & 0xf000) === 0x1000) {\n            this.lastControlCode_ = data;\n          } else if (data !== this.PADDING_) {\n            this.lastControlCode_ = null;\n          }\n\n          char0 = data >>> 8;\n          char1 = data & 0xff;\n\n          if (data === this.PADDING_) {\n            return;\n          } else if (data === this.RESUME_CAPTION_LOADING_) {\n            this.mode_ = 'popOn';\n          } else if (data === this.END_OF_CAPTION_) {\n            // If an EOC is received while in paint-on mode, the displayed caption\n            // text should be swapped to non-displayed memory as if it was a pop-on\n            // caption. Because of that, we should explicitly switch back to pop-on\n            // mode\n            this.mode_ = 'popOn';\n            this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n            this.flushDisplayed(packet.pts); // flip memory\n\n            swap = this.displayed_;\n            this.displayed_ = this.nonDisplayed_;\n            this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n            this.startPts_ = packet.pts;\n          } else if (data === this.ROLL_UP_2_ROWS_) {\n            this.rollUpRows_ = 2;\n            this.setRollUp(packet.pts);\n          } else if (data === this.ROLL_UP_3_ROWS_) {\n            this.rollUpRows_ = 3;\n            this.setRollUp(packet.pts);\n          } else if (data === this.ROLL_UP_4_ROWS_) {\n            this.rollUpRows_ = 4;\n            this.setRollUp(packet.pts);\n          } else if (data === this.CARRIAGE_RETURN_) {\n            this.clearFormatting(packet.pts);\n            this.flushDisplayed(packet.pts);\n            this.shiftRowsUp_();\n            this.startPts_ = packet.pts;\n          } else if (data === this.BACKSPACE_) {\n            if (this.mode_ === 'popOn') {\n              this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n            } else {\n              this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n            }\n          } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n            this.nonDisplayed_ = createDisplayBuffer();\n          } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n            if (this.mode_ !== 'paintOn') {\n              // NOTE: This should be removed when proper caption positioning is\n              // implemented\n              this.flushDisplayed(packet.pts);\n              this.displayed_ = createDisplayBuffer();\n            }\n\n            this.mode_ = 'paintOn';\n            this.startPts_ = packet.pts; // Append special characters to caption text\n          } else if (this.isSpecialCharacter(char0, char1)) {\n            // Bitmask char0 so that we can apply character transformations\n            // regardless of field and data channel.\n            // Then byte-shift to the left and OR with char1 so we can pass the\n            // entire character code to `getCharFromCode`.\n            char0 = (char0 & 0x03) << 8;\n            text = getCharFromCode(char0 | char1);\n            this[this.mode_](packet.pts, text);\n            this.column_++; // Append extended characters to caption text\n          } else if (this.isExtCharacter(char0, char1)) {\n            // Extended characters always follow their \"non-extended\" equivalents.\n            // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n            // decoders are supposed to drop the \"è\", while compliant decoders\n            // backspace the \"e\" and insert \"è\".\n            // Delete the previous character\n            if (this.mode_ === 'popOn') {\n              this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n            } else {\n              this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n            } // Bitmask char0 so that we can apply character transformations\n            // regardless of field and data channel.\n            // Then byte-shift to the left and OR with char1 so we can pass the\n            // entire character code to `getCharFromCode`.\n\n\n            char0 = (char0 & 0x03) << 8;\n            text = getCharFromCode(char0 | char1);\n            this[this.mode_](packet.pts, text);\n            this.column_++; // Process mid-row codes\n          } else if (this.isMidRowCode(char0, char1)) {\n            // Attributes are not additive, so clear all formatting\n            this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n            // should be replaced with spaces, so add one now\n\n            this[this.mode_](packet.pts, ' ');\n            this.column_++;\n\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n\n            if ((char1 & 0x1) === 0x1) {\n              this.addFormatting(packet.pts, ['u']);\n            } // Detect offset control codes and adjust cursor\n\n          } else if (this.isOffsetControlCode(char0, char1)) {\n            // Cursor position is set by indent PAC (see below) in 4-column\n            // increments, with an additional offset code of 1-3 to reach any\n            // of the 32 columns specified by CEA-608. So all we need to do\n            // here is increment the column cursor by the given offset.\n            this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n          } else if (this.isPAC(char0, char1)) {\n            // There's no logic for PAC -> row mapping, so we have to just\n            // find the row code in an array and use its index :(\n            var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n            if (this.mode_ === 'rollUp') {\n              // This implies that the base row is incorrectly set.\n              // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n              // of roll-up rows set.\n              if (row - this.rollUpRows_ + 1 < 0) {\n                row = this.rollUpRows_ - 1;\n              }\n\n              this.setRollUp(packet.pts, row);\n            }\n\n            if (row !== this.row_) {\n              // formatting is only persistent for current row\n              this.clearFormatting(packet.pts);\n              this.row_ = row;\n            } // All PACs can apply underline, so detect and apply\n            // (All odd-numbered second bytes set underline)\n\n\n            if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n              this.addFormatting(packet.pts, ['u']);\n            }\n\n            if ((data & 0x10) === 0x10) {\n              // We've got an indent level code. Each successive even number\n              // increments the column cursor by 4, so we can get the desired\n              // column position by bit-shifting to the right (to get n/2)\n              // and multiplying by 4.\n              this.column_ = ((data & 0xe) >> 1) * 4;\n            }\n\n            if (this.isColorPAC(char1)) {\n              // it's a color code, though we only support white, which\n              // can be either normal or italicized. white italics can be\n              // either 0x4e or 0x6e depending on the row, so we just\n              // bitwise-and with 0xe to see if italics should be turned on\n              if ((char1 & 0xe) === 0xe) {\n                this.addFormatting(packet.pts, ['i']);\n              }\n            } // We have a normal character in char0, and possibly one in char1\n\n          } else if (this.isNormalChar(char0)) {\n            if (char1 === 0x00) {\n              char1 = null;\n            }\n\n            text = getCharFromCode(char0);\n            text += getCharFromCode(char1);\n            this[this.mode_](packet.pts, text);\n            this.column_ += text.length;\n          } // finish data processing\n\n        };\n      };\n\n      Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n      // display buffer\n\n      Cea608Stream.prototype.flushDisplayed = function (pts) {\n        var content = this.displayed_ // remove spaces from the start and end of the string\n        .map(function (row) {\n          try {\n            return row.trim();\n          } catch (e) {\n            // Ordinarily, this shouldn't happen. However, caption\n            // parsing errors should not throw exceptions and\n            // break playback.\n            // eslint-disable-next-line no-console\n            console.error('Skipping malformed caption.');\n            return '';\n          }\n        }) // combine all text rows to display in one cue\n        .join('\\n') // and remove blank rows from the start and end, but not the middle\n        .replace(/^\\n+|\\n+$/g, '');\n\n        if (content.length) {\n          this.trigger('data', {\n            startPts: this.startPts_,\n            endPts: pts,\n            text: content,\n            stream: this.name_\n          });\n        }\n      };\n      /**\n       * Zero out the data, used for startup and on seek\n       */\n\n\n      Cea608Stream.prototype.reset = function () {\n        this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n        // actually display captions. If a caption is shifted to a row\n        // with a lower index than this, it is cleared from the display\n        // buffer\n\n        this.topRow_ = 0;\n        this.startPts_ = 0;\n        this.displayed_ = createDisplayBuffer();\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n        this.column_ = 0;\n        this.row_ = BOTTOM_ROW;\n        this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n        this.formatting_ = [];\n      };\n      /**\n       * Sets up control code and related constants for this instance\n       */\n\n\n      Cea608Stream.prototype.setConstants = function () {\n        // The following attributes have these uses:\n        // ext_ :    char0 for mid-row codes, and the base for extended\n        //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n        //           extended codes)\n        // control_: char0 for control codes, except byte-shifted to the\n        //           left so that we can do this.control_ | CONTROL_CODE\n        // offset_:  char0 for tab offset codes\n        //\n        // It's also worth noting that control codes, and _only_ control codes,\n        // differ between field 1 and field2. Field 2 control codes are always\n        // their field 1 value plus 1. That's why there's the \"| field\" on the\n        // control value.\n        if (this.dataChannel_ === 0) {\n          this.BASE_ = 0x10;\n          this.EXT_ = 0x11;\n          this.CONTROL_ = (0x14 | this.field_) << 8;\n          this.OFFSET_ = 0x17;\n        } else if (this.dataChannel_ === 1) {\n          this.BASE_ = 0x18;\n          this.EXT_ = 0x19;\n          this.CONTROL_ = (0x1c | this.field_) << 8;\n          this.OFFSET_ = 0x1f;\n        } // Constants for the LSByte command codes recognized by Cea608Stream. This\n        // list is not exhaustive. For a more comprehensive listing and semantics see\n        // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n        // Padding\n\n\n        this.PADDING_ = 0x0000; // Pop-on Mode\n\n        this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n        this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n        this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n        this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n        this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n        this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n        this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n        this.BACKSPACE_ = this.CONTROL_ | 0x21;\n        this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n        this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n      };\n      /**\n       * Detects if the 2-byte packet data is a special character\n       *\n       * Special characters have a second byte in the range 0x30 to 0x3f,\n       * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n       * data channel 2).\n       *\n       * @param  {Integer} char0 The first byte\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the 2 bytes are an special character\n       */\n\n\n      Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n        return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n      };\n      /**\n       * Detects if the 2-byte packet data is an extended character\n       *\n       * Extended characters have a second byte in the range 0x20 to 0x3f,\n       * with the first byte being 0x12 or 0x13 (for data channel 1) or\n       * 0x1a or 0x1b (for data channel 2).\n       *\n       * @param  {Integer} char0 The first byte\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the 2 bytes are an extended character\n       */\n\n\n      Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n        return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n      };\n      /**\n       * Detects if the 2-byte packet is a mid-row code\n       *\n       * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n       * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n       * channel 2).\n       *\n       * @param  {Integer} char0 The first byte\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the 2 bytes are a mid-row code\n       */\n\n\n      Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n        return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n      };\n      /**\n       * Detects if the 2-byte packet is an offset control code\n       *\n       * Offset control codes have a second byte in the range 0x21 to 0x23,\n       * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n       * data channel 2).\n       *\n       * @param  {Integer} char0 The first byte\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the 2 bytes are an offset control code\n       */\n\n\n      Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n        return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n      };\n      /**\n       * Detects if the 2-byte packet is a Preamble Address Code\n       *\n       * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n       * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n       * range 0x40 to 0x7f.\n       *\n       * @param  {Integer} char0 The first byte\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the 2 bytes are a PAC\n       */\n\n\n      Cea608Stream.prototype.isPAC = function (char0, char1) {\n        return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n      };\n      /**\n       * Detects if a packet's second byte is in the range of a PAC color code\n       *\n       * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n       * 0x60 to 0x6f.\n       *\n       * @param  {Integer} char1 The second byte\n       * @return {Boolean}       Whether the byte is a color PAC\n       */\n\n\n      Cea608Stream.prototype.isColorPAC = function (char1) {\n        return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n      };\n      /**\n       * Detects if a single byte is in the range of a normal character\n       *\n       * Normal text bytes are in the range 0x20 to 0x7f.\n       *\n       * @param  {Integer} char  The byte\n       * @return {Boolean}       Whether the byte is a normal character\n       */\n\n\n      Cea608Stream.prototype.isNormalChar = function (char) {\n        return char >= 0x20 && char <= 0x7f;\n      };\n      /**\n       * Configures roll-up\n       *\n       * @param  {Integer} pts         Current PTS\n       * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n       *                               a new position\n       */\n\n\n      Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n        // Reset the base row to the bottom row when switching modes\n        if (this.mode_ !== 'rollUp') {\n          this.row_ = BOTTOM_ROW;\n          this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n          this.flushDisplayed(pts);\n          this.nonDisplayed_ = createDisplayBuffer();\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n          // move currently displayed captions (up or down) to the new base row\n          for (var i = 0; i < this.rollUpRows_; i++) {\n            this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n            this.displayed_[this.row_ - i] = '';\n          }\n        }\n\n        if (newBaseRow === undefined) {\n          newBaseRow = this.row_;\n        }\n\n        this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n      }; // Adds the opening HTML tag for the passed character to the caption text,\n      // and keeps track of it for later closing\n\n\n      Cea608Stream.prototype.addFormatting = function (pts, format) {\n        this.formatting_ = this.formatting_.concat(format);\n        var text = format.reduce(function (text, format) {\n          return text + '<' + format + '>';\n        }, '');\n        this[this.mode_](pts, text);\n      }; // Adds HTML closing tags for current formatting to caption text and\n      // clears remembered formatting\n\n\n      Cea608Stream.prototype.clearFormatting = function (pts) {\n        if (!this.formatting_.length) {\n          return;\n        }\n\n        var text = this.formatting_.reverse().reduce(function (text, format) {\n          return text + '</' + format + '>';\n        }, '');\n        this.formatting_ = [];\n        this[this.mode_](pts, text);\n      }; // Mode Implementations\n\n\n      Cea608Stream.prototype.popOn = function (pts, text) {\n        var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n        baseRow += text;\n        this.nonDisplayed_[this.row_] = baseRow;\n      };\n\n      Cea608Stream.prototype.rollUp = function (pts, text) {\n        var baseRow = this.displayed_[this.row_];\n        baseRow += text;\n        this.displayed_[this.row_] = baseRow;\n      };\n\n      Cea608Stream.prototype.shiftRowsUp_ = function () {\n        var i; // clear out inactive rows\n\n        for (i = 0; i < this.topRow_; i++) {\n          this.displayed_[i] = '';\n        }\n\n        for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n          this.displayed_[i] = '';\n        } // shift displayed rows up\n\n\n        for (i = this.topRow_; i < this.row_; i++) {\n          this.displayed_[i] = this.displayed_[i + 1];\n        } // clear out the bottom row\n\n\n        this.displayed_[this.row_] = '';\n      };\n\n      Cea608Stream.prototype.paintOn = function (pts, text) {\n        var baseRow = this.displayed_[this.row_];\n        baseRow += text;\n        this.displayed_[this.row_] = baseRow;\n      }; // exports\n\n\n      var captionStream = {\n        CaptionStream: CaptionStream,\n        Cea608Stream: Cea608Stream\n      };\n      var streamTypes = {\n        H264_STREAM_TYPE: 0x1B,\n        ADTS_STREAM_TYPE: 0x0F,\n        METADATA_STREAM_TYPE: 0x15\n      };\n      var MAX_TS = 8589934592;\n      var RO_THRESH = 4294967296;\n\n      var handleRollover = function handleRollover(value, reference) {\n        var direction = 1;\n\n        if (value > reference) {\n          // If the current timestamp value is greater than our reference timestamp and we detect a\n          // timestamp rollover, this means the roll over is happening in the opposite direction.\n          // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n          // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n          // rollover point. In loading this segment, the timestamp values will be very large,\n          // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n          // the time stamp to be `value - 2^33`.\n          direction = -1;\n        } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n        // cause an incorrect adjustment.\n\n\n        while (Math.abs(reference - value) > RO_THRESH) {\n          value += direction * MAX_TS;\n        }\n\n        return value;\n      };\n\n      var TimestampRolloverStream = function TimestampRolloverStream(type) {\n        var lastDTS, referenceDTS;\n        TimestampRolloverStream.prototype.init.call(this);\n        this.type_ = type;\n\n        this.push = function (data) {\n          if (data.type !== this.type_) {\n            return;\n          }\n\n          if (referenceDTS === undefined) {\n            referenceDTS = data.dts;\n          }\n\n          data.dts = handleRollover(data.dts, referenceDTS);\n          data.pts = handleRollover(data.pts, referenceDTS);\n          lastDTS = data.dts;\n          this.trigger('data', data);\n        };\n\n        this.flush = function () {\n          referenceDTS = lastDTS;\n          this.trigger('done');\n        };\n\n        this.discontinuity = function () {\n          referenceDTS = void 0;\n          lastDTS = void 0;\n        };\n      };\n\n      TimestampRolloverStream.prototype = new stream();\n      var timestampRolloverStream = {\n        TimestampRolloverStream: TimestampRolloverStream,\n        handleRollover: handleRollover\n      };\n\n      var percentEncode = function percentEncode(bytes, start, end) {\n        var i,\n            result = '';\n\n        for (i = start; i < end; i++) {\n          result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n        }\n\n        return result;\n      },\n          // return the string representation of the specified byte range,\n      // interpreted as UTf-8.\n      parseUtf8 = function parseUtf8(bytes, start, end) {\n        return decodeURIComponent(percentEncode(bytes, start, end));\n      },\n          // return the string representation of the specified byte range,\n      // interpreted as ISO-8859-1.\n      parseIso88591 = function parseIso88591(bytes, start, end) {\n        return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n      },\n          parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n        return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n      },\n          tagParsers = {\n        TXXX: function TXXX(tag) {\n          var i;\n\n          if (tag.data[0] !== 3) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n\n          for (i = 1; i < tag.data.length; i++) {\n            if (tag.data[i] === 0) {\n              // parse the text fields\n              tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n              tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n              break;\n            }\n          }\n\n          tag.data = tag.value;\n        },\n        WXXX: function WXXX(tag) {\n          var i;\n\n          if (tag.data[0] !== 3) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n\n          for (i = 1; i < tag.data.length; i++) {\n            if (tag.data[i] === 0) {\n              // parse the description and URL fields\n              tag.description = parseUtf8(tag.data, 1, i);\n              tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n              break;\n            }\n          }\n        },\n        PRIV: function PRIV(tag) {\n          var i;\n\n          for (i = 0; i < tag.data.length; i++) {\n            if (tag.data[i] === 0) {\n              // parse the description and URL fields\n              tag.owner = parseIso88591(tag.data, 0, i);\n              break;\n            }\n          }\n\n          tag.privateData = tag.data.subarray(i + 1);\n          tag.data = tag.privateData;\n        }\n      },\n          _MetadataStream;\n\n      _MetadataStream = function MetadataStream(options) {\n        var settings = {\n          debug: !!(options && options.debug),\n          // the bytes of the program-level descriptor field in MP2T\n          // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n          // program element descriptors\"\n          descriptor: options && options.descriptor\n        },\n            // the total size in bytes of the ID3 tag being parsed\n        tagSize = 0,\n            // tag data that is not complete enough to be parsed\n        buffer = [],\n            // the total number of bytes currently in the buffer\n        bufferSize = 0,\n            i;\n\n        _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n        // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n        this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n        if (settings.descriptor) {\n          for (i = 0; i < settings.descriptor.length; i++) {\n            this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n          }\n        }\n\n        this.push = function (chunk) {\n          var tag, frameStart, frameSize, frame, i, frameHeader;\n\n          if (chunk.type !== 'timed-metadata') {\n            return;\n          } // if data_alignment_indicator is set in the PES header,\n          // we must have the start of a new ID3 tag. Assume anything\n          // remaining in the buffer was malformed and throw it out\n\n\n          if (chunk.dataAlignmentIndicator) {\n            bufferSize = 0;\n            buffer.length = 0;\n          } // ignore events that don't look like ID3 data\n\n\n          if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n            if (settings.debug) {\n              // eslint-disable-next-line no-console\n              console.log('Skipping unrecognized metadata packet');\n            }\n\n            return;\n          } // add this chunk to the data we've collected so far\n\n\n          buffer.push(chunk);\n          bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n          if (buffer.length === 1) {\n            // the frame size is transmitted as a 28-bit integer in the\n            // last four bytes of the ID3 header.\n            // The most significant bit of each byte is dropped and the\n            // results concatenated to recover the actual value.\n            tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n            // convenient for our comparisons to include it\n\n            tagSize += 10;\n          } // if the entire frame has not arrived, wait for more data\n\n\n          if (bufferSize < tagSize) {\n            return;\n          } // collect the entire frame so it can be parsed\n\n\n          tag = {\n            data: new Uint8Array(tagSize),\n            frames: [],\n            pts: buffer[0].pts,\n            dts: buffer[0].dts\n          };\n\n          for (i = 0; i < tagSize;) {\n            tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n            i += buffer[0].data.byteLength;\n            bufferSize -= buffer[0].data.byteLength;\n            buffer.shift();\n          } // find the start of the first frame and the end of the tag\n\n\n          frameStart = 10;\n\n          if (tag.data[5] & 0x40) {\n            // advance the frame start past the extended header\n            frameStart += 4; // header size field\n\n            frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n            tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n          } // parse one or more ID3 frames\n          // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n          do {\n            // determine the number of bytes in this frame\n            frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n            if (frameSize < 1) {\n              // eslint-disable-next-line no-console\n              return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n            }\n\n            frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n            frame = {\n              id: frameHeader,\n              data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n            };\n            frame.key = frame.id;\n\n            if (tagParsers[frame.id]) {\n              tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n              // time for raw AAC data\n\n              if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.data,\n                    size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n                // on the value of this frame\n                // we couldn't have known the appropriate pts and dts before\n                // parsing this ID3 tag so set those values now\n\n                if (tag.pts === undefined && tag.dts === undefined) {\n                  tag.pts = frame.timeStamp;\n                  tag.dts = frame.timeStamp;\n                }\n\n                this.trigger('timestamp', frame);\n              }\n            }\n\n            tag.frames.push(frame);\n            frameStart += 10; // advance past the frame header\n\n            frameStart += frameSize; // advance past the frame body\n          } while (frameStart < tagSize);\n\n          this.trigger('data', tag);\n        };\n      };\n\n      _MetadataStream.prototype = new stream();\n      var metadataStream = _MetadataStream;\n      var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n      var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n      var MP2T_PACKET_LENGTH = 188,\n          // bytes\n      SYNC_BYTE = 0x47;\n      /**\n       * Splits an incoming stream of binary data into MPEG-2 Transport\n       * Stream packets.\n       */\n\n      _TransportPacketStream = function TransportPacketStream() {\n        var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n            bytesInBuffer = 0;\n\n        _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n        /**\n         * Split a stream of data into M2TS packets\n        **/\n\n\n        this.push = function (bytes) {\n          var startIndex = 0,\n              endIndex = MP2T_PACKET_LENGTH,\n              everything; // If there are bytes remaining from the last segment, prepend them to the\n          // bytes that were pushed in\n\n          if (bytesInBuffer) {\n            everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n            everything.set(buffer.subarray(0, bytesInBuffer));\n            everything.set(bytes, bytesInBuffer);\n            bytesInBuffer = 0;\n          } else {\n            everything = bytes;\n          } // While we have enough data for a packet\n\n\n          while (endIndex < everything.byteLength) {\n            // Look for a pair of start and end sync bytes in the data..\n            if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n              // We found a packet so emit it and jump one whole packet forward in\n              // the stream\n              this.trigger('data', everything.subarray(startIndex, endIndex));\n              startIndex += MP2T_PACKET_LENGTH;\n              endIndex += MP2T_PACKET_LENGTH;\n              continue;\n            } // If we get here, we have somehow become de-synchronized and we need to step\n            // forward one byte at a time until we find a pair of sync bytes that denote\n            // a packet\n\n\n            startIndex++;\n            endIndex++;\n          } // If there was some data left over at the end of the segment that couldn't\n          // possibly be a whole packet, keep it because it might be the start of a packet\n          // that continues in the next segment\n\n\n          if (startIndex < everything.byteLength) {\n            buffer.set(everything.subarray(startIndex), 0);\n            bytesInBuffer = everything.byteLength - startIndex;\n          }\n        };\n        /**\n         * Passes identified M2TS packets to the TransportParseStream to be parsed\n        **/\n\n\n        this.flush = function () {\n          // If the buffer contains a whole packet when we are being flushed, emit it\n          // and empty the buffer. Otherwise hold onto the data because it may be\n          // important for decoding the next segment\n          if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n            this.trigger('data', buffer);\n            bytesInBuffer = 0;\n          }\n\n          this.trigger('done');\n        };\n      };\n\n      _TransportPacketStream.prototype = new stream();\n      /**\n       * Accepts an MP2T TransportPacketStream and emits data events with parsed\n       * forms of the individual transport stream packets.\n       */\n\n      _TransportParseStream = function TransportParseStream() {\n        var parsePsi, parsePat, parsePmt, self;\n\n        _TransportParseStream.prototype.init.call(this);\n\n        self = this;\n        this.packetsWaitingForPmt = [];\n        this.programMapTable = undefined;\n\n        parsePsi = function parsePsi(payload, psi) {\n          var offset = 0; // PSI packets may be split into multiple sections and those\n          // sections may be split into multiple packets. If a PSI\n          // section starts in this packet, the payload_unit_start_indicator\n          // will be true and the first byte of the payload will indicate\n          // the offset from the current position to the start of the\n          // section.\n\n          if (psi.payloadUnitStartIndicator) {\n            offset += payload[offset] + 1;\n          }\n\n          if (psi.type === 'pat') {\n            parsePat(payload.subarray(offset), psi);\n          } else {\n            parsePmt(payload.subarray(offset), psi);\n          }\n        };\n\n        parsePat = function parsePat(payload, pat) {\n          pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n          pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n          // skip the PSI header and parse the first PMT entry\n\n          self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n          pat.pmtPid = self.pmtPid;\n        };\n        /**\n         * Parse out the relevant fields of a Program Map Table (PMT).\n         * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n         * packet. The first byte in this array should be the table_id\n         * field.\n         * @param pmt {object} the object that should be decorated with\n         * fields parsed from the PMT.\n         */\n\n\n        parsePmt = function parsePmt(payload, pmt) {\n          var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n          // take effect. We don't believe this should ever be the case\n          // for HLS but we'll ignore \"forward\" PMT declarations if we see\n          // them. Future PMT declarations have the current_next_indicator\n          // set to zero.\n\n          if (!(payload[5] & 0x01)) {\n            return;\n          } // overwrite any existing program map table\n\n\n          self.programMapTable = {\n            video: null,\n            audio: null,\n            'timed-metadata': {}\n          }; // the mapping table ends at the end of the current section\n\n          sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n          tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n          // long the program info descriptors are\n\n          programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n          offset = 12 + programInfoLength;\n\n          while (offset < tableEnd) {\n            var streamType = payload[offset];\n            var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n            // TODO: should this be done for metadata too? for now maintain behavior of\n            //       multiple metadata streams\n\n            if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n              self.programMapTable.video = pid;\n            } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n              self.programMapTable.audio = pid;\n            } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n              // map pid to stream type for metadata streams\n              self.programMapTable['timed-metadata'][pid] = streamType;\n            } // move to the next table entry\n            // skip past the elementary stream descriptors, if present\n\n\n            offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n          } // record the map on the packet as well\n\n\n          pmt.programMapTable = self.programMapTable;\n        };\n        /**\n         * Deliver a new MP2T packet to the next stream in the pipeline.\n         */\n\n\n        this.push = function (packet) {\n          var result = {},\n              offset = 4;\n          result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n          result.pid = packet[1] & 0x1f;\n          result.pid <<= 8;\n          result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n          // fifth byte of the TS packet header. The adaptation field is\n          // used to add stuffing to PES packets that don't fill a complete\n          // TS packet, and to specify some forms of timing and control data\n          // that we do not currently use.\n\n          if ((packet[3] & 0x30) >>> 4 > 0x01) {\n            offset += packet[offset] + 1;\n          } // parse the rest of the packet based on the type\n\n\n          if (result.pid === 0) {\n            result.type = 'pat';\n            parsePsi(packet.subarray(offset), result);\n            this.trigger('data', result);\n          } else if (result.pid === this.pmtPid) {\n            result.type = 'pmt';\n            parsePsi(packet.subarray(offset), result);\n            this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n            while (this.packetsWaitingForPmt.length) {\n              this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n            }\n          } else if (this.programMapTable === undefined) {\n            // When we have not seen a PMT yet, defer further processing of\n            // PES packets until one has been parsed\n            this.packetsWaitingForPmt.push([packet, offset, result]);\n          } else {\n            this.processPes_(packet, offset, result);\n          }\n        };\n\n        this.processPes_ = function (packet, offset, result) {\n          // set the appropriate stream type\n          if (result.pid === this.programMapTable.video) {\n            result.streamType = streamTypes.H264_STREAM_TYPE;\n          } else if (result.pid === this.programMapTable.audio) {\n            result.streamType = streamTypes.ADTS_STREAM_TYPE;\n          } else {\n            // if not video or audio, it is timed-metadata or unknown\n            // if unknown, streamType will be undefined\n            result.streamType = this.programMapTable['timed-metadata'][result.pid];\n          }\n\n          result.type = 'pes';\n          result.data = packet.subarray(offset);\n          this.trigger('data', result);\n        };\n      };\n\n      _TransportParseStream.prototype = new stream();\n      _TransportParseStream.STREAM_TYPES = {\n        h264: 0x1b,\n        adts: 0x0f\n      };\n      /**\n       * Reconsistutes program elementary stream (PES) packets from parsed\n       * transport stream packets. That is, if you pipe an\n       * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n       * events will be events which capture the bytes for individual PES\n       * packets plus relevant metadata that has been extracted from the\n       * container.\n       */\n\n      _ElementaryStream = function ElementaryStream() {\n        var self = this,\n            // PES packet fragments\n        video = {\n          data: [],\n          size: 0\n        },\n            audio = {\n          data: [],\n          size: 0\n        },\n            timedMetadata = {\n          data: [],\n          size: 0\n        },\n            parsePes = function parsePes(payload, pes) {\n          var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n          pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n          pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n          // and a DTS value. Determine what combination of values is\n          // available to work with.\n\n          ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n          // performs all bitwise operations on 32-bit integers but javascript\n          // supports a much greater range (52-bits) of integer using standard\n          // mathematical operations.\n          // We construct a 31-bit value using bitwise operators over the 31\n          // most significant bits and then multiply by 4 (equal to a left-shift\n          // of 2) before we add the final 2 least significant bits of the\n          // timestamp (equal to an OR.)\n\n          if (ptsDtsFlags & 0xC0) {\n            // the PTS and DTS are not written out directly. For information\n            // on how they are encoded, see\n            // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n            pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n            pes.pts *= 4; // Left shift by 2\n\n            pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n            pes.dts = pes.pts;\n\n            if (ptsDtsFlags & 0x40) {\n              pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n              pes.dts *= 4; // Left shift by 2\n\n              pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n            }\n          } // the data section starts immediately after the PES header.\n          // pes_header_data_length specifies the number of header bytes\n          // that follow the last byte of the field.\n\n\n          pes.data = payload.subarray(9 + payload[8]);\n        },\n\n        /**\n          * Pass completely parsed PES packets to the next stream in the pipeline\n         **/\n        flushStream = function flushStream(stream$$1, type, forceFlush) {\n          var packetData = new Uint8Array(stream$$1.size),\n              event = {\n            type: type\n          },\n              i = 0,\n              offset = 0,\n              packetFlushable = false,\n              fragment; // do nothing if there is not enough buffered data for a complete\n          // PES header\n\n          if (!stream$$1.data.length || stream$$1.size < 9) {\n            return;\n          }\n\n          event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n          for (i = 0; i < stream$$1.data.length; i++) {\n            fragment = stream$$1.data[i];\n            packetData.set(fragment.data, offset);\n            offset += fragment.data.byteLength;\n          } // parse assembled packet's PES header\n\n\n          parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n          // check that there is enough stream data to fill the packet\n\n          packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n          if (forceFlush || packetFlushable) {\n            stream$$1.size = 0;\n            stream$$1.data.length = 0;\n          } // only emit packets that are complete. this is to avoid assembling\n          // incomplete PES packets due to poor segmentation\n\n\n          if (packetFlushable) {\n            self.trigger('data', event);\n          }\n        };\n\n        _ElementaryStream.prototype.init.call(this);\n        /**\n         * Identifies M2TS packet types and parses PES packets using metadata\n         * parsed from the PMT\n         **/\n\n\n        this.push = function (data) {\n          ({\n            pat: function pat() {// we have to wait for the PMT to arrive as well before we\n              // have any meaningful metadata\n            },\n            pes: function pes() {\n              var stream$$1, streamType;\n\n              switch (data.streamType) {\n                case streamTypes.H264_STREAM_TYPE:\n                case streamTypes.H264_STREAM_TYPE:\n                  stream$$1 = video;\n                  streamType = 'video';\n                  break;\n\n                case streamTypes.ADTS_STREAM_TYPE:\n                  stream$$1 = audio;\n                  streamType = 'audio';\n                  break;\n\n                case streamTypes.METADATA_STREAM_TYPE:\n                  stream$$1 = timedMetadata;\n                  streamType = 'timed-metadata';\n                  break;\n\n                default:\n                  // ignore unknown stream types\n                  return;\n              } // if a new packet is starting, we can flush the completed\n              // packet\n\n\n              if (data.payloadUnitStartIndicator) {\n                flushStream(stream$$1, streamType, true);\n              } // buffer this fragment until we are sure we've received the\n              // complete payload\n\n\n              stream$$1.data.push(data);\n              stream$$1.size += data.data.byteLength;\n            },\n            pmt: function pmt() {\n              var event = {\n                type: 'metadata',\n                tracks: []\n              },\n                  programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n              if (programMapTable.video !== null) {\n                event.tracks.push({\n                  timelineStartInfo: {\n                    baseMediaDecodeTime: 0\n                  },\n                  id: +programMapTable.video,\n                  codec: 'avc',\n                  type: 'video'\n                });\n              }\n\n              if (programMapTable.audio !== null) {\n                event.tracks.push({\n                  timelineStartInfo: {\n                    baseMediaDecodeTime: 0\n                  },\n                  id: +programMapTable.audio,\n                  codec: 'adts',\n                  type: 'audio'\n                });\n              }\n\n              self.trigger('data', event);\n            }\n          })[data.type]();\n        };\n        /**\n         * Flush any remaining input. Video PES packets may be of variable\n         * length. Normally, the start of a new video packet can trigger the\n         * finalization of the previous packet. That is not possible if no\n         * more video is forthcoming, however. In that case, some other\n         * mechanism (like the end of the file) has to be employed. When it is\n         * clear that no additional data is forthcoming, calling this method\n         * will flush the buffered packets.\n         */\n\n\n        this.flush = function () {\n          // !!THIS ORDER IS IMPORTANT!!\n          // video first then audio\n          flushStream(video, 'video');\n          flushStream(audio, 'audio');\n          flushStream(timedMetadata, 'timed-metadata');\n          this.trigger('done');\n        };\n      };\n\n      _ElementaryStream.prototype = new stream();\n      var m2ts = {\n        PAT_PID: 0x0000,\n        MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n        TransportPacketStream: _TransportPacketStream,\n        TransportParseStream: _TransportParseStream,\n        ElementaryStream: _ElementaryStream,\n        TimestampRolloverStream: TimestampRolloverStream$1,\n        CaptionStream: captionStream.CaptionStream,\n        Cea608Stream: captionStream.Cea608Stream,\n        MetadataStream: metadataStream\n      };\n\n      for (var type in streamTypes) {\n        if (streamTypes.hasOwnProperty(type)) {\n          m2ts[type] = streamTypes[type];\n        }\n      }\n\n      var m2ts_1 = m2ts;\n\n      var _AdtsStream;\n\n      var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      /*\n       * Accepts a ElementaryStream and emits data events with parsed\n       * AAC Audio Frames of the individual packets. Input audio in ADTS\n       * format is unpacked and re-emitted as AAC frames.\n       *\n       * @see http://wiki.multimedia.cx/index.php?title=ADTS\n       * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n       */\n\n      _AdtsStream = function AdtsStream() {\n        var buffer;\n\n        _AdtsStream.prototype.init.call(this);\n\n        this.push = function (packet) {\n          var i = 0,\n              frameNum = 0,\n              frameLength,\n              protectionSkipBytes,\n              frameEnd,\n              oldBuffer,\n              sampleCount,\n              adtsFrameDuration;\n\n          if (packet.type !== 'audio') {\n            // ignore non-audio data\n            return;\n          } // Prepend any data in the buffer to the input data so that we can parse\n          // aac frames the cross a PES packet boundary\n\n\n          if (buffer) {\n            oldBuffer = buffer;\n            buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n            buffer.set(oldBuffer);\n            buffer.set(packet.data, oldBuffer.byteLength);\n          } else {\n            buffer = packet.data;\n          } // unpack any ADTS frames which have been fully received\n          // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n          while (i + 5 < buffer.length) {\n            // Loook for the start of an ADTS header..\n            if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n              // If a valid header was not found,  jump one forward and attempt to\n              // find a valid ADTS header starting at the next byte\n              i++;\n              continue;\n            } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n            // end of the ADTS header\n\n\n            protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n            // end of the sync sequence\n\n            frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n            sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n            adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n            frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n            // and wait for more data\n\n            if (buffer.byteLength < frameEnd) {\n              return;\n            } // Otherwise, deliver the complete AAC frame\n\n\n            this.trigger('data', {\n              pts: packet.pts + frameNum * adtsFrameDuration,\n              dts: packet.dts + frameNum * adtsFrameDuration,\n              sampleCount: sampleCount,\n              audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n              channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n              samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n              samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n              // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n              samplesize: 16,\n              data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n            }); // If the buffer is empty, clear it and return\n\n            if (buffer.byteLength === frameEnd) {\n              buffer = undefined;\n              return;\n            }\n\n            frameNum++; // Remove the finished frame from the buffer and start the process again\n\n            buffer = buffer.subarray(frameEnd);\n          }\n        };\n\n        this.flush = function () {\n          this.trigger('done');\n        };\n      };\n\n      _AdtsStream.prototype = new stream();\n      var adts = _AdtsStream;\n      var ExpGolomb;\n      /**\n       * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n       * scheme used by h264.\n       */\n\n      ExpGolomb = function ExpGolomb(workingData) {\n        var // the number of bytes left to examine in workingData\n        workingBytesAvailable = workingData.byteLength,\n            // the current word being examined\n        workingWord = 0,\n            // :uint\n        // the number of bits left to examine in the current word\n        workingBitsAvailable = 0; // :uint;\n        // ():uint\n\n        this.length = function () {\n          return 8 * workingBytesAvailable;\n        }; // ():uint\n\n\n        this.bitsAvailable = function () {\n          return 8 * workingBytesAvailable + workingBitsAvailable;\n        }; // ():void\n\n\n        this.loadWord = function () {\n          var position = workingData.byteLength - workingBytesAvailable,\n              workingBytes = new Uint8Array(4),\n              availableBytes = Math.min(4, workingBytesAvailable);\n\n          if (availableBytes === 0) {\n            throw new Error('no bytes available');\n          }\n\n          workingBytes.set(workingData.subarray(position, position + availableBytes));\n          workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n          workingBitsAvailable = availableBytes * 8;\n          workingBytesAvailable -= availableBytes;\n        }; // (count:int):void\n\n\n        this.skipBits = function (count) {\n          var skipBytes; // :int\n\n          if (workingBitsAvailable > count) {\n            workingWord <<= count;\n            workingBitsAvailable -= count;\n          } else {\n            count -= workingBitsAvailable;\n            skipBytes = Math.floor(count / 8);\n            count -= skipBytes * 8;\n            workingBytesAvailable -= skipBytes;\n            this.loadWord();\n            workingWord <<= count;\n            workingBitsAvailable -= count;\n          }\n        }; // (size:int):uint\n\n\n        this.readBits = function (size) {\n          var bits = Math.min(workingBitsAvailable, size),\n              // :uint\n          valu = workingWord >>> 32 - bits; // :uint\n          // if size > 31, handle error\n\n          workingBitsAvailable -= bits;\n\n          if (workingBitsAvailable > 0) {\n            workingWord <<= bits;\n          } else if (workingBytesAvailable > 0) {\n            this.loadWord();\n          }\n\n          bits = size - bits;\n\n          if (bits > 0) {\n            return valu << bits | this.readBits(bits);\n          }\n\n          return valu;\n        }; // ():uint\n\n\n        this.skipLeadingZeros = function () {\n          var leadingZeroCount; // :uint\n\n          for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n            if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n              // the first bit of working word is 1\n              workingWord <<= leadingZeroCount;\n              workingBitsAvailable -= leadingZeroCount;\n              return leadingZeroCount;\n            }\n          } // we exhausted workingWord and still have not found a 1\n\n\n          this.loadWord();\n          return leadingZeroCount + this.skipLeadingZeros();\n        }; // ():void\n\n\n        this.skipUnsignedExpGolomb = function () {\n          this.skipBits(1 + this.skipLeadingZeros());\n        }; // ():void\n\n\n        this.skipExpGolomb = function () {\n          this.skipBits(1 + this.skipLeadingZeros());\n        }; // ():uint\n\n\n        this.readUnsignedExpGolomb = function () {\n          var clz = this.skipLeadingZeros(); // :uint\n\n          return this.readBits(clz + 1) - 1;\n        }; // ():int\n\n\n        this.readExpGolomb = function () {\n          var valu = this.readUnsignedExpGolomb(); // :int\n\n          if (0x01 & valu) {\n            // the number is odd if the low order bit is set\n            return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n          }\n\n          return -1 * (valu >>> 1); // divide by two then make it negative\n        }; // Some convenience functions\n        // :Boolean\n\n\n        this.readBoolean = function () {\n          return this.readBits(1) === 1;\n        }; // ():int\n\n\n        this.readUnsignedByte = function () {\n          return this.readBits(8);\n        };\n\n        this.loadWord();\n      };\n\n      var expGolomb = ExpGolomb;\n\n      var _H264Stream, _NalByteStream;\n\n      var PROFILES_WITH_OPTIONAL_SPS_DATA;\n      /**\n       * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n       */\n\n      _NalByteStream = function NalByteStream() {\n        var syncPoint = 0,\n            i,\n            buffer;\n\n        _NalByteStream.prototype.init.call(this);\n        /*\n         * Scans a byte stream and triggers a data event with the NAL units found.\n         * @param {Object} data Event received from H264Stream\n         * @param {Uint8Array} data.data The h264 byte stream to be scanned\n         *\n         * @see H264Stream.push\n         */\n\n\n        this.push = function (data) {\n          var swapBuffer;\n\n          if (!buffer) {\n            buffer = data.data;\n          } else {\n            swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n            swapBuffer.set(buffer);\n            swapBuffer.set(data.data, buffer.byteLength);\n            buffer = swapBuffer;\n          } // Rec. ITU-T H.264, Annex B\n          // scan for NAL unit boundaries\n          // a match looks like this:\n          // 0 0 1 .. NAL .. 0 0 1\n          // ^ sync point        ^ i\n          // or this:\n          // 0 0 1 .. NAL .. 0 0 0\n          // ^ sync point        ^ i\n          // advance the sync point to a NAL start, if necessary\n\n\n          for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n            if (buffer[syncPoint + 2] === 1) {\n              // the sync point is properly aligned\n              i = syncPoint + 5;\n              break;\n            }\n          }\n\n          while (i < buffer.byteLength) {\n            // look at the current byte to determine if we've hit the end of\n            // a NAL unit boundary\n            switch (buffer[i]) {\n              case 0:\n                // skip past non-sync sequences\n                if (buffer[i - 1] !== 0) {\n                  i += 2;\n                  break;\n                } else if (buffer[i - 2] !== 0) {\n                  i++;\n                  break;\n                } // deliver the NAL unit if it isn't empty\n\n\n                if (syncPoint + 3 !== i - 2) {\n                  this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n                } // drop trailing zeroes\n\n\n                do {\n                  i++;\n                } while (buffer[i] !== 1 && i < buffer.length);\n\n                syncPoint = i - 2;\n                i += 3;\n                break;\n\n              case 1:\n                // skip past non-sync sequences\n                if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                  i += 3;\n                  break;\n                } // deliver the NAL unit\n\n\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n                syncPoint = i - 2;\n                i += 3;\n                break;\n\n              default:\n                // the current byte isn't a one or zero, so it cannot be part\n                // of a sync sequence\n                i += 3;\n                break;\n            }\n          } // filter out the NAL units that were delivered\n\n\n          buffer = buffer.subarray(syncPoint);\n          i -= syncPoint;\n          syncPoint = 0;\n        };\n\n        this.flush = function () {\n          // deliver the last buffered NAL unit\n          if (buffer && buffer.byteLength > 3) {\n            this.trigger('data', buffer.subarray(syncPoint + 3));\n          } // reset the stream state\n\n\n          buffer = null;\n          syncPoint = 0;\n          this.trigger('done');\n        };\n      };\n\n      _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n      // see Recommendation ITU-T H.264 (4/2013),\n      // 7.3.2.1.1 Sequence parameter set data syntax\n\n      PROFILES_WITH_OPTIONAL_SPS_DATA = {\n        100: true,\n        110: true,\n        122: true,\n        244: true,\n        44: true,\n        83: true,\n        86: true,\n        118: true,\n        128: true,\n        138: true,\n        139: true,\n        134: true\n      };\n      /**\n       * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n       * events.\n       */\n\n      _H264Stream = function H264Stream() {\n        var nalByteStream = new _NalByteStream(),\n            self,\n            trackId,\n            currentPts,\n            currentDts,\n            discardEmulationPreventionBytes,\n            readSequenceParameterSet,\n            skipScalingList;\n\n        _H264Stream.prototype.init.call(this);\n\n        self = this;\n        /*\n         * Pushes a packet from a stream onto the NalByteStream\n         *\n         * @param {Object} packet - A packet received from a stream\n         * @param {Uint8Array} packet.data - The raw bytes of the packet\n         * @param {Number} packet.dts - Decode timestamp of the packet\n         * @param {Number} packet.pts - Presentation timestamp of the packet\n         * @param {Number} packet.trackId - The id of the h264 track this packet came from\n         * @param {('video'|'audio')} packet.type - The type of packet\n         *\n         */\n\n        this.push = function (packet) {\n          if (packet.type !== 'video') {\n            return;\n          }\n\n          trackId = packet.trackId;\n          currentPts = packet.pts;\n          currentDts = packet.dts;\n          nalByteStream.push(packet);\n        };\n        /*\n         * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n         * for the NALUs to the next stream component.\n         * Also, preprocess caption and sequence parameter NALUs.\n         *\n         * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n         * @see NalByteStream.push\n         */\n\n\n        nalByteStream.on('data', function (data) {\n          var event = {\n            trackId: trackId,\n            pts: currentPts,\n            dts: currentDts,\n            data: data\n          };\n\n          switch (data[0] & 0x1f) {\n            case 0x05:\n              event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n              break;\n\n            case 0x06:\n              event.nalUnitType = 'sei_rbsp';\n              event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n              break;\n\n            case 0x07:\n              event.nalUnitType = 'seq_parameter_set_rbsp';\n              event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n              event.config = readSequenceParameterSet(event.escapedRBSP);\n              break;\n\n            case 0x08:\n              event.nalUnitType = 'pic_parameter_set_rbsp';\n              break;\n\n            case 0x09:\n              event.nalUnitType = 'access_unit_delimiter_rbsp';\n              break;\n\n            default:\n              break;\n          } // This triggers data on the H264Stream\n\n\n          self.trigger('data', event);\n        });\n        nalByteStream.on('done', function () {\n          self.trigger('done');\n        });\n\n        this.flush = function () {\n          nalByteStream.flush();\n        };\n        /**\n         * Advance the ExpGolomb decoder past a scaling list. The scaling\n         * list is optionally transmitted as part of a sequence parameter\n         * set and is not relevant to transmuxing.\n         * @param count {number} the number of entries in this scaling list\n         * @param expGolombDecoder {object} an ExpGolomb pointed to the\n         * start of a scaling list\n         * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n         */\n\n\n        skipScalingList = function skipScalingList(count, expGolombDecoder) {\n          var lastScale = 8,\n              nextScale = 8,\n              j,\n              deltaScale;\n\n          for (j = 0; j < count; j++) {\n            if (nextScale !== 0) {\n              deltaScale = expGolombDecoder.readExpGolomb();\n              nextScale = (lastScale + deltaScale + 256) % 256;\n            }\n\n            lastScale = nextScale === 0 ? lastScale : nextScale;\n          }\n        };\n        /**\n         * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n         * Sequence Payload\"\n         * @param data {Uint8Array} the bytes of a RBSP from a NAL\n         * unit\n         * @return {Uint8Array} the RBSP without any Emulation\n         * Prevention Bytes\n         */\n\n\n        discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n          var length = data.byteLength,\n              emulationPreventionBytesPositions = [],\n              i = 1,\n              newLength,\n              newData; // Find all `Emulation Prevention Bytes`\n\n          while (i < length - 2) {\n            if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n              emulationPreventionBytesPositions.push(i + 2);\n              i += 2;\n            } else {\n              i++;\n            }\n          } // If no Emulation Prevention Bytes were found just return the original\n          // array\n\n\n          if (emulationPreventionBytesPositions.length === 0) {\n            return data;\n          } // Create a new array to hold the NAL unit data\n\n\n          newLength = length - emulationPreventionBytesPositions.length;\n          newData = new Uint8Array(newLength);\n          var sourceIndex = 0;\n\n          for (i = 0; i < newLength; sourceIndex++, i++) {\n            if (sourceIndex === emulationPreventionBytesPositions[0]) {\n              // Skip this byte\n              sourceIndex++; // Remove this position index\n\n              emulationPreventionBytesPositions.shift();\n            }\n\n            newData[i] = data[sourceIndex];\n          }\n\n          return newData;\n        };\n        /**\n         * Read a sequence parameter set and return some interesting video\n         * properties. A sequence parameter set is the H264 metadata that\n         * describes the properties of upcoming video frames.\n         * @param data {Uint8Array} the bytes of a sequence parameter set\n         * @return {object} an object with configuration parsed from the\n         * sequence parameter set, including the dimensions of the\n         * associated video frames.\n         */\n\n\n        readSequenceParameterSet = function readSequenceParameterSet(data) {\n          var frameCropLeftOffset = 0,\n              frameCropRightOffset = 0,\n              frameCropTopOffset = 0,\n              frameCropBottomOffset = 0,\n              sarScale = 1,\n              expGolombDecoder,\n              profileIdc,\n              levelIdc,\n              profileCompatibility,\n              chromaFormatIdc,\n              picOrderCntType,\n              numRefFramesInPicOrderCntCycle,\n              picWidthInMbsMinus1,\n              picHeightInMapUnitsMinus1,\n              frameMbsOnlyFlag,\n              scalingListCount,\n              sarRatio,\n              aspectRatioIdc,\n              i;\n          expGolombDecoder = new expGolomb(data);\n          profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n          profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n          levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n          // some profiles have more optional data we don't need\n\n          if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n            chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n            if (chromaFormatIdc === 3) {\n              expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n            }\n\n            expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n            expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n            expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_matrix_present_flag\n              scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n              for (i = 0; i < scalingListCount; i++) {\n                if (expGolombDecoder.readBoolean()) {\n                  // seq_scaling_list_present_flag[ i ]\n                  if (i < 6) {\n                    skipScalingList(16, expGolombDecoder);\n                  } else {\n                    skipScalingList(64, expGolombDecoder);\n                  }\n                }\n              }\n            }\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n          picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (picOrderCntType === 0) {\n            expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n          } else if (picOrderCntType === 1) {\n            expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n            expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n            expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n            numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n            for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n              expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n            }\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n          expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n          picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n          picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n          frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n          if (frameMbsOnlyFlag === 0) {\n            expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n          }\n\n          expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // frame_cropping_flag\n            frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n            frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n            frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n            frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n          }\n\n          if (expGolombDecoder.readBoolean()) {\n            // vui_parameters_present_flag\n            if (expGolombDecoder.readBoolean()) {\n              // aspect_ratio_info_present_flag\n              aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n              switch (aspectRatioIdc) {\n                case 1:\n                  sarRatio = [1, 1];\n                  break;\n\n                case 2:\n                  sarRatio = [12, 11];\n                  break;\n\n                case 3:\n                  sarRatio = [10, 11];\n                  break;\n\n                case 4:\n                  sarRatio = [16, 11];\n                  break;\n\n                case 5:\n                  sarRatio = [40, 33];\n                  break;\n\n                case 6:\n                  sarRatio = [24, 11];\n                  break;\n\n                case 7:\n                  sarRatio = [20, 11];\n                  break;\n\n                case 8:\n                  sarRatio = [32, 11];\n                  break;\n\n                case 9:\n                  sarRatio = [80, 33];\n                  break;\n\n                case 10:\n                  sarRatio = [18, 11];\n                  break;\n\n                case 11:\n                  sarRatio = [15, 11];\n                  break;\n\n                case 12:\n                  sarRatio = [64, 33];\n                  break;\n\n                case 13:\n                  sarRatio = [160, 99];\n                  break;\n\n                case 14:\n                  sarRatio = [4, 3];\n                  break;\n\n                case 15:\n                  sarRatio = [3, 2];\n                  break;\n\n                case 16:\n                  sarRatio = [2, 1];\n                  break;\n\n                case 255:\n                  {\n                    sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                    break;\n                  }\n              }\n\n              if (sarRatio) {\n                sarScale = sarRatio[0] / sarRatio[1];\n              }\n            }\n          }\n\n          return {\n            profileIdc: profileIdc,\n            levelIdc: levelIdc,\n            profileCompatibility: profileCompatibility,\n            width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n            height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n          };\n        };\n      };\n\n      _H264Stream.prototype = new stream();\n      var h264 = {\n        H264Stream: _H264Stream,\n        NalByteStream: _NalByteStream\n      };\n      /**\n       * mux.js\n       *\n       * Copyright (c) 2016 Brightcove\n       * All rights reserved.\n       *\n       * Utilities to detect basic properties and metadata about Aac data.\n       */\n\n      var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n      var isLikelyAacData = function isLikelyAacData(data) {\n        if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n          return true;\n        }\n\n        return false;\n      };\n\n      var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n        return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n      }; // return a percent-encoded representation of the specified byte range\n      // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n      var percentEncode$1 = function percentEncode(bytes, start, end) {\n        var i,\n            result = '';\n\n        for (i = start; i < end; i++) {\n          result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n        }\n\n        return result;\n      }; // return the string representation of the specified byte range,\n      // interpreted as ISO-8859-1.\n\n\n      var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n        return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n      };\n\n      var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n\n        return returnSize + 10;\n      };\n\n      var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n        return highTwo | middle | lowThree;\n      };\n\n      var parseType$1 = function parseType(header, byteIndex) {\n        if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n          return 'timed-metadata';\n        } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n          return 'audio';\n        }\n\n        return null;\n      };\n\n      var parseSampleRate = function parseSampleRate(packet) {\n        var i = 0;\n\n        while (i + 5 < packet.length) {\n          if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n        }\n\n        return null;\n      };\n\n      var parseAacTimestamp = function parseAacTimestamp(packet) {\n        var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n        frameStart = 10;\n\n        if (packet[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            return null;\n          }\n\n          frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n          if (frameHeader === 'PRIV') {\n            frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n            for (var i = 0; i < frame.byteLength; i++) {\n              if (frame[i] === 0) {\n                var owner = parseIso88591$1(frame, 0, i);\n\n                if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                  var d = frame.subarray(i + 1);\n                  var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                  size *= 4;\n                  size += d[7] & 0x03;\n                  return size;\n                }\n\n                break;\n              }\n            }\n          }\n\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < packet.byteLength);\n\n        return null;\n      };\n\n      var utils = {\n        isLikelyAacData: isLikelyAacData,\n        parseId3TagSize: parseId3TagSize,\n        parseAdtsSize: parseAdtsSize,\n        parseType: parseType$1,\n        parseSampleRate: parseSampleRate,\n        parseAacTimestamp: parseAacTimestamp\n      }; // Constants\n\n      var _AacStream;\n      /**\n       * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n       */\n\n\n      _AacStream = function AacStream() {\n        var everything = new Uint8Array(),\n            timeStamp = 0;\n\n        _AacStream.prototype.init.call(this);\n\n        this.setTimestamp = function (timestamp) {\n          timeStamp = timestamp;\n        };\n\n        this.push = function (bytes) {\n          var frameSize = 0,\n              byteIndex = 0,\n              bytesLeft,\n              chunk,\n              packet,\n              tempLength; // If there are bytes remaining from the last segment, prepend them to the\n          // bytes that were pushed in\n\n          if (everything.length) {\n            tempLength = everything.length;\n            everything = new Uint8Array(bytes.byteLength + tempLength);\n            everything.set(everything.subarray(0, tempLength));\n            everything.set(bytes, tempLength);\n          } else {\n            everything = bytes;\n          }\n\n          while (everything.length - byteIndex >= 3) {\n            if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n              // Exit early because we don't have enough to parse\n              // the ID3 tag header\n              if (everything.length - byteIndex < 10) {\n                break;\n              } // check framesize\n\n\n              frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n              // to emit a full packet\n              // Add to byteIndex to support multiple ID3 tags in sequence\n\n              if (byteIndex + frameSize > everything.length) {\n                break;\n              }\n\n              chunk = {\n                type: 'timed-metadata',\n                data: everything.subarray(byteIndex, byteIndex + frameSize)\n              };\n              this.trigger('data', chunk);\n              byteIndex += frameSize;\n              continue;\n            } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n              // Exit early because we don't have enough to parse\n              // the ADTS frame header\n              if (everything.length - byteIndex < 7) {\n                break;\n              }\n\n              frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n              // to emit a full packet\n\n              if (byteIndex + frameSize > everything.length) {\n                break;\n              }\n\n              packet = {\n                type: 'audio',\n                data: everything.subarray(byteIndex, byteIndex + frameSize),\n                pts: timeStamp,\n                dts: timeStamp\n              };\n              this.trigger('data', packet);\n              byteIndex += frameSize;\n              continue;\n            }\n\n            byteIndex++;\n          }\n\n          bytesLeft = everything.length - byteIndex;\n\n          if (bytesLeft > 0) {\n            everything = everything.subarray(byteIndex);\n          } else {\n            everything = new Uint8Array();\n          }\n        };\n      };\n\n      _AacStream.prototype = new stream();\n      var aac = _AacStream;\n      var H264Stream = h264.H264Stream;\n      var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n      var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n      var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n      var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n      /**\n       * Compare two arrays (even typed) for same-ness\n       */\n\n\n      var arrayEquals = function arrayEquals(a, b) {\n        var i;\n\n        if (a.length !== b.length) {\n          return false;\n        } // compare the value of each element in the array\n\n\n        for (i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n\n      var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n        var ptsOffsetFromDts = startPts - startDts,\n            decodeDuration = endDts - startDts,\n            presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n        // however, the player time values will reflect a start from the baseMediaDecodeTime.\n        // In order to provide relevant values for the player times, base timing info on the\n        // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n        return {\n          start: {\n            dts: baseMediaDecodeTime,\n            pts: baseMediaDecodeTime + ptsOffsetFromDts\n          },\n          end: {\n            dts: baseMediaDecodeTime + decodeDuration,\n            pts: baseMediaDecodeTime + presentationDuration\n          },\n          prependedContentDuration: prependedContentDuration,\n          baseMediaDecodeTime: baseMediaDecodeTime\n        };\n      };\n      /**\n       * Constructs a single-track, ISO BMFF media segment from AAC data\n       * events. The output of this stream can be fed to a SourceBuffer\n       * configured with a suitable initialization segment.\n       * @param track {object} track metadata configuration\n       * @param options {object} transmuxer options object\n       * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n       *        in the source; false to adjust the first segment to start at 0.\n       */\n\n\n      _AudioSegmentStream = function AudioSegmentStream(track, options) {\n        var adtsFrames = [],\n            sequenceNumber = 0,\n            earliestAllowedDts = 0,\n            audioAppendStartTs = 0,\n            videoBaseMediaDecodeTime = Infinity;\n        options = options || {};\n\n        _AudioSegmentStream.prototype.init.call(this);\n\n        this.push = function (data) {\n          trackDecodeInfo.collectDtsInfo(track, data);\n\n          if (track) {\n            AUDIO_PROPERTIES.forEach(function (prop) {\n              track[prop] = data[prop];\n            });\n          } // buffer audio data until end() is called\n\n\n          adtsFrames.push(data);\n        };\n\n        this.setEarliestDts = function (earliestDts) {\n          earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n        };\n\n        this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n          videoBaseMediaDecodeTime = baseMediaDecodeTime;\n        };\n\n        this.setAudioAppendStart = function (timestamp) {\n          audioAppendStartTs = timestamp;\n        };\n\n        this.flush = function () {\n          var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n          if (adtsFrames.length === 0) {\n            this.trigger('done', 'AudioSegmentStream');\n            return;\n          }\n\n          frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n          track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n          audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n          // samples (that is, adts frames) in the audio data\n\n          track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n          mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n          adtsFrames = [];\n          moof = mp4Generator.moof(sequenceNumber, [track]);\n          boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n          sequenceNumber++;\n          boxes.set(moof);\n          boxes.set(mdat, moof.byteLength);\n          trackDecodeInfo.clearDtsInfo(track);\n          this.trigger('data', {\n            track: track,\n            boxes: boxes\n          });\n          this.trigger('done', 'AudioSegmentStream');\n        };\n      };\n\n      _AudioSegmentStream.prototype = new stream();\n      /**\n       * Constructs a single-track, ISO BMFF media segment from H264 data\n       * events. The output of this stream can be fed to a SourceBuffer\n       * configured with a suitable initialization segment.\n       * @param track {object} track metadata configuration\n       * @param options {object} transmuxer options object\n       * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n       *        gopsToAlignWith list when attempting to align gop pts\n       * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n       *        in the source; false to adjust the first segment to start at 0.\n       */\n\n      _VideoSegmentStream = function VideoSegmentStream(track, options) {\n        var sequenceNumber = 0,\n            nalUnits = [],\n            gopsToAlignWith = [],\n            config,\n            pps;\n        options = options || {};\n\n        _VideoSegmentStream.prototype.init.call(this);\n\n        delete track.minPTS;\n        this.gopCache_ = [];\n        /**\n          * Constructs a ISO BMFF segment given H264 nalUnits\n          * @param {Object} nalUnit A data event representing a nalUnit\n          * @param {String} nalUnit.nalUnitType\n          * @param {Object} nalUnit.config Properties for a mp4 track\n          * @param {Uint8Array} nalUnit.data The nalUnit bytes\n          * @see lib/codecs/h264.js\n         **/\n\n        this.push = function (nalUnit) {\n          trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n          if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n            config = nalUnit.config;\n            track.sps = [nalUnit.data];\n            VIDEO_PROPERTIES.forEach(function (prop) {\n              track[prop] = config[prop];\n            }, this);\n          }\n\n          if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n            pps = nalUnit.data;\n            track.pps = [nalUnit.data];\n          } // buffer video until flush() is called\n\n\n          nalUnits.push(nalUnit);\n        };\n        /**\n          * Pass constructed ISO BMFF track and boxes on to the\n          * next stream in the pipeline\n         **/\n\n\n        this.flush = function () {\n          var frames,\n              gopForFusion,\n              gops,\n              moof,\n              mdat,\n              boxes,\n              prependedContentDuration = 0,\n              firstGop,\n              lastGop; // Throw away nalUnits at the start of the byte stream until\n          // we find the first AUD\n\n          while (nalUnits.length) {\n            if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n              break;\n            }\n\n            nalUnits.shift();\n          } // Return early if no video data has been observed\n\n\n          if (nalUnits.length === 0) {\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Organize the raw nal-units into arrays that represent\n          // higher-level constructs such as frames and gops\n          // (group-of-pictures)\n\n\n          frames = frameUtils.groupNalsIntoFrames(nalUnits);\n          gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n          // a problem since MSE (on Chrome) requires a leading keyframe.\n          //\n          // We have two approaches to repairing this situation:\n          // 1) GOP-FUSION:\n          //    This is where we keep track of the GOPS (group-of-pictures)\n          //    from previous fragments and attempt to find one that we can\n          //    prepend to the current fragment in order to create a valid\n          //    fragment.\n          // 2) KEYFRAME-PULLING:\n          //    Here we search for the first keyframe in the fragment and\n          //    throw away all the frames between the start of the fragment\n          //    and that keyframe. We then extend the duration and pull the\n          //    PTS of the keyframe forward so that it covers the time range\n          //    of the frames that were disposed of.\n          //\n          // #1 is far prefereable over #2 which can cause \"stuttering\" but\n          // requires more things to be just right.\n\n          if (!gops[0][0].keyFrame) {\n            // Search for a gop for fusion from our gopCache\n            gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n            if (gopForFusion) {\n              // in order to provide more accurate timing information about the segment, save\n              // the number of seconds prepended to the original segment due to GOP fusion\n              prependedContentDuration = gopForFusion.duration;\n              gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n              // new gop at the beginning\n\n              gops.byteLength += gopForFusion.byteLength;\n              gops.nalCount += gopForFusion.nalCount;\n              gops.pts = gopForFusion.pts;\n              gops.dts = gopForFusion.dts;\n              gops.duration += gopForFusion.duration;\n            } else {\n              // If we didn't find a candidate gop fall back to keyframe-pulling\n              gops = frameUtils.extendFirstKeyFrame(gops);\n            }\n          } // Trim gops to align with gopsToAlignWith\n\n\n          if (gopsToAlignWith.length) {\n            var alignedGops;\n\n            if (options.alignGopsAtEnd) {\n              alignedGops = this.alignGopsAtEnd_(gops);\n            } else {\n              alignedGops = this.alignGopsAtStart_(gops);\n            }\n\n            if (!alignedGops) {\n              // save all the nals in the last GOP into the gop cache\n              this.gopCache_.unshift({\n                gop: gops.pop(),\n                pps: track.pps,\n                sps: track.sps\n              }); // Keep a maximum of 6 GOPs in the cache\n\n              this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n              nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n              this.resetStream_();\n              this.trigger('done', 'VideoSegmentStream');\n              return;\n            } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n            // when recalculated before sending off to CoalesceStream\n\n\n            trackDecodeInfo.clearDtsInfo(track);\n            gops = alignedGops;\n          }\n\n          trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n          // samples (that is, frames) in the video data\n\n          track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n          mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n          track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n          this.trigger('processedGopsInfo', gops.map(function (gop) {\n            return {\n              pts: gop.pts,\n              dts: gop.dts,\n              byteLength: gop.byteLength\n            };\n          }));\n          firstGop = gops[0];\n          lastGop = gops[gops.length - 1];\n          this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = [];\n          this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n          this.trigger('timelineStartInfo', track.timelineStartInfo);\n          moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n          // throwing away hundreds of media segment fragments\n\n          boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n          sequenceNumber++;\n          boxes.set(moof);\n          boxes.set(mdat, moof.byteLength);\n          this.trigger('data', {\n            track: track,\n            boxes: boxes\n          });\n          this.resetStream_(); // Continue with the flush process now\n\n          this.trigger('done', 'VideoSegmentStream');\n        };\n\n        this.resetStream_ = function () {\n          trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n          // for instance, when we are rendition switching\n\n          config = undefined;\n          pps = undefined;\n        }; // Search for a candidate Gop for gop-fusion from the gop cache and\n        // return it or return null if no good candidate was found\n\n\n        this.getGopForFusion_ = function (nalUnit) {\n          var halfSecond = 45000,\n              // Half-a-second in a 90khz clock\n          allowableOverlap = 10000,\n              // About 3 frames @ 30fps\n          nearestDistance = Infinity,\n              dtsDistance,\n              nearestGopObj,\n              currentGop,\n              currentGopObj,\n              i; // Search for the GOP nearest to the beginning of this nal unit\n\n          for (i = 0; i < this.gopCache_.length; i++) {\n            currentGopObj = this.gopCache_[i];\n            currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n            if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n              continue;\n            } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n            if (currentGop.dts < track.timelineStartInfo.dts) {\n              continue;\n            } // The distance between the end of the gop and the start of the nalUnit\n\n\n            dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n            // a half-second of the nal unit\n\n            if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n              // Always use the closest GOP we found if there is more than\n              // one candidate\n              if (!nearestGopObj || nearestDistance > dtsDistance) {\n                nearestGopObj = currentGopObj;\n                nearestDistance = dtsDistance;\n              }\n            }\n          }\n\n          if (nearestGopObj) {\n            return nearestGopObj.gop;\n          }\n\n          return null;\n        }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n        // of gopsToAlignWith starting from the START of the list\n\n\n        this.alignGopsAtStart_ = function (gops) {\n          var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n          byteLength = gops.byteLength;\n          nalCount = gops.nalCount;\n          duration = gops.duration;\n          alignIndex = gopIndex = 0;\n\n          while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n            align = gopsToAlignWith[alignIndex];\n            gop = gops[gopIndex];\n\n            if (align.pts === gop.pts) {\n              break;\n            }\n\n            if (gop.pts > align.pts) {\n              // this current gop starts after the current gop we want to align on, so increment\n              // align index\n              alignIndex++;\n              continue;\n            } // current gop starts before the current gop we want to align on. so increment gop\n            // index\n\n\n            gopIndex++;\n            byteLength -= gop.byteLength;\n            nalCount -= gop.nalCount;\n            duration -= gop.duration;\n          }\n\n          if (gopIndex === 0) {\n            // no gops to trim\n            return gops;\n          }\n\n          if (gopIndex === gops.length) {\n            // all gops trimmed, skip appending all gops\n            return null;\n          }\n\n          alignedGops = gops.slice(gopIndex);\n          alignedGops.byteLength = byteLength;\n          alignedGops.duration = duration;\n          alignedGops.nalCount = nalCount;\n          alignedGops.pts = alignedGops[0].pts;\n          alignedGops.dts = alignedGops[0].dts;\n          return alignedGops;\n        }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n        // of gopsToAlignWith starting from the END of the list\n\n\n        this.alignGopsAtEnd_ = function (gops) {\n          var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n          alignIndex = gopsToAlignWith.length - 1;\n          gopIndex = gops.length - 1;\n          alignEndIndex = null;\n          matchFound = false;\n\n          while (alignIndex >= 0 && gopIndex >= 0) {\n            align = gopsToAlignWith[alignIndex];\n            gop = gops[gopIndex];\n\n            if (align.pts === gop.pts) {\n              matchFound = true;\n              break;\n            }\n\n            if (align.pts > gop.pts) {\n              alignIndex--;\n              continue;\n            }\n\n            if (alignIndex === gopsToAlignWith.length - 1) {\n              // gop.pts is greater than the last alignment candidate. If no match is found\n              // by the end of this loop, we still want to append gops that come after this\n              // point\n              alignEndIndex = gopIndex;\n            }\n\n            gopIndex--;\n          }\n\n          if (!matchFound && alignEndIndex === null) {\n            return null;\n          }\n\n          var trimIndex;\n\n          if (matchFound) {\n            trimIndex = gopIndex;\n          } else {\n            trimIndex = alignEndIndex;\n          }\n\n          if (trimIndex === 0) {\n            return gops;\n          }\n\n          var alignedGops = gops.slice(trimIndex);\n          var metadata = alignedGops.reduce(function (total, gop) {\n            total.byteLength += gop.byteLength;\n            total.duration += gop.duration;\n            total.nalCount += gop.nalCount;\n            return total;\n          }, {\n            byteLength: 0,\n            duration: 0,\n            nalCount: 0\n          });\n          alignedGops.byteLength = metadata.byteLength;\n          alignedGops.duration = metadata.duration;\n          alignedGops.nalCount = metadata.nalCount;\n          alignedGops.pts = alignedGops[0].pts;\n          alignedGops.dts = alignedGops[0].dts;\n          return alignedGops;\n        };\n\n        this.alignGopsWith = function (newGopsToAlignWith) {\n          gopsToAlignWith = newGopsToAlignWith;\n        };\n      };\n\n      _VideoSegmentStream.prototype = new stream();\n      /**\n       * A Stream that can combine multiple streams (ie. audio & video)\n       * into a single output segment for MSE. Also supports audio-only\n       * and video-only streams.\n       * @param options {object} transmuxer options object\n       * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n       *        in the source; false to adjust the first segment to start at media timeline start.\n       */\n\n      _CoalesceStream = function CoalesceStream(options, metadataStream) {\n        // Number of Tracks per output segment\n        // If greater than 1, we combine multiple\n        // tracks into a single segment\n        this.numberOfTracks = 0;\n        this.metadataStream = metadataStream;\n        options = options || {};\n\n        if (typeof options.remux !== 'undefined') {\n          this.remuxTracks = !!options.remux;\n        } else {\n          this.remuxTracks = true;\n        }\n\n        if (typeof options.keepOriginalTimestamps === 'boolean') {\n          this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n        }\n\n        this.pendingTracks = [];\n        this.videoTrack = null;\n        this.pendingBoxes = [];\n        this.pendingCaptions = [];\n        this.pendingMetadata = [];\n        this.pendingBytes = 0;\n        this.emittedTracks = 0;\n\n        _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n        this.push = function (output) {\n          // buffer incoming captions until the associated video segment\n          // finishes\n          if (output.text) {\n            return this.pendingCaptions.push(output);\n          } // buffer incoming id3 tags until the final flush\n\n\n          if (output.frames) {\n            return this.pendingMetadata.push(output);\n          } // Add this track to the list of pending tracks and store\n          // important information required for the construction of\n          // the final segment\n\n\n          this.pendingTracks.push(output.track);\n          this.pendingBoxes.push(output.boxes);\n          this.pendingBytes += output.boxes.byteLength;\n\n          if (output.track.type === 'video') {\n            this.videoTrack = output.track;\n          }\n\n          if (output.track.type === 'audio') {\n            this.audioTrack = output.track;\n          }\n        };\n      };\n\n      _CoalesceStream.prototype = new stream();\n\n      _CoalesceStream.prototype.flush = function (flushSource) {\n        var offset = 0,\n            event = {\n          captions: [],\n          captionStreams: {},\n          metadata: [],\n          info: {}\n        },\n            caption,\n            id3,\n            initSegment,\n            timelineStartPts = 0,\n            i;\n\n        if (this.pendingTracks.length < this.numberOfTracks) {\n          if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n            // Return because we haven't received a flush from a data-generating\n            // portion of the segment (meaning that we have only recieved meta-data\n            // or captions.)\n            return;\n          } else if (this.remuxTracks) {\n            // Return until we have enough tracks from the pipeline to remux (if we\n            // are remuxing audio and video into a single MP4)\n            return;\n          } else if (this.pendingTracks.length === 0) {\n            // In the case where we receive a flush without any data having been\n            // received we consider it an emitted track for the purposes of coalescing\n            // `done` events.\n            // We do this for the case where there is an audio and video track in the\n            // segment but no audio data. (seen in several playlists with alternate\n            // audio tracks and no audio present in the main TS segments.)\n            this.emittedTracks++;\n\n            if (this.emittedTracks >= this.numberOfTracks) {\n              this.trigger('done');\n              this.emittedTracks = 0;\n            }\n\n            return;\n          }\n        }\n\n        if (this.videoTrack) {\n          timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            event.info[prop] = this.videoTrack[prop];\n          }, this);\n        } else if (this.audioTrack) {\n          timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            event.info[prop] = this.audioTrack[prop];\n          }, this);\n        }\n\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = caption.startPts;\n\n          if (!this.keepOriginalTimestamps) {\n            caption.startTime -= timelineStartPts;\n          }\n\n          caption.startTime /= 90e3;\n          caption.endTime = caption.endPts;\n\n          if (!this.keepOriginalTimestamps) {\n            caption.endTime -= timelineStartPts;\n          }\n\n          caption.endTime /= 90e3;\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = id3.pts;\n\n          if (!this.keepOriginalTimestamps) {\n            id3.cueTime -= timelineStartPts;\n          }\n\n          id3.cueTime /= 90e3;\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n\n        this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n      };\n      /**\n       * A Stream that expects MP2T binary data as input and produces\n       * corresponding media segments, suitable for use with Media Source\n       * Extension (MSE) implementations that support the ISO BMFF byte\n       * stream format, like Chrome.\n       */\n\n\n      _Transmuxer = function Transmuxer(options) {\n        var self = this,\n            hasFlushed = true,\n            videoTrack,\n            audioTrack;\n\n        _Transmuxer.prototype.init.call(this);\n\n        options = options || {};\n        this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n        this.transmuxPipeline_ = {};\n\n        this.setupAacPipeline = function () {\n          var pipeline = {};\n          this.transmuxPipeline_ = pipeline;\n          pipeline.type = 'aac';\n          pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n          pipeline.aacStream = new aac();\n          pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n          pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n          pipeline.adtsStream = new adts();\n          pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n          pipeline.headOfPipeline = pipeline.aacStream;\n          pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n          pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n          pipeline.metadataStream.on('timestamp', function (frame) {\n            pipeline.aacStream.setTimestamp(frame.timeStamp);\n          });\n          pipeline.aacStream.on('data', function (data) {\n            if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n              audioTrack = audioTrack || {\n                timelineStartInfo: {\n                  baseMediaDecodeTime: self.baseMediaDecodeTime\n                },\n                codec: 'adts',\n                type: 'audio'\n              }; // hook up the audio segment stream to the first track with aac data\n\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }); // Re-emit any data coming from the coalesce stream to the outside world\n\n          pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n          pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        };\n\n        this.setupTsPipeline = function () {\n          var pipeline = {};\n          this.transmuxPipeline_ = pipeline;\n          pipeline.type = 'ts';\n          pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n          pipeline.packetStream = new m2ts_1.TransportPacketStream();\n          pipeline.parseStream = new m2ts_1.TransportParseStream();\n          pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n          pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n          pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n          pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n          pipeline.adtsStream = new adts();\n          pipeline.h264Stream = new H264Stream();\n          pipeline.captionStream = new m2ts_1.CaptionStream();\n          pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n          pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n          pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n          // demux the streams\n\n          pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n          pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n          pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n          pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n          pipeline.elementaryStream.on('data', function (data) {\n            var i;\n\n            if (data.type === 'metadata') {\n              i = data.tracks.length; // scan the tracks listed in the metadata\n\n              while (i--) {\n                if (!videoTrack && data.tracks[i].type === 'video') {\n                  videoTrack = data.tracks[i];\n                  videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n                } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                  audioTrack = data.tracks[i];\n                  audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n                }\n              } // hook up the video segment stream to the first track with h264 data\n\n\n              if (videoTrack && !pipeline.videoSegmentStream) {\n                pipeline.coalesceStream.numberOfTracks++;\n                pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n                pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                  // When video emits timelineStartInfo data after a flush, we forward that\n                  // info to the AudioSegmentStream, if it exists, because video timeline\n                  // data takes precedence.\n                  if (audioTrack) {\n                    audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                    // very earliest DTS we have seen in video because Chrome will\n                    // interpret any video track with a baseMediaDecodeTime that is\n                    // non-zero as a gap.\n\n                    pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                  }\n                });\n                pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n                pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n                pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                  if (audioTrack) {\n                    pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                  }\n                }); // Set up the final part of the video pipeline\n\n                pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n              }\n\n              if (audioTrack && !pipeline.audioSegmentStream) {\n                // hook up the audio segment stream to the first track with aac data\n                pipeline.coalesceStream.numberOfTracks++;\n                pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n                pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n              }\n            }\n          }); // Re-emit any data coming from the coalesce stream to the outside world\n\n          pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n          pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        }; // hook up the segment streams once track metadata is delivered\n\n\n        this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n          var pipeline = this.transmuxPipeline_;\n\n          if (!options.keepOriginalTimestamps) {\n            this.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (audioTrack) {\n            audioTrack.timelineStartInfo.dts = undefined;\n            audioTrack.timelineStartInfo.pts = undefined;\n            trackDecodeInfo.clearDtsInfo(audioTrack);\n\n            if (!options.keepOriginalTimestamps) {\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n            }\n\n            if (pipeline.audioTimestampRolloverStream) {\n              pipeline.audioTimestampRolloverStream.discontinuity();\n            }\n          }\n\n          if (videoTrack) {\n            if (pipeline.videoSegmentStream) {\n              pipeline.videoSegmentStream.gopCache_ = [];\n              pipeline.videoTimestampRolloverStream.discontinuity();\n            }\n\n            videoTrack.timelineStartInfo.dts = undefined;\n            videoTrack.timelineStartInfo.pts = undefined;\n            trackDecodeInfo.clearDtsInfo(videoTrack);\n            pipeline.captionStream.reset();\n\n            if (!options.keepOriginalTimestamps) {\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n            }\n          }\n\n          if (pipeline.timedMetadataTimestampRolloverStream) {\n            pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n          }\n        };\n\n        this.setAudioAppendStart = function (timestamp) {\n          if (audioTrack) {\n            this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n          }\n        };\n\n        this.alignGopsWith = function (gopsToAlignWith) {\n          if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n            this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n          }\n        }; // feed incoming data to the front of the parsing pipeline\n\n\n        this.push = function (data) {\n          if (hasFlushed) {\n            var isAac = isLikelyAacData$1(data);\n\n            if (isAac && this.transmuxPipeline_.type !== 'aac') {\n              this.setupAacPipeline();\n            } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n              this.setupTsPipeline();\n            }\n\n            hasFlushed = false;\n          }\n\n          this.transmuxPipeline_.headOfPipeline.push(data);\n        }; // flush any buffered data\n\n\n        this.flush = function () {\n          hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n          this.transmuxPipeline_.headOfPipeline.flush();\n        }; // Caption data has to be reset when seeking outside buffered range\n\n\n        this.resetCaptions = function () {\n          if (this.transmuxPipeline_.captionStream) {\n            this.transmuxPipeline_.captionStream.reset();\n          }\n        };\n      };\n\n      _Transmuxer.prototype = new stream();\n      var transmuxer = {\n        Transmuxer: _Transmuxer,\n        VideoSegmentStream: _VideoSegmentStream,\n        AudioSegmentStream: _AudioSegmentStream,\n        AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n        VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n        // exported for testing\n        generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n      };\n\n      var inspectMp4,\n          _textifyMp,\n          parseType$2 = probe$$1.parseType,\n          parseMp4Date = function parseMp4Date(seconds) {\n        return new Date(seconds * 1000 - 2082844800000);\n      },\n          parseSampleFlags = function parseSampleFlags(flags) {\n        return {\n          isLeading: (flags[0] & 0x0c) >>> 2,\n          dependsOn: flags[0] & 0x03,\n          isDependedOn: (flags[1] & 0xc0) >>> 6,\n          hasRedundancy: (flags[1] & 0x30) >>> 4,\n          paddingValue: (flags[1] & 0x0e) >>> 1,\n          isNonSyncSample: flags[1] & 0x01,\n          degradationPriority: flags[2] << 8 | flags[3]\n        };\n      },\n          nalParse = function nalParse(avcStream) {\n        var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n            result = [],\n            i,\n            length;\n\n        for (i = 0; i + 4 < avcStream.length; i += length) {\n          length = avcView.getUint32(i);\n          i += 4; // bail if this doesn't appear to be an H264 stream\n\n          if (length <= 0) {\n            result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n            continue;\n          }\n\n          switch (avcStream[i] & 0x1F) {\n            case 0x01:\n              result.push('slice_layer_without_partitioning_rbsp');\n              break;\n\n            case 0x05:\n              result.push('slice_layer_without_partitioning_rbsp_idr');\n              break;\n\n            case 0x06:\n              result.push('sei_rbsp');\n              break;\n\n            case 0x07:\n              result.push('seq_parameter_set_rbsp');\n              break;\n\n            case 0x08:\n              result.push('pic_parameter_set_rbsp');\n              break;\n\n            case 0x09:\n              result.push('access_unit_delimiter_rbsp');\n              break;\n\n            default:\n              result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n              break;\n          }\n        }\n\n        return result;\n      },\n          // registry of handlers for individual mp4 box types\n      parse$$1 = {\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        avc1: function avc1(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n          return {\n            dataReferenceIndex: view.getUint16(6),\n            width: view.getUint16(24),\n            height: view.getUint16(26),\n            horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n            vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n            frameCount: view.getUint16(40),\n            depth: view.getUint16(74),\n            config: inspectMp4(data.subarray(78, data.byteLength))\n          };\n        },\n        avcC: function avcC(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            configurationVersion: data[0],\n            avcProfileIndication: data[1],\n            profileCompatibility: data[2],\n            avcLevelIndication: data[3],\n            lengthSizeMinusOne: data[4] & 0x03,\n            sps: [],\n            pps: []\n          },\n              numOfSequenceParameterSets = data[5] & 0x1f,\n              numOfPictureParameterSets,\n              nalSize,\n              offset,\n              i; // iterate past any SPSs\n\n          offset = 6;\n\n          for (i = 0; i < numOfSequenceParameterSets; i++) {\n            nalSize = view.getUint16(offset);\n            offset += 2;\n            result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n            offset += nalSize;\n          } // iterate past any PPSs\n\n\n          numOfPictureParameterSets = data[offset];\n          offset++;\n\n          for (i = 0; i < numOfPictureParameterSets; i++) {\n            nalSize = view.getUint16(offset);\n            offset += 2;\n            result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n            offset += nalSize;\n          }\n\n          return result;\n        },\n        btrt: function btrt(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n          return {\n            bufferSizeDB: view.getUint32(0),\n            maxBitrate: view.getUint32(4),\n            avgBitrate: view.getUint32(8)\n          };\n        },\n        esds: function esds(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            esId: data[6] << 8 | data[7],\n            streamPriority: data[8] & 0x1f,\n            decoderConfig: {\n              objectProfileIndication: data[11],\n              streamType: data[12] >>> 2 & 0x3f,\n              bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n              maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n              avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n              decoderConfigDescriptor: {\n                tag: data[24],\n                length: data[25],\n                audioObjectType: data[26] >>> 3 & 0x1f,\n                samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n                channelConfiguration: data[27] >>> 3 & 0x0f\n              }\n            }\n          };\n        },\n        ftyp: function ftyp(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            majorBrand: parseType$2(data.subarray(0, 4)),\n            minorVersion: view.getUint32(4),\n            compatibleBrands: []\n          },\n              i = 8;\n\n          while (i < data.byteLength) {\n            result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n            i += 4;\n          }\n\n          return result;\n        },\n        dinf: function dinf(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        dref: function dref(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            dataReferences: inspectMp4(data.subarray(8))\n          };\n        },\n        hdlr: function hdlr(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            handlerType: parseType$2(data.subarray(8, 12)),\n            name: ''\n          },\n              i = 8; // parse out the name field\n\n          for (i = 24; i < data.byteLength; i++) {\n            if (data[i] === 0x00) {\n              // the name field is null-terminated\n              i++;\n              break;\n            }\n\n            result.name += String.fromCharCode(data[i]);\n          } // decode UTF-8 to javascript's internal representation\n          // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n          result.name = decodeURIComponent(escape(result.name));\n          return result;\n        },\n        mdat: function mdat(data) {\n          return {\n            byteLength: data.byteLength,\n            nals: nalParse(data)\n          };\n        },\n        mdhd: function mdhd(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              i = 4,\n              language,\n              result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            language: ''\n          };\n\n          if (result.version === 1) {\n            i += 4;\n            result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 8;\n            result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 4;\n            result.timescale = view.getUint32(i);\n            i += 8;\n            result.duration = view.getUint32(i); // truncating top 4 bytes\n          } else {\n            result.creationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.modificationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.timescale = view.getUint32(i);\n            i += 4;\n            result.duration = view.getUint32(i);\n          }\n\n          i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n          // each field is the packed difference between its ASCII value and 0x60\n\n          language = view.getUint16(i);\n          result.language += String.fromCharCode((language >> 10) + 0x60);\n          result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n          result.language += String.fromCharCode((language & 0x1f) + 0x60);\n          return result;\n        },\n        mdia: function mdia(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        mfhd: function mfhd(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n          };\n        },\n        minf: function minf(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        // codingname, not a first-class box type. stsd entries share the\n        // same format as real boxes so the parsing infrastructure can be\n        // shared\n        mp4a: function mp4a(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            // 6 bytes reserved\n            dataReferenceIndex: view.getUint16(6),\n            // 4 + 4 bytes reserved\n            channelcount: view.getUint16(16),\n            samplesize: view.getUint16(18),\n            // 2 bytes pre_defined\n            // 2 bytes reserved\n            samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n          }; // if there are more bytes to process, assume this is an ISO/IEC\n          // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n          if (data.byteLength > 28) {\n            result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n          }\n\n          return result;\n        },\n        moof: function moof(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        moov: function moov(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        mvex: function mvex(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        mvhd: function mvhd(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              i = 4,\n              result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n\n          if (result.version === 1) {\n            i += 4;\n            result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 8;\n            result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 4;\n            result.timescale = view.getUint32(i);\n            i += 8;\n            result.duration = view.getUint32(i); // truncating top 4 bytes\n          } else {\n            result.creationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.modificationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.timescale = view.getUint32(i);\n            i += 4;\n            result.duration = view.getUint32(i);\n          }\n\n          i += 4; // convert fixed-point, base 16 back to a number\n\n          result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n          i += 4;\n          result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n          i += 2;\n          i += 2;\n          i += 2 * 4;\n          result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n          i += 9 * 4;\n          i += 6 * 4;\n          result.nextTrackId = view.getUint32(i);\n          return result;\n        },\n        pdin: function pdin(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n          return {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            rate: view.getUint32(4),\n            initialDelay: view.getUint32(8)\n          };\n        },\n        sdtp: function sdtp(data) {\n          var result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            samples: []\n          },\n              i;\n\n          for (i = 4; i < data.byteLength; i++) {\n            result.samples.push({\n              dependsOn: (data[i] & 0x30) >> 4,\n              isDependedOn: (data[i] & 0x0c) >> 2,\n              hasRedundancy: data[i] & 0x03\n            });\n          }\n\n          return result;\n        },\n        sidx: function sidx(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n              referenceCount = view.getUint16(22),\n              i;\n\n          for (i = 24; referenceCount; i += 12, referenceCount--) {\n            result.references.push({\n              referenceType: (data[i] & 0x80) >>> 7,\n              referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n              subsegmentDuration: view.getUint32(i + 4),\n              startsWithSap: !!(data[i + 8] & 0x80),\n              sapType: (data[i + 8] & 0x70) >>> 4,\n              sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n            });\n          }\n\n          return result;\n        },\n        smhd: function smhd(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            balance: data[4] + data[5] / 256\n          };\n        },\n        stbl: function stbl(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        stco: function stco(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            chunkOffsets: []\n          },\n              entryCount = view.getUint32(4),\n              i;\n\n          for (i = 8; entryCount; i += 4, entryCount--) {\n            result.chunkOffsets.push(view.getUint32(i));\n          }\n\n          return result;\n        },\n        stsc: function stsc(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              entryCount = view.getUint32(4),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleToChunks: []\n          },\n              i;\n\n          for (i = 8; entryCount; i += 12, entryCount--) {\n            result.sampleToChunks.push({\n              firstChunk: view.getUint32(i),\n              samplesPerChunk: view.getUint32(i + 4),\n              sampleDescriptionIndex: view.getUint32(i + 8)\n            });\n          }\n\n          return result;\n        },\n        stsd: function stsd(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleDescriptions: inspectMp4(data.subarray(8))\n          };\n        },\n        stsz: function stsz(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleSize: view.getUint32(4),\n            entries: []\n          },\n              i;\n\n          for (i = 12; i < data.byteLength; i += 4) {\n            result.entries.push(view.getUint32(i));\n          }\n\n          return result;\n        },\n        stts: function stts(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            timeToSamples: []\n          },\n              entryCount = view.getUint32(4),\n              i;\n\n          for (i = 8; entryCount; i += 8, entryCount--) {\n            result.timeToSamples.push({\n              sampleCount: view.getUint32(i),\n              sampleDelta: view.getUint32(i + 4)\n            });\n          }\n\n          return result;\n        },\n        styp: function styp(data) {\n          return parse$$1.ftyp(data);\n        },\n        tfdt: function tfdt(data) {\n          var result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n          };\n\n          if (result.version === 1) {\n            result.baseMediaDecodeTime *= Math.pow(2, 32);\n            result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n          }\n\n          return result;\n        },\n        tfhd: function tfhd(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            trackId: view.getUint32(4)\n          },\n              baseDataOffsetPresent = result.flags[2] & 0x01,\n              sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n              defaultSampleDurationPresent = result.flags[2] & 0x08,\n              defaultSampleSizePresent = result.flags[2] & 0x10,\n              defaultSampleFlagsPresent = result.flags[2] & 0x20,\n              durationIsEmpty = result.flags[0] & 0x010000,\n              defaultBaseIsMoof = result.flags[0] & 0x020000,\n              i;\n          i = 8;\n\n          if (baseDataOffsetPresent) {\n            i += 4; // truncate top 4 bytes\n            // FIXME: should we read the full 64 bits?\n\n            result.baseDataOffset = view.getUint32(12);\n            i += 4;\n          }\n\n          if (sampleDescriptionIndexPresent) {\n            result.sampleDescriptionIndex = view.getUint32(i);\n            i += 4;\n          }\n\n          if (defaultSampleDurationPresent) {\n            result.defaultSampleDuration = view.getUint32(i);\n            i += 4;\n          }\n\n          if (defaultSampleSizePresent) {\n            result.defaultSampleSize = view.getUint32(i);\n            i += 4;\n          }\n\n          if (defaultSampleFlagsPresent) {\n            result.defaultSampleFlags = view.getUint32(i);\n          }\n\n          if (durationIsEmpty) {\n            result.durationIsEmpty = true;\n          }\n\n          if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n            result.baseDataOffsetIsMoof = true;\n          }\n\n          return result;\n        },\n        tkhd: function tkhd(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              i = 4,\n              result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n\n          if (result.version === 1) {\n            i += 4;\n            result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 8;\n            result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n            i += 4;\n            result.trackId = view.getUint32(i);\n            i += 4;\n            i += 8;\n            result.duration = view.getUint32(i); // truncating top 4 bytes\n          } else {\n            result.creationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.modificationTime = parseMp4Date(view.getUint32(i));\n            i += 4;\n            result.trackId = view.getUint32(i);\n            i += 4;\n            i += 4;\n            result.duration = view.getUint32(i);\n          }\n\n          i += 4;\n          i += 2 * 4;\n          result.layer = view.getUint16(i);\n          i += 2;\n          result.alternateGroup = view.getUint16(i);\n          i += 2; // convert fixed-point, base 16 back to a number\n\n          result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n          i += 2;\n          i += 2;\n          result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n          i += 9 * 4;\n          result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n          i += 4;\n          result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n          return result;\n        },\n        traf: function traf(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        trak: function trak(data) {\n          return {\n            boxes: inspectMp4(data)\n          };\n        },\n        trex: function trex(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            trackId: view.getUint32(4),\n            defaultSampleDescriptionIndex: view.getUint32(8),\n            defaultSampleDuration: view.getUint32(12),\n            defaultSampleSize: view.getUint32(16),\n            sampleDependsOn: data[20] & 0x03,\n            sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n            sampleHasRedundancy: (data[21] & 0x30) >> 4,\n            samplePaddingValue: (data[21] & 0x0e) >> 1,\n            sampleIsDifferenceSample: !!(data[21] & 0x01),\n            sampleDegradationPriority: view.getUint16(22)\n          };\n        },\n        trun: function trun(data) {\n          var result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            samples: []\n          },\n              view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n              // Flag interpretation\n          dataOffsetPresent = result.flags[2] & 0x01,\n              // compare with 2nd byte of 0x1\n          firstSampleFlagsPresent = result.flags[2] & 0x04,\n              // compare with 2nd byte of 0x4\n          sampleDurationPresent = result.flags[1] & 0x01,\n              // compare with 2nd byte of 0x100\n          sampleSizePresent = result.flags[1] & 0x02,\n              // compare with 2nd byte of 0x200\n          sampleFlagsPresent = result.flags[1] & 0x04,\n              // compare with 2nd byte of 0x400\n          sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n              // compare with 2nd byte of 0x800\n          sampleCount = view.getUint32(4),\n              offset = 8,\n              sample;\n\n          if (dataOffsetPresent) {\n            // 32 bit signed integer\n            result.dataOffset = view.getInt32(offset);\n            offset += 4;\n          } // Overrides the flags for the first sample only. The order of\n          // optional values will be: duration, size, compositionTimeOffset\n\n\n          if (firstSampleFlagsPresent && sampleCount) {\n            sample = {\n              flags: parseSampleFlags(data.subarray(offset, offset + 4))\n            };\n            offset += 4;\n\n            if (sampleDurationPresent) {\n              sample.duration = view.getUint32(offset);\n              offset += 4;\n            }\n\n            if (sampleSizePresent) {\n              sample.size = view.getUint32(offset);\n              offset += 4;\n            }\n\n            if (sampleCompositionTimeOffsetPresent) {\n              // Note: this should be a signed int if version is 1\n              sample.compositionTimeOffset = view.getUint32(offset);\n              offset += 4;\n            }\n\n            result.samples.push(sample);\n            sampleCount--;\n          }\n\n          while (sampleCount--) {\n            sample = {};\n\n            if (sampleDurationPresent) {\n              sample.duration = view.getUint32(offset);\n              offset += 4;\n            }\n\n            if (sampleSizePresent) {\n              sample.size = view.getUint32(offset);\n              offset += 4;\n            }\n\n            if (sampleFlagsPresent) {\n              sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n              offset += 4;\n            }\n\n            if (sampleCompositionTimeOffsetPresent) {\n              // Note: this should be a signed int if version is 1\n              sample.compositionTimeOffset = view.getUint32(offset);\n              offset += 4;\n            }\n\n            result.samples.push(sample);\n          }\n\n          return result;\n        },\n        'url ': function url(data) {\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n        },\n        vmhd: function vmhd(data) {\n          var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n          return {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            graphicsmode: view.getUint16(4),\n            opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n          };\n        }\n      };\n      /**\n       * Return a javascript array of box objects parsed from an ISO base\n       * media file.\n       * @param data {Uint8Array} the binary data of the media to be inspected\n       * @return {array} a javascript array of potentially nested box objects\n       */\n\n\n      inspectMp4 = function inspectMp4(data) {\n        var i = 0,\n            result = [],\n            view,\n            size,\n            type,\n            end,\n            box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n        var ab = new ArrayBuffer(data.length);\n        var v = new Uint8Array(ab);\n\n        for (var z = 0; z < data.length; ++z) {\n          v[z] = data[z];\n        }\n\n        view = new DataView(ab);\n\n        while (i < data.byteLength) {\n          // parse box data\n          size = view.getUint32(i);\n          type = parseType$2(data.subarray(i + 4, i + 8));\n          end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n          box = (parse$$1[type] || function (data) {\n            return {\n              data: data\n            };\n          })(data.subarray(i + 8, end));\n\n          box.size = size;\n          box.type = type; // store this box and move to the next\n\n          result.push(box);\n          i = end;\n        }\n\n        return result;\n      };\n      /**\n       * Returns a textual representation of the javascript represtentation\n       * of an MP4 file. You can use it as an alternative to\n       * JSON.stringify() to compare inspected MP4s.\n       * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n       * file\n       * @param depth {number} (optional) the number of ancestor boxes of\n       * the elements of inspectedMp4. Assumed to be zero if unspecified.\n       * @return {string} a text representation of the parsed MP4\n       */\n\n\n      _textifyMp = function textifyMp4(inspectedMp4, depth) {\n        var indent;\n        depth = depth || 0;\n        indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n        return inspectedMp4.map(function (box, index) {\n          // list the box type first at the current indentation level\n          return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n          Object.keys(box).filter(function (key) {\n            return key !== 'type' && key !== 'boxes'; // output all the box properties\n          }).map(function (key) {\n            var prefix = indent + '  ' + key + ': ',\n                value = box[key]; // print out raw bytes as hexademical\n\n            if (value instanceof Uint8Array || value instanceof Uint32Array) {\n              var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n\n              if (!bytes) {\n                return prefix + '<>';\n              }\n\n              if (bytes.length === 1) {\n                return prefix + '<' + bytes.join('').slice(1) + '>';\n              }\n\n              return prefix + '<\\n' + bytes.map(function (line) {\n                return indent + '  ' + line;\n              }).join('\\n') + '\\n' + indent + '  >';\n            } // stringify generic objects\n\n\n            return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n              if (index === 0) {\n                return line;\n              }\n\n              return indent + '  ' + line;\n            }).join('\\n');\n          }).join('\\n') + ( // recursively textify the child boxes\n          box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n        }).join('\\n');\n      };\n\n      var mp4Inspector = {\n        inspect: inspectMp4,\n        textify: _textifyMp,\n        parseTfdt: parse$$1.tfdt,\n        parseHdlr: parse$$1.hdlr,\n        parseTfhd: parse$$1.tfhd,\n        parseTrun: parse$$1.trun,\n        parseSidx: parse$$1.sidx\n      };\n      var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n      var CaptionStream$1 = captionStream.CaptionStream;\n      /**\n        * Maps an offset in the mdat to a sample based on the the size of the samples.\n        * Assumes that `parseSamples` has been called first.\n        *\n        * @param {Number} offset - The offset into the mdat\n        * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n        * @return {?Object} The matching sample, or null if no match was found.\n        *\n        * @see ISO-BMFF-12/2015, Section 8.8.8\n       **/\n\n      var mapToSample = function mapToSample(offset, samples) {\n        var approximateOffset = offset;\n\n        for (var i = 0; i < samples.length; i++) {\n          var sample = samples[i];\n\n          if (approximateOffset < sample.size) {\n            return sample;\n          }\n\n          approximateOffset -= sample.size;\n        }\n\n        return null;\n      };\n      /**\n        * Finds SEI nal units contained in a Media Data Box.\n        * Assumes that `parseSamples` has been called first.\n        *\n        * @param {Uint8Array} avcStream - The bytes of the mdat\n        * @param {Object[]} samples - The samples parsed out by `parseSamples`\n        * @param {Number} trackId - The trackId of this video track\n        * @return {Object[]} seiNals - the parsed SEI NALUs found.\n        *   The contents of the seiNal should match what is expected by\n        *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n        *\n        * @see ISO-BMFF-12/2015, Section 8.1.1\n        * @see Rec. ITU-T H.264, 7.3.2.3.1\n       **/\n\n\n      var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n        var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n            result = [],\n            seiNal,\n            i,\n            length,\n            lastMatchedSample;\n\n        for (i = 0; i + 4 < avcStream.length; i += length) {\n          length = avcView.getUint32(i);\n          i += 4; // Bail if this doesn't appear to be an H264 stream\n\n          if (length <= 0) {\n            continue;\n          }\n\n          switch (avcStream[i] & 0x1F) {\n            case 0x06:\n              var data = avcStream.subarray(i + 1, i + 1 + length);\n              var matchingSample = mapToSample(i, samples);\n              seiNal = {\n                nalUnitType: 'sei_rbsp',\n                size: length,\n                data: data,\n                escapedRBSP: discardEmulationPreventionBytes$1(data),\n                trackId: trackId\n              };\n\n              if (matchingSample) {\n                seiNal.pts = matchingSample.pts;\n                seiNal.dts = matchingSample.dts;\n                lastMatchedSample = matchingSample;\n              } else {\n                // If a matching sample cannot be found, use the last\n                // sample's values as they should be as close as possible\n                seiNal.pts = lastMatchedSample.pts;\n                seiNal.dts = lastMatchedSample.dts;\n              }\n\n              result.push(seiNal);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        return result;\n      };\n      /**\n        * Parses sample information out of Track Run Boxes and calculates\n        * the absolute presentation and decode timestamps of each sample.\n        *\n        * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n        * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n            @see ISO-BMFF-12/2015, Section 8.8.12\n        * @param {Object} tfhd - The parsed Track Fragment Header\n        *   @see inspect.parseTfhd\n        * @return {Object[]} the parsed samples\n        *\n        * @see ISO-BMFF-12/2015, Section 8.8.8\n       **/\n\n\n      var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n        var currentDts = baseMediaDecodeTime;\n        var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n        var defaultSampleSize = tfhd.defaultSampleSize || 0;\n        var trackId = tfhd.trackId;\n        var allSamples = [];\n        truns.forEach(function (trun) {\n          // Note: We currently do not parse the sample table as well\n          // as the trun. It's possible some sources will require this.\n          // moov > trak > mdia > minf > stbl\n          var trackRun = mp4Inspector.parseTrun(trun);\n          var samples = trackRun.samples;\n          samples.forEach(function (sample) {\n            if (sample.duration === undefined) {\n              sample.duration = defaultSampleDuration;\n            }\n\n            if (sample.size === undefined) {\n              sample.size = defaultSampleSize;\n            }\n\n            sample.trackId = trackId;\n            sample.dts = currentDts;\n\n            if (sample.compositionTimeOffset === undefined) {\n              sample.compositionTimeOffset = 0;\n            }\n\n            sample.pts = currentDts + sample.compositionTimeOffset;\n            currentDts += sample.duration;\n          });\n          allSamples = allSamples.concat(samples);\n        });\n        return allSamples;\n      };\n      /**\n        * Parses out caption nals from an FMP4 segment's video tracks.\n        *\n        * @param {Uint8Array} segment - The bytes of a single segment\n        * @param {Number} videoTrackId - The trackId of a video track in the segment\n        * @return {Object.<Number, Object[]>} A mapping of video trackId to\n        *   a list of seiNals found in that track\n       **/\n\n\n      var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n        // To get the samples\n        var trafs = probe$$1.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n        var mdats = probe$$1.findBox(segment, ['mdat']);\n        var captionNals = {};\n        var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n        mdats.forEach(function (mdat, index) {\n          var matchingTraf = trafs[index];\n          mdatTrafPairs.push({\n            mdat: mdat,\n            traf: matchingTraf\n          });\n        });\n        mdatTrafPairs.forEach(function (pair) {\n          var mdat = pair.mdat;\n          var traf = pair.traf;\n          var tfhd = probe$$1.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n          var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n          var trackId = headerInfo.trackId;\n          var tfdt = probe$$1.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n          var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n          var truns = probe$$1.findBox(traf, ['trun']);\n          var samples;\n          var seiNals; // Only parse video data for the chosen video track\n\n          if (videoTrackId === trackId && truns.length > 0) {\n            samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n            seiNals = findSeiNals(mdat, samples, trackId);\n\n            if (!captionNals[trackId]) {\n              captionNals[trackId] = [];\n            }\n\n            captionNals[trackId] = captionNals[trackId].concat(seiNals);\n          }\n        });\n        return captionNals;\n      };\n      /**\n        * Parses out inband captions from an MP4 container and returns\n        * caption objects that can be used by WebVTT and the TextTrack API.\n        * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n        * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n        * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number} trackId - The id of the video track to parse\n        * @param {Number} timescale - The timescale for the video track from the init segment\n        *\n        * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n        * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n        * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n        * @return {String} parsedCaptions[].text - The visible content of the caption\n       **/\n\n\n      var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n        var seiNals;\n\n        if (!trackId) {\n          return null;\n        }\n\n        seiNals = parseCaptionNals(segment, trackId);\n        return {\n          seiNals: seiNals[trackId],\n          timescale: timescale\n        };\n      };\n      /**\n        * Converts SEI NALUs into captions that can be used by video.js\n       **/\n\n\n      var CaptionParser$$1 = function CaptionParser$$1() {\n        var isInitialized = false;\n        var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n        var segmentCache; // Stores video track ID of the track being parsed\n\n        var trackId; // Stores the timescale of the track being parsed\n\n        var timescale; // Stores captions parsed so far\n\n        var parsedCaptions;\n        /**\n          * A method to indicate whether a CaptionParser has been initalized\n          * @returns {Boolean}\n         **/\n\n        this.isInitialized = function () {\n          return isInitialized;\n        };\n        /**\n          * Initializes the underlying CaptionStream, SEI NAL parsing\n          * and management, and caption collection\n         **/\n\n\n        this.init = function () {\n          captionStream$$1 = new CaptionStream$1();\n          isInitialized = true; // Collect dispatched captions\n\n          captionStream$$1.on('data', function (event) {\n            // Convert to seconds in the source's timescale\n            event.startTime = event.startPts / timescale;\n            event.endTime = event.endPts / timescale;\n            parsedCaptions.captions.push(event);\n            parsedCaptions.captionStreams[event.stream] = true;\n          });\n        };\n        /**\n          * Determines if a new video track will be selected\n          * or if the timescale changed\n          * @return {Boolean}\n         **/\n\n\n        this.isNewInit = function (videoTrackIds, timescales) {\n          if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n            return false;\n          }\n\n          return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n        };\n        /**\n          * Parses out SEI captions and interacts with underlying\n          * CaptionStream to return dispatched captions\n          *\n          * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n          * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n          * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n          * @see parseEmbeddedCaptions\n          * @see m2ts/caption-stream.js\n         **/\n\n\n        this.parse = function (segment, videoTrackIds, timescales) {\n          var parsedData;\n\n          if (!this.isInitialized()) {\n            return null; // This is not likely to be a video segment\n          } else if (!videoTrackIds || !timescales) {\n            return null;\n          } else if (this.isNewInit(videoTrackIds, timescales)) {\n            // Use the first video track only as there is no\n            // mechanism to switch to other video tracks\n            trackId = videoTrackIds[0];\n            timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n            // data until we have one\n          } else if (!trackId || !timescale) {\n            segmentCache.push(segment);\n            return null;\n          } // Now that a timescale and trackId is set, parse cached segments\n\n\n          while (segmentCache.length > 0) {\n            var cachedSegment = segmentCache.shift();\n            this.parse(cachedSegment, videoTrackIds, timescales);\n          }\n\n          parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n          if (parsedData === null || !parsedData.seiNals) {\n            return null;\n          }\n\n          this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n          this.flushStream();\n          return parsedCaptions;\n        };\n        /**\n          * Pushes SEI NALUs onto CaptionStream\n          * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n          * Assumes that `parseCaptionNals` has been called first\n          * @see m2ts/caption-stream.js\n          **/\n\n\n        this.pushNals = function (nals) {\n          if (!this.isInitialized() || !nals || nals.length === 0) {\n            return null;\n          }\n\n          nals.forEach(function (nal) {\n            captionStream$$1.push(nal);\n          });\n        };\n        /**\n          * Flushes underlying CaptionStream to dispatch processed, displayable captions\n          * @see m2ts/caption-stream.js\n         **/\n\n\n        this.flushStream = function () {\n          if (!this.isInitialized()) {\n            return null;\n          }\n\n          captionStream$$1.flush();\n        };\n        /**\n          * Reset caption buckets for new data\n         **/\n\n\n        this.clearParsedCaptions = function () {\n          parsedCaptions.captions = [];\n          parsedCaptions.captionStreams = {};\n        };\n        /**\n          * Resets underlying CaptionStream\n          * @see m2ts/caption-stream.js\n         **/\n\n\n        this.resetCaptionStream = function () {\n          if (!this.isInitialized()) {\n            return null;\n          }\n\n          captionStream$$1.reset();\n        };\n        /**\n          * Convenience method to clear all captions flushed from the\n          * CaptionStream and still being parsed\n          * @see m2ts/caption-stream.js\n         **/\n\n\n        this.clearAllCaptions = function () {\n          this.clearParsedCaptions();\n          this.resetCaptionStream();\n        };\n        /**\n          * Reset caption parser\n         **/\n\n\n        this.reset = function () {\n          segmentCache = [];\n          trackId = null;\n          timescale = null;\n\n          if (!parsedCaptions) {\n            parsedCaptions = {\n              captions: [],\n              // CC1, CC2, CC3, CC4\n              captionStreams: {}\n            };\n          } else {\n            this.clearParsedCaptions();\n          }\n\n          this.resetCaptionStream();\n        };\n\n        this.reset();\n      };\n\n      var captionParser = CaptionParser$$1;\n      var mp4$$1 = {\n        generator: mp4Generator,\n        probe: probe$$1,\n        Transmuxer: transmuxer.Transmuxer,\n        AudioSegmentStream: transmuxer.AudioSegmentStream,\n        VideoSegmentStream: transmuxer.VideoSegmentStream,\n        CaptionParser: captionParser\n      };\n\n      var classCallCheck = function classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      };\n\n      var createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n      /**\n       * @file transmuxer-worker.js\n       */\n\n      /**\n       * Re-emits transmuxer events by converting them into messages to the\n       * world outside the worker.\n       *\n       * @param {Object} transmuxer the transmuxer to wire events on\n       * @private\n       */\n\n\n      var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n        transmuxer.on('data', function (segment) {\n          // transfer ownership of the underlying ArrayBuffer\n          // instead of doing a copy to save memory\n          // ArrayBuffers are transferable but generic TypedArrays are not\n          // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n          var initArray = segment.initSegment;\n          segment.initSegment = {\n            data: initArray.buffer,\n            byteOffset: initArray.byteOffset,\n            byteLength: initArray.byteLength\n          };\n          var typedArray = segment.data;\n          segment.data = typedArray.buffer;\n          self.postMessage({\n            action: 'data',\n            segment: segment,\n            byteOffset: typedArray.byteOffset,\n            byteLength: typedArray.byteLength\n          }, [segment.data]);\n        });\n\n        if (transmuxer.captionStream) {\n          transmuxer.captionStream.on('data', function (caption) {\n            self.postMessage({\n              action: 'caption',\n              data: caption\n            });\n          });\n        }\n\n        transmuxer.on('done', function (data) {\n          self.postMessage({\n            action: 'done'\n          });\n        });\n        transmuxer.on('gopInfo', function (gopInfo) {\n          self.postMessage({\n            action: 'gopInfo',\n            gopInfo: gopInfo\n          });\n        });\n        transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n          self.postMessage({\n            action: 'videoSegmentTimingInfo',\n            videoSegmentTimingInfo: videoSegmentTimingInfo\n          });\n        });\n      };\n      /**\n       * All incoming messages route through this hash. If no function exists\n       * to handle an incoming message, then we ignore the message.\n       *\n       * @class MessageHandlers\n       * @param {Object} options the options to initialize with\n       */\n\n\n      var MessageHandlers = function () {\n        function MessageHandlers(self, options) {\n          classCallCheck(this, MessageHandlers);\n          this.options = options || {};\n          this.self = self;\n          this.init();\n        }\n        /**\n         * initialize our web worker and wire all the events.\n         */\n\n\n        createClass(MessageHandlers, [{\n          key: 'init',\n          value: function init() {\n            if (this.transmuxer) {\n              this.transmuxer.dispose();\n            }\n\n            this.transmuxer = new mp4$$1.Transmuxer(this.options);\n            wireTransmuxerEvents(this.self, this.transmuxer);\n          }\n          /**\n           * Adds data (a ts segment) to the start of the transmuxer pipeline for\n           * processing.\n           *\n           * @param {ArrayBuffer} data data to push into the muxer\n           */\n\n        }, {\n          key: 'push',\n          value: function push(data) {\n            // Cast array buffer to correct type for transmuxer\n            var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n            this.transmuxer.push(segment);\n          }\n          /**\n           * Recreate the transmuxer so that the next segment added via `push`\n           * start with a fresh transmuxer.\n           */\n\n        }, {\n          key: 'reset',\n          value: function reset() {\n            this.init();\n          }\n          /**\n           * Set the value that will be used as the `baseMediaDecodeTime` time for the\n           * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n           * set relative to the first based on the PTS values.\n           *\n           * @param {Object} data used to set the timestamp offset in the muxer\n           */\n\n        }, {\n          key: 'setTimestampOffset',\n          value: function setTimestampOffset(data) {\n            var timestampOffset = data.timestampOffset || 0;\n            this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n          }\n        }, {\n          key: 'setAudioAppendStart',\n          value: function setAudioAppendStart(data) {\n            this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n          }\n          /**\n           * Forces the pipeline to finish processing the last segment and emit it's\n           * results.\n           *\n           * @param {Object} data event data, not really used\n           */\n\n        }, {\n          key: 'flush',\n          value: function flush(data) {\n            this.transmuxer.flush();\n          }\n        }, {\n          key: 'resetCaptions',\n          value: function resetCaptions() {\n            this.transmuxer.resetCaptions();\n          }\n        }, {\n          key: 'alignGopsWith',\n          value: function alignGopsWith(data) {\n            this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n          }\n        }]);\n        return MessageHandlers;\n      }();\n      /**\n       * Our web wroker interface so that things can talk to mux.js\n       * that will be running in a web worker. the scope is passed to this by\n       * webworkify.\n       *\n       * @param {Object} self the scope for the web worker\n       */\n\n\n      var TransmuxerWorker = function TransmuxerWorker(self) {\n        self.onmessage = function (event) {\n          if (event.data.action === 'init' && event.data.options) {\n            this.messageHandlers = new MessageHandlers(self, event.data.options);\n            return;\n          }\n\n          if (!this.messageHandlers) {\n            this.messageHandlers = new MessageHandlers(self);\n          }\n\n          if (event.data && event.data.action && event.data.action !== 'init') {\n            if (this.messageHandlers[event.data.action]) {\n              this.messageHandlers[event.data.action](event.data);\n            }\n          }\n        };\n      };\n\n      var transmuxerWorker = new TransmuxerWorker(self);\n      return transmuxerWorker;\n    }();\n  });\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n  // Default codec parameters if none were provided for video and/or audio\n\n  var defaultCodecs = {\n    videoCodec: 'avc1',\n    videoObjectTypeIndicator: '.4d400d',\n    // AAC-LC\n    audioProfile: '2'\n  };\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {Array} codecs an array of codec strings to fix\n   * @return {Array} the translated codec array\n   * @private\n   */\n\n  var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n    return codecs.map(function (codec) {\n      return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n        var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n        var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n        return 'avc1.' + profileHex + '00' + avcLevelHex;\n      });\n    });\n  };\n  /**\n   * Parses a codec string to retrieve the number of codecs specified,\n   * the video codec and object type indicator, and the audio profile.\n   */\n\n\n  var parseCodecs = function parseCodecs() {\n    var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var result = {\n      codecCount: 0\n    };\n    var parsed = void 0;\n    result.codecCount = codecs.split(',').length;\n    result.codecCount = result.codecCount || 2; // parse the video codec\n\n    parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n    if (parsed) {\n      result.videoCodec = parsed[2];\n      result.videoObjectTypeIndicator = parsed[3];\n    } // parse the last field of the audio codec\n\n\n    result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n    result.audioProfile = result.audioProfile && result.audioProfile[2];\n    return result;\n  };\n  /**\n   * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n   * standard `avc1.<hhhhhh>`.\n   *\n   * @param codecString {String} the codec string\n   * @return {String} the codec string with old apple-style codecs replaced\n   *\n   * @private\n   */\n\n\n  var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n    return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n      return translateLegacyCodecs([match])[0];\n    });\n  };\n  /**\n   * Build a media mime-type string from a set of parameters\n   * @param {String} type either 'audio' or 'video'\n   * @param {String} container either 'mp2t' or 'mp4'\n   * @param {Array} codecs an array of codec strings to add\n   * @return {String} a valid media mime-type\n   */\n\n\n  var makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n    // The codecs array is filtered so that falsey values are\n    // dropped and don't cause Array#join to create spurious\n    // commas\n    return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n      return !!c;\n    }).join(', ') + '\"';\n  };\n  /**\n   * Returns the type container based on information in the playlist\n   * @param {Playlist} media the current media playlist\n   * @return {String} a valid media container type\n   */\n\n\n  var getContainerType = function getContainerType(media) {\n    // An initialization segment means the media playlist is an iframe\n    // playlist or is using the mp4 container. We don't currently\n    // support iframe playlists, so assume this is signalling mp4\n    // fragments.\n    if (media.segments && media.segments.length && media.segments[0].map) {\n      return 'mp4';\n    }\n\n    return 'mp2t';\n  };\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n\n  var getCodecs = function getCodecs(media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    var mediaAttributes = media.attributes || {};\n\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n\n    return defaultCodecs;\n  };\n\n  var audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n    if (!audioGroup) {\n      return null;\n    }\n\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n\n      if (audioType.default && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Calculates the MIME type strings for a working configuration of\n   * SourceBuffers to play variant streams in a master playlist. If\n   * there is no possible working configuration, an empty array will be\n   * returned.\n   *\n   * @param master {Object} the m3u8 object for the master playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Array} the MIME type strings. If the array has more than\n   * one entry, the first element should be applied to the video\n   * SourceBuffer and the second to the audio SourceBuffer.\n   *\n   * @private\n   */\n\n\n  var mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n    var containerType = getContainerType(media);\n    var codecInfo = getCodecs(media);\n    var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n    var isMuxed = true;\n    var isMaat = false;\n\n    if (!media) {\n      // Not enough information\n      return [];\n    }\n\n    if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n      var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n      if (audioGroup) {\n        isMaat = true; // Start with the everything demuxed then...\n\n        isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n        for (var groupId in audioGroup) {\n          // either a uri is present (if the case of HLS and an external playlist), or\n          // playlists is present (in the case of DASH where we don't have external audio\n          // playlists)\n          if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n            isMuxed = true;\n            break;\n          }\n        }\n      }\n    } // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n    if (isMaat && !codecInfo.audioProfile) {\n      if (!isMuxed) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n      }\n\n      if (!codecInfo.audioProfile) {\n        videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n        codecInfo.audioProfile = defaultCodecs.audioProfile;\n      }\n    } // Generate the final codec strings from the codec object generated above\n\n\n    var codecStrings = {};\n\n    if (codecInfo.videoCodec) {\n      codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n    }\n\n    if (codecInfo.audioProfile) {\n      codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n    } // Finally, make and return an array with proper mime-types depending on\n    // the configuration\n\n\n    var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n    var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n    var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n    if (isMaat) {\n      if (!isMuxed && codecStrings.video) {\n        return [justVideo, justAudio];\n      }\n\n      if (!isMuxed && !codecStrings.video) {\n        // There is no muxed content and no video codec string, so this is an audio only\n        // stream with alternate audio.\n        return [justAudio, justAudio];\n      } // There exists the possiblity that this will return a `video/container`\n      // mime-type for the first entry in the array even when there is only audio.\n      // This doesn't appear to be a problem and simplifies the code.\n\n\n      return [bothVideoAudio, justAudio];\n    } // If there is no video codec at all, always just return a single\n    // audio/<container> mime-type\n\n\n    if (!codecStrings.video) {\n      return [justAudio];\n    } // When not using separate audio media groups, audio and video is\n    // *always* muxed\n\n\n    return [bothVideoAudio];\n  };\n  /**\n   * Parse a content type header into a type and parameters\n   * object\n   *\n   * @param {String} type the content type header\n   * @return {Object} the parsed content-type\n   * @private\n   */\n\n\n  var parseContentType = function parseContentType(type) {\n    var object = {\n      type: '',\n      parameters: {}\n    };\n    var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n    object.type = parameters.shift().trim();\n    parameters.forEach(function (parameter) {\n      var pair = parameter.trim().split('=');\n\n      if (pair.length > 1) {\n        var name = pair[0].replace(/\"/g, '').trim();\n        var value = pair[1].replace(/\"/g, '').trim();\n        object.parameters[name] = value;\n      }\n    });\n    return object;\n  };\n  /**\n   * Check if a codec string refers to an audio codec.\n   *\n   * @param {String} codec codec string to check\n   * @return {Boolean} if this is an audio codec\n   * @private\n   */\n\n\n  var isAudioCodec = function isAudioCodec(codec) {\n    return /mp4a\\.\\d+.\\d+/i.test(codec);\n  };\n  /**\n   * Check if a codec string refers to a video codec.\n   *\n   * @param {String} codec codec string to check\n   * @return {Boolean} if this is a video codec\n   * @private\n   */\n\n\n  var isVideoCodec = function isVideoCodec(codec) {\n    return /avc1\\.[\\da-f]+/i.test(codec);\n  };\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n\n  var gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n    var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n    var i = void 0;\n\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n\n  var updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n    if (!gops.length) {\n      return buffer;\n    }\n\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n\n    var start = gops[0].pts;\n    var i = 0;\n\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n\n  var removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n    var startPts = Math.ceil((start - mapping) * 90000);\n    var endPts = Math.ceil((end - mapping) * 90000);\n    var updatedBuffer = buffer.slice();\n    var i = buffer.length;\n\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n\n    var j = i + 1;\n\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n\n  var buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n    var start = null;\n    var end = null;\n    var arity = 0;\n    var extents = [];\n    var ranges = []; // neither buffer has been created yet\n\n    if (!videoBuffer && !audioBuffer) {\n      return videojs$1.createTimeRange();\n    } // only one buffer is configured\n\n\n    if (!videoBuffer) {\n      return audioBuffer.buffered;\n    }\n\n    if (!audioBuffer) {\n      return videoBuffer.buffered;\n    } // both buffers are configured\n\n\n    if (audioDisabled) {\n      return videoBuffer.buffered;\n    } // both buffers are empty\n\n\n    if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n      return videojs$1.createTimeRange();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n\n    var videoBuffered = videoBuffer.buffered;\n    var audioBuffered = audioBuffer.buffered;\n    var count = videoBuffered.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: videoBuffered.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: videoBuffered.end(count),\n        type: 'end'\n      });\n    }\n\n    count = audioBuffered.length;\n\n    while (count--) {\n      extents.push({\n        time: audioBuffered.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: audioBuffered.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n\n    return videojs$1.createTimeRanges(ranges);\n  };\n  /**\n   * @file virtual-source-buffer.js\n   */\n\n\n  var ONE_SECOND_IN_TS$3 = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n  // state of the `updating` property manually. We have to do this because\n  // Firefox changes `updating` to false long before triggering `updateend`\n  // events and that was causing strange problems in videojs-contrib-hls\n\n  var makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n    var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n    var wrapper = Object.create(null);\n    wrapper.updating = false;\n    wrapper.realBuffer_ = sourceBuffer;\n\n    var _loop = function _loop(key) {\n      if (typeof sourceBuffer[key] === 'function') {\n        wrapper[key] = function () {\n          return sourceBuffer[key].apply(sourceBuffer, arguments);\n        };\n      } else if (typeof wrapper[key] === 'undefined') {\n        Object.defineProperty(wrapper, key, {\n          get: function get$$1() {\n            return sourceBuffer[key];\n          },\n          set: function set$$1(v) {\n            return sourceBuffer[key] = v;\n          }\n        });\n      }\n    };\n\n    for (var key in sourceBuffer) {\n      _loop(key);\n    }\n\n    return wrapper;\n  };\n  /**\n   * VirtualSourceBuffers exist so that we can transmux non native formats\n   * into a native format, but keep the same api as a native source buffer.\n   * It creates a transmuxer, that works in its own thread (a web worker) and\n   * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n   * then send all of that data to the naive sourcebuffer so that it is\n   * indestinguishable from a natively supported format.\n   *\n   * @param {HtmlMediaSource} mediaSource the parent mediaSource\n   * @param {Array} codecs array of codecs that we will be dealing with\n   * @class VirtualSourceBuffer\n   * @extends video.js.EventTarget\n   */\n\n\n  var VirtualSourceBuffer = function (_videojs$EventTarget) {\n    inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n    function VirtualSourceBuffer(mediaSource, codecs) {\n      classCallCheck$1(this, VirtualSourceBuffer);\n\n      var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n      _this.timestampOffset_ = 0;\n      _this.pendingBuffers_ = [];\n      _this.bufferUpdating_ = false;\n      _this.mediaSource_ = mediaSource;\n      _this.codecs_ = codecs;\n      _this.audioCodec_ = null;\n      _this.videoCodec_ = null;\n      _this.audioDisabled_ = false;\n      _this.appendAudioInitSegment_ = true;\n      _this.gopBuffer_ = [];\n      _this.timeMapping_ = 0;\n      _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n      var options = {\n        remux: false,\n        alignGopsAtEnd: _this.safeAppend_\n      };\n\n      _this.codecs_.forEach(function (codec) {\n        if (isAudioCodec(codec)) {\n          _this.audioCodec_ = codec;\n        } else if (isVideoCodec(codec)) {\n          _this.videoCodec_ = codec;\n        }\n      }); // append muxed segments to their respective native buffers as\n      // soon as they are available\n\n\n      _this.transmuxer_ = new TransmuxWorker();\n\n      _this.transmuxer_.postMessage({\n        action: 'init',\n        options: options\n      });\n\n      _this.transmuxer_.onmessage = function (event) {\n        if (event.data.action === 'data') {\n          return _this.data_(event);\n        }\n\n        if (event.data.action === 'done') {\n          return _this.done_(event);\n        }\n\n        if (event.data.action === 'gopInfo') {\n          return _this.appendGopInfo_(event);\n        }\n\n        if (event.data.action === 'videoSegmentTimingInfo') {\n          return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n        }\n      }; // this timestampOffset is a property with the side-effect of resetting\n      // baseMediaDecodeTime in the transmuxer on the setter\n\n\n      Object.defineProperty(_this, 'timestampOffset', {\n        get: function get$$1() {\n          return this.timestampOffset_;\n        },\n        set: function set$$1(val) {\n          if (typeof val === 'number' && val >= 0) {\n            this.timestampOffset_ = val;\n            this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n            this.gopBuffer_.length = 0;\n            this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n            // the desired timestampOffset for the next segment\n\n            this.transmuxer_.postMessage({\n              action: 'setTimestampOffset',\n              timestampOffset: val\n            });\n          }\n        }\n      }); // setting the append window affects both source buffers\n\n      Object.defineProperty(_this, 'appendWindowStart', {\n        get: function get$$1() {\n          return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n        },\n        set: function set$$1(start) {\n          if (this.videoBuffer_) {\n            this.videoBuffer_.appendWindowStart = start;\n          }\n\n          if (this.audioBuffer_) {\n            this.audioBuffer_.appendWindowStart = start;\n          }\n        }\n      }); // this buffer is \"updating\" if either of its native buffers are\n\n      Object.defineProperty(_this, 'updating', {\n        get: function get$$1() {\n          return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n        }\n      }); // the buffered property is the intersection of the buffered\n      // ranges of the native source buffers\n\n      Object.defineProperty(_this, 'buffered', {\n        get: function get$$1() {\n          return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n        }\n      });\n      return _this;\n    }\n    /**\n     * When we get a data event from the transmuxer\n     * we call this function and handle the data that\n     * was sent to us\n     *\n     * @private\n     * @param {Event} event the data event from the transmuxer\n     */\n\n\n    createClass$1(VirtualSourceBuffer, [{\n      key: 'data_',\n      value: function data_(event) {\n        var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n        segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n        segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n        createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n        this.pendingBuffers_.push(segment);\n        return;\n      }\n      /**\n       * When we get a done event from the transmuxer\n       * we call this function and we process all\n       * of the pending data that we have been saving in the\n       * data_ function\n       *\n       * @private\n       * @param {Event} event the done event from the transmuxer\n       */\n\n    }, {\n      key: 'done_',\n      value: function done_(event) {\n        // Don't process and append data if the mediaSource is closed\n        if (this.mediaSource_.readyState === 'closed') {\n          this.pendingBuffers_.length = 0;\n          return;\n        } // All buffers should have been flushed from the muxer\n        // start processing anything we have received\n\n\n        this.processPendingSegments_();\n        return;\n      }\n    }, {\n      key: 'videoSegmentTimingInfo_',\n      value: function videoSegmentTimingInfo_(timingInfo) {\n        var timingInfoInSeconds = {\n          start: {\n            decode: timingInfo.start.dts / ONE_SECOND_IN_TS$3,\n            presentation: timingInfo.start.pts / ONE_SECOND_IN_TS$3\n          },\n          end: {\n            decode: timingInfo.end.dts / ONE_SECOND_IN_TS$3,\n            presentation: timingInfo.end.pts / ONE_SECOND_IN_TS$3\n          },\n          baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS$3\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS$3;\n        }\n\n        this.trigger({\n          type: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: timingInfoInSeconds\n        });\n      }\n      /**\n       * Create our internal native audio/video source buffers and add\n       * event handlers to them with the following conditions:\n       * 1. they do not already exist on the mediaSource\n       * 2. this VSB has a codec for them\n       *\n       * @private\n       */\n\n    }, {\n      key: 'createRealSourceBuffers_',\n      value: function createRealSourceBuffers_() {\n        var _this2 = this;\n\n        var types = ['audio', 'video'];\n        types.forEach(function (type) {\n          // Don't create a SourceBuffer of this type if we don't have a\n          // codec for it\n          if (!_this2[type + 'Codec_']) {\n            return;\n          } // Do nothing if a SourceBuffer of this type already exists\n\n\n          if (_this2[type + 'Buffer_']) {\n            return;\n          }\n\n          var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n          // use that\n\n          if (_this2.mediaSource_[type + 'Buffer_']) {\n            buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n            // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n            // than createRealSourceBuffers_ is called to create the second\n            // VirtualSourceBuffer because that happens as a side-effect of\n            // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n            // the audioBuffer is essentially \"ownerless\" and no one will toggle\n            // the `updating` state back to false once the `updateend` event is received\n            //\n            // Setting `updating` to false manually will work around this\n            // situation and allow work to continue\n\n            buffer.updating = false;\n          } else {\n            var codecProperty = type + 'Codec_';\n            var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n            buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n            _this2.mediaSource_[type + 'Buffer_'] = buffer;\n          }\n\n          _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n          ['update', 'updatestart', 'updateend'].forEach(function (event) {\n            buffer.addEventListener(event, function () {\n              // if audio is disabled\n              if (type === 'audio' && _this2.audioDisabled_) {\n                return;\n              }\n\n              if (event === 'updateend') {\n                _this2[type + 'Buffer_'].updating = false;\n              }\n\n              var shouldTrigger = types.every(function (t) {\n                // skip checking audio's updating status if audio\n                // is not enabled\n                if (t === 'audio' && _this2.audioDisabled_) {\n                  return true;\n                } // if the other type if updating we don't trigger\n\n\n                if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                  return false;\n                }\n\n                return true;\n              });\n\n              if (shouldTrigger) {\n                return _this2.trigger(event);\n              }\n            });\n          });\n        });\n      }\n      /**\n       * Emulate the native mediasource function, but our function will\n       * send all of the proposed segments to the transmuxer so that we\n       * can transmux them before we append them to our internal\n       * native source buffers in the correct format.\n       *\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n       * @param {Uint8Array} segment the segment to append to the buffer\n       */\n\n    }, {\n      key: 'appendBuffer',\n      value: function appendBuffer(segment) {\n        // Start the internal \"updating\" state\n        this.bufferUpdating_ = true;\n\n        if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n          var audioBuffered = this.audioBuffer_.buffered;\n          this.transmuxer_.postMessage({\n            action: 'setAudioAppendStart',\n            appendStart: audioBuffered.end(audioBuffered.length - 1)\n          });\n        }\n\n        if (this.videoBuffer_) {\n          this.transmuxer_.postMessage({\n            action: 'alignGopsWith',\n            gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n          });\n        }\n\n        this.transmuxer_.postMessage({\n          action: 'push',\n          // Send the typed-array of data as an ArrayBuffer so that\n          // it can be sent as a \"Transferable\" and avoid the costly\n          // memory copy\n          data: segment.buffer,\n          // To recreate the original typed-array, we need information\n          // about what portion of the ArrayBuffer it was a view into\n          byteOffset: segment.byteOffset,\n          byteLength: segment.byteLength\n        }, [segment.buffer]);\n        this.transmuxer_.postMessage({\n          action: 'flush'\n        });\n      }\n      /**\n       * Appends gop information (timing and byteLength) received by the transmuxer for the\n       * gops appended in the last call to appendBuffer\n       *\n       * @param {Event} event\n       *        The gopInfo event from the transmuxer\n       * @param {Array} event.data.gopInfo\n       *        List of gop info to append\n       */\n\n    }, {\n      key: 'appendGopInfo_',\n      value: function appendGopInfo_(event) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n      }\n      /**\n       * Emulate the native mediasource function and remove parts\n       * of the buffer from any of our internal buffers that exist\n       *\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n       * @param {Double} start position to start the remove at\n       * @param {Double} end position to end the remove at\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(start, end) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.updating = true;\n          this.videoBuffer_.remove(start, end);\n          this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        }\n\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          this.audioBuffer_.updating = true;\n          this.audioBuffer_.remove(start, end);\n        } // Remove Metadata Cues (id3)\n\n\n        removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n        if (this.inbandTextTracks_) {\n          for (var track in this.inbandTextTracks_) {\n            removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n          }\n        }\n      }\n      /**\n       * Process any segments that the muxer has output\n       * Concatenate segments together based on type and append them into\n       * their respective sourceBuffers\n       *\n       * @private\n       */\n\n    }, {\n      key: 'processPendingSegments_',\n      value: function processPendingSegments_() {\n        var sortedSegments = {\n          video: {\n            segments: [],\n            bytes: 0\n          },\n          audio: {\n            segments: [],\n            bytes: 0\n          },\n          captions: [],\n          metadata: []\n        }; // Sort segments into separate video/audio arrays and\n        // keep track of their total byte lengths\n\n        sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n          var type = segment.type;\n          var data = segment.data;\n          var initSegment = segment.initSegment;\n          segmentObj[type].segments.push(data);\n          segmentObj[type].bytes += data.byteLength;\n          segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n          if (segment.captions) {\n            segmentObj.captions = segmentObj.captions.concat(segment.captions);\n          }\n\n          if (segment.info) {\n            segmentObj[type].info = segment.info;\n          } // Gather any metadata into a single array\n\n\n          if (segment.metadata) {\n            segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n          }\n\n          return segmentObj;\n        }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n        // finally are sure what tracks are contained in the source\n\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          // Remove any codecs that may have been specified by default but\n          // are no longer applicable now\n          if (sortedSegments.video.bytes === 0) {\n            this.videoCodec_ = null;\n          }\n\n          if (sortedSegments.audio.bytes === 0) {\n            this.audioCodec_ = null;\n          }\n\n          this.createRealSourceBuffers_();\n        }\n\n        if (sortedSegments.audio.info) {\n          this.mediaSource_.trigger({\n            type: 'audioinfo',\n            info: sortedSegments.audio.info\n          });\n        }\n\n        if (sortedSegments.video.info) {\n          this.mediaSource_.trigger({\n            type: 'videoinfo',\n            info: sortedSegments.video.info\n          });\n        }\n\n        if (this.appendAudioInitSegment_) {\n          if (!this.audioDisabled_ && this.audioBuffer_) {\n            sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n            sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n          }\n\n          this.appendAudioInitSegment_ = false;\n        }\n\n        var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n        if (this.videoBuffer_ && sortedSegments.video.bytes) {\n          sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n          sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n          this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n          // The transmuxer did not return any bytes of video, meaning it was all trimmed\n          // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n          // will never be triggered by this source buffer, which will cause contrib-hls\n          // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n          // will be triggered by the audio buffer, which will be sent upwards since the video\n          // buffer will not be in an updating state.\n          triggerUpdateend = true;\n        } // Add text-track data for all\n\n\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n        }\n\n        this.pendingBuffers_.length = 0;\n\n        if (triggerUpdateend) {\n          this.trigger('updateend');\n        } // We are no longer in the internal \"updating\" state\n\n\n        this.bufferUpdating_ = false;\n      }\n      /**\n       * Combine all segments into a single Uint8Array and then append them\n       * to the destination buffer\n       *\n       * @param {Object} segmentObj\n       * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n       * @private\n       */\n\n    }, {\n      key: 'concatAndAppendSegments_',\n      value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n        var offset = 0;\n        var tempBuffer = void 0;\n\n        if (segmentObj.bytes) {\n          tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n          segmentObj.segments.forEach(function (segment) {\n            tempBuffer.set(segment, offset);\n            offset += segment.byteLength;\n          });\n\n          try {\n            destinationBuffer.updating = true;\n            destinationBuffer.appendBuffer(tempBuffer);\n          } catch (error) {\n            if (this.mediaSource_.player_) {\n              this.mediaSource_.player_.error({\n                code: -3,\n                type: 'APPEND_BUFFER_ERR',\n                message: error.message,\n                originalError: error\n              });\n            }\n          }\n        }\n      }\n      /**\n       * Emulate the native mediasource function. abort any soureBuffer\n       * actions and throw out any un-appended data.\n       *\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n       */\n\n    }, {\n      key: 'abort',\n      value: function abort() {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.abort();\n        }\n\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          this.audioBuffer_.abort();\n        }\n\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'reset'\n          });\n        }\n\n        this.pendingBuffers_.length = 0;\n        this.bufferUpdating_ = false;\n      }\n    }]);\n    return VirtualSourceBuffer;\n  }(videojs$1.EventTarget);\n  /**\n   * @file html-media-source.js\n   */\n\n  /**\n   * Our MediaSource implementation in HTML, mimics native\n   * MediaSource where/if possible.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n   * @class HtmlMediaSource\n   * @extends videojs.EventTarget\n   */\n\n\n  var HtmlMediaSource = function (_videojs$EventTarget) {\n    inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n    function HtmlMediaSource() {\n      classCallCheck$1(this, HtmlMediaSource);\n\n      var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n      var property = void 0;\n      _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n      for (property in _this.nativeMediaSource_) {\n        if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n          _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n        }\n      } // emulate `duration` and `seekable` until seeking can be\n      // handled uniformly for live streams\n      // see https://github.com/w3c/media-source/issues/5\n\n\n      _this.duration_ = NaN;\n      Object.defineProperty(_this, 'duration', {\n        get: function get$$1() {\n          if (this.duration_ === Infinity) {\n            return this.duration_;\n          }\n\n          return this.nativeMediaSource_.duration;\n        },\n        set: function set$$1(duration) {\n          this.duration_ = duration;\n\n          if (duration !== Infinity) {\n            this.nativeMediaSource_.duration = duration;\n            return;\n          }\n        }\n      });\n      Object.defineProperty(_this, 'seekable', {\n        get: function get$$1() {\n          if (this.duration_ === Infinity) {\n            return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n          }\n\n          return this.nativeMediaSource_.seekable;\n        }\n      });\n      Object.defineProperty(_this, 'readyState', {\n        get: function get$$1() {\n          return this.nativeMediaSource_.readyState;\n        }\n      });\n      Object.defineProperty(_this, 'activeSourceBuffers', {\n        get: function get$$1() {\n          return this.activeSourceBuffers_;\n        }\n      }); // the list of virtual and native SourceBuffers created by this\n      // MediaSource\n\n      _this.sourceBuffers = [];\n      _this.activeSourceBuffers_ = [];\n      /**\n       * update the list of active source buffers based upon various\n       * imformation from HLS and video.js\n       *\n       * @private\n       */\n\n      _this.updateActiveSourceBuffers_ = function () {\n        // Retain the reference but empty the array\n        _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n        // be disabled based on the codec of the source buffer\n\n        if (_this.sourceBuffers.length === 1) {\n          var sourceBuffer = _this.sourceBuffers[0];\n          sourceBuffer.appendAudioInitSegment_ = true;\n          sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n          _this.activeSourceBuffers_.push(sourceBuffer);\n\n          return;\n        } // There are 2 source buffers, a combined (possibly video only) source buffer and\n        // and an audio only source buffer.\n        // By default, the audio in the combined virtual source buffer is enabled\n        // and the audio-only source buffer (if it exists) is disabled.\n\n\n        var disableCombined = false;\n        var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n        // safari may do something like this\n\n        for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n          var track = _this.player_.audioTracks()[i];\n\n          if (track.enabled && track.kind !== 'main') {\n            // The enabled track is an alternate audio track so disable the audio in\n            // the combined source buffer and enable the audio-only source buffer.\n            disableCombined = true;\n            disableAudioOnly = false;\n            break;\n          }\n        }\n\n        _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n          /* eslinst-disable */\n          // TODO once codecs are required, we can switch to using the codecs to determine\n          //      what stream is the video stream, rather than relying on videoTracks\n\n          /* eslinst-enable */\n          sourceBuffer.appendAudioInitSegment_ = true;\n\n          if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n            // combined\n            sourceBuffer.audioDisabled_ = disableCombined;\n          } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n            // If the \"combined\" source buffer is video only, then we do not want\n            // disable the audio-only source buffer (this is mostly for demuxed\n            // audio and video hls)\n            sourceBuffer.audioDisabled_ = true;\n            disableAudioOnly = false;\n          } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n            // audio only\n            // In the case of audio only with alternate audio and disableAudioOnly is true\n            // this means we want to disable the audio on the alternate audio sourcebuffer\n            // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n            // always at index 0, so this ensures audio won't be disabled in both source\n            // buffers.\n            sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n            if (sourceBuffer.audioDisabled_) {\n              return;\n            }\n          }\n\n          _this.activeSourceBuffers_.push(sourceBuffer);\n        });\n      };\n\n      _this.onPlayerMediachange_ = function () {\n        _this.sourceBuffers.forEach(function (sourceBuffer) {\n          sourceBuffer.appendAudioInitSegment_ = true;\n        });\n      };\n\n      _this.onHlsReset_ = function () {\n        _this.sourceBuffers.forEach(function (sourceBuffer) {\n          if (sourceBuffer.transmuxer_) {\n            sourceBuffer.transmuxer_.postMessage({\n              action: 'resetCaptions'\n            });\n          }\n        });\n      };\n\n      _this.onHlsSegmentTimeMapping_ = function (event) {\n        _this.sourceBuffers.forEach(function (buffer) {\n          return buffer.timeMapping_ = event.mapping;\n        });\n      }; // Re-emit MediaSource events on the polyfill\n\n\n      ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n        this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n      }, _this); // capture the associated player when the MediaSource is\n      // successfully attached\n\n      _this.on('sourceopen', function (event) {\n        // Get the player this MediaSource is attached to\n        var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n        if (!video) {\n          return;\n        }\n\n        _this.player_ = videojs$1(video.parentNode);\n\n        if (!_this.player_) {\n          return;\n        } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n        // resets its state and flushes the buffer\n\n\n        _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n        // SegmentLoader inspects an MTS segment and has an accurate stream to display\n        // time mapping\n\n\n        _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n        if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n          _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n          _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n          _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n        }\n\n        _this.player_.on('mediachange', _this.onPlayerMediachange_);\n      });\n\n      _this.on('sourceended', function (event) {\n        var duration = durationOfVideo(_this.duration);\n\n        for (var i = 0; i < _this.sourceBuffers.length; i++) {\n          var sourcebuffer = _this.sourceBuffers[i];\n          var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n          if (cues && cues.length) {\n            cues[cues.length - 1].endTime = duration;\n          }\n        }\n      }); // explicitly terminate any WebWorkers that were created\n      // by SourceHandlers\n\n\n      _this.on('sourceclose', function (event) {\n        this.sourceBuffers.forEach(function (sourceBuffer) {\n          if (sourceBuffer.transmuxer_) {\n            sourceBuffer.transmuxer_.terminate();\n          }\n        });\n        this.sourceBuffers.length = 0;\n\n        if (!this.player_) {\n          return;\n        }\n\n        if (this.player_.audioTracks && this.player_.audioTracks()) {\n          this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n          this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n          this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n        } // We can only change this if the player hasn't been disposed of yet\n        // because `off` eventually tries to use the el_ property. If it has\n        // been disposed of, then don't worry about it because there are no\n        // event handlers left to unbind anyway\n\n\n        if (this.player_.el_) {\n          this.player_.off('mediachange', this.onPlayerMediachange_);\n        }\n\n        if (this.player_.tech_ && this.player_.tech_.el_) {\n          this.player_.tech_.off('hls-reset', this.onHlsReset_);\n          this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n        }\n      });\n\n      return _this;\n    }\n    /**\n     * Add a range that that can now be seeked to.\n     *\n     * @param {Double} start where to start the addition\n     * @param {Double} end where to end the addition\n     * @private\n     */\n\n\n    createClass$1(HtmlMediaSource, [{\n      key: 'addSeekableRange_',\n      value: function addSeekableRange_(start, end) {\n        var error = void 0;\n\n        if (this.duration !== Infinity) {\n          error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n          error.name = 'InvalidStateError';\n          error.code = 11;\n          throw error;\n        }\n\n        if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n          this.nativeMediaSource_.duration = end;\n        }\n      }\n      /**\n       * Add a source buffer to the media source.\n       *\n       * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n       * @param {String} type the content-type of the content\n       * @return {Object} the created source buffer\n       */\n\n    }, {\n      key: 'addSourceBuffer',\n      value: function addSourceBuffer(type) {\n        var buffer = void 0;\n        var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n        // stream segments into fragmented MP4s\n\n        if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n          var codecs = [];\n\n          if (parsedType.parameters && parsedType.parameters.codecs) {\n            codecs = parsedType.parameters.codecs.split(',');\n            codecs = translateLegacyCodecs(codecs);\n            codecs = codecs.filter(function (codec) {\n              return isAudioCodec(codec) || isVideoCodec(codec);\n            });\n          }\n\n          if (codecs.length === 0) {\n            codecs = ['avc1.4d400d', 'mp4a.40.2'];\n          }\n\n          buffer = new VirtualSourceBuffer(this, codecs);\n\n          if (this.sourceBuffers.length !== 0) {\n            // If another VirtualSourceBuffer already exists, then we are creating a\n            // SourceBuffer for an alternate audio track and therefore we know that\n            // the source has both an audio and video track.\n            // That means we should trigger the manual creation of the real\n            // SourceBuffers instead of waiting for the transmuxer to return data\n            this.sourceBuffers[0].createRealSourceBuffers_();\n            buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n            // a second source buffer is ever created\n\n            this.sourceBuffers[0].audioDisabled_ = true;\n          }\n        } else {\n          // delegate to the native implementation\n          buffer = this.nativeMediaSource_.addSourceBuffer(type);\n        }\n\n        this.sourceBuffers.push(buffer);\n        return buffer;\n      }\n    }]);\n    return HtmlMediaSource;\n  }(videojs$1.EventTarget);\n  /**\n   * @file videojs-contrib-media-sources.js\n   */\n\n\n  var urlCount = 0; // ------------\n  // Media Source\n  // ------------\n  // store references to the media sources so they can be connected\n  // to a video element (a swf object)\n  // TODO: can we store this somewhere local to this module?\n\n  videojs$1.mediaSources = {};\n  /**\n   * Provide a method for a swf object to notify JS that a\n   * media source is now open.\n   *\n   * @param {String} msObjectURL string referencing the MSE Object URL\n   * @param {String} swfId the swf id\n   */\n\n  var open = function open(msObjectURL, swfId) {\n    var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n    if (mediaSource) {\n      mediaSource.trigger({\n        type: 'sourceopen',\n        swfId: swfId\n      });\n    } else {\n      throw new Error('Media Source not found (Video.js)');\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {Boolean} if  native media sources are supported\n   */\n\n\n  var supportsNativeMediaSources = function supportsNativeMediaSources() {\n    return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n  };\n  /**\n   * An emulation of the MediaSource API so that we can support\n   * native and non-native functionality. returns an instance of\n   * HtmlMediaSource.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n   */\n\n\n  var MediaSource = function MediaSource() {\n    this.MediaSource = {\n      open: open,\n      supportsNativeMediaSources: supportsNativeMediaSources\n    };\n\n    if (supportsNativeMediaSources()) {\n      return new HtmlMediaSource();\n    }\n\n    throw new Error('Cannot use create a virtual MediaSource for this video');\n  };\n\n  MediaSource.open = open;\n  MediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n  /**\n   * A wrapper around the native URL for our MSE object\n   * implementation, this object is exposed under videojs.URL\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n   */\n\n  var URL$1 = {\n    /**\n     * A wrapper around the native createObjectURL for our objects.\n     * This function maps a native or emulated mediaSource to a blob\n     * url so that it can be loaded into video.js\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n     * @param {MediaSource} object the object to create a blob url to\n     */\n    createObjectURL: function createObjectURL(object) {\n      var objectUrlPrefix = 'blob:vjs-media-source/';\n      var url = void 0; // use the native MediaSource to generate an object URL\n\n      if (object instanceof HtmlMediaSource) {\n        url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n        object.url_ = url;\n        return url;\n      } // if the object isn't an emulated MediaSource, delegate to the\n      // native implementation\n\n\n      if (!(object instanceof HtmlMediaSource)) {\n        url = window$1.URL.createObjectURL(object);\n        object.url_ = url;\n        return url;\n      } // build a URL that can be used to map back to the emulated\n      // MediaSource\n\n\n      url = objectUrlPrefix + urlCount;\n      urlCount++; // setup the mapping back to object\n\n      videojs$1.mediaSources[url] = object;\n      return url;\n    }\n  };\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n  var EventTarget$1$1 = videojs$1.EventTarget,\n      mergeOptions$2 = videojs$1.mergeOptions;\n  /**\n   * Returns a new master manifest that is the result of merging an updated master manifest\n   * into the original version.\n   *\n   * @param {Object} oldMaster\n   *        The old parsed mpd object\n   * @param {Object} newMaster\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original master manifest with the updated media\n   *         playlists merged in\n   */\n\n  var updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n    var noChanges = void 0;\n    var update = mergeOptions$2(oldMaster, {\n      // These are top level properties that can be updated\n      duration: newMaster.duration,\n      minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n    }); // First update the playlists in playlist list\n\n    for (var i = 0; i < newMaster.playlists.length; i++) {\n      var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n      if (playlistUpdate) {\n        update = playlistUpdate;\n      } else {\n        noChanges = true;\n      }\n    } // Then update media group playlists\n\n\n    forEachMediaGroup(newMaster, function (properties, type, group, label) {\n      if (properties.playlists && properties.playlists.length) {\n        var uri = properties.playlists[0].uri;\n\n        var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n        if (_playlistUpdate) {\n          update = _playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n          noChanges = false;\n        }\n      }\n    });\n\n    if (noChanges) {\n      return null;\n    }\n\n    return update;\n  };\n\n  var DashPlaylistLoader = function (_EventTarget) {\n    inherits$1(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n\n    function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var masterPlaylistLoader = arguments[3];\n      classCallCheck$1(this, DashPlaylistLoader);\n\n      var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n      var _options$withCredenti = options.withCredentials,\n          withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n          _options$handleManife = options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n      _this.hls_ = hls;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or playlist is required');\n      } // event naming?\n\n\n      _this.on('minimumUpdatePeriod', function () {\n        _this.refreshXml_();\n      }); // live playlist staleness timeout\n\n\n      _this.on('mediaupdatetimeout', function () {\n        _this.refreshMedia_();\n      });\n\n      _this.state = 'HAVE_NOTHING';\n      _this.loadedPlaylists_ = {}; // initialize the loader state\n      // The masterPlaylistLoader will be created with a string\n\n      if (typeof srcUrlOrPlaylist === 'string') {\n        _this.srcUrl = srcUrlOrPlaylist;\n        return possibleConstructorReturn$1(_this);\n      }\n\n      _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n      return _this;\n    }\n\n    createClass$1(DashPlaylistLoader, [{\n      key: 'setupChildLoader',\n      value: function setupChildLoader(masterPlaylistLoader, playlist) {\n        this.masterPlaylistLoader_ = masterPlaylistLoader;\n        this.childPlaylist_ = playlist;\n      }\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        this.stopRequest();\n        this.loadedPlaylists_ = {};\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n      }\n    }, {\n      key: 'hasPendingRequest',\n      value: function hasPendingRequest() {\n        return this.request || this.mediaRequest_;\n      }\n    }, {\n      key: 'stopRequest',\n      value: function stopRequest() {\n        if (this.request) {\n          var oldRequest = this.request;\n          this.request = null;\n          oldRequest.onreadystatechange = null;\n          oldRequest.abort();\n        }\n      }\n    }, {\n      key: 'media',\n      value: function media(playlist) {\n        // getter\n        if (!playlist) {\n          return this.media_;\n        } // setter\n\n\n        if (this.state === 'HAVE_NOTHING') {\n          throw new Error('Cannot switch media playlist from ' + this.state);\n        }\n\n        var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n        if (typeof playlist === 'string') {\n          if (!this.master.playlists[playlist]) {\n            throw new Error('Unknown playlist URI: ' + playlist);\n          }\n\n          playlist = this.master.playlists[playlist];\n        }\n\n        var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n        if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n          this.state = 'HAVE_METADATA';\n          this.media_ = playlist; // trigger media change if the active media has been updated\n\n          if (mediaChange) {\n            this.trigger('mediachanging');\n            this.trigger('mediachange');\n          }\n\n          return;\n        } // switching to the active playlist is a no-op\n\n\n        if (!mediaChange) {\n          return;\n        } // switching from an already loaded playlist\n\n\n        if (this.media_) {\n          this.trigger('mediachanging');\n        } // TODO: check for sidx here\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n\n\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0);\n      }\n    }, {\n      key: 'haveMetadata',\n      value: function haveMetadata(_ref) {\n        var startingState = _ref.startingState,\n            playlist = _ref.playlist;\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n        this.loadedPlaylists_[playlist.uri] = playlist;\n        this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n        this.refreshMedia_(); // fire loadedmetadata the first time a media playlist is loaded\n        // to resolve setup of media groups\n\n        if (startingState === 'HAVE_MASTER') {\n          this.trigger('loadedmetadata');\n        } else {\n          // trigger media change if the active media has been updated\n          this.trigger('mediachange');\n        }\n      }\n    }, {\n      key: 'pause',\n      value: function pause() {\n        this.stopRequest();\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n\n        if (this.state === 'HAVE_NOTHING') {\n          // If we pause the loader before any data has been retrieved, its as if we never\n          // started, so reset to an unstarted state.\n          this.started = false;\n        }\n      }\n    }, {\n      key: 'load',\n      value: function load(isFinalRendition) {\n        var _this2 = this;\n\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        var media = this.media();\n\n        if (isFinalRendition) {\n          var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n          this.mediaUpdateTimeout = window$1.setTimeout(function () {\n            return _this2.load();\n          }, delay);\n          return;\n        } // because the playlists are internal to the manifest, load should either load the\n        // main manifest, or do nothing but trigger an event\n\n\n        if (!this.started) {\n          this.start();\n          return;\n        }\n\n        this.trigger('loadedplaylist');\n      }\n      /**\n       * Parses the master xml string and updates playlist uri references\n       *\n       * @return {Object}\n       *         The parsed mpd manifest object\n       */\n\n    }, {\n      key: 'parseMasterXml',\n      value: function parseMasterXml() {\n        var master = parse(this.masterXml_, {\n          manifestUri: this.srcUrl,\n          clientOffset: this.clientOffset_\n        });\n        master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n        // but reference playlists by their URI throughout the project\n        // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n        for (var i = 0; i < master.playlists.length; i++) {\n          var phonyUri = 'placeholder-uri-' + i;\n          master.playlists[i].uri = phonyUri; // set up by URI references\n\n          master.playlists[phonyUri] = master.playlists[i];\n        } // set up phony URIs for the media group playlists since we won't have external\n        // URIs for DASH but reference playlists by their URI throughout the project\n\n\n        forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n          if (properties.playlists && properties.playlists.length) {\n            var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n            properties.playlists[0].uri = _phonyUri; // setup URI references\n\n            master.playlists[_phonyUri] = properties.playlists[0];\n          }\n        });\n        setupMediaPlaylists(master);\n        resolveMediaGroupUris(master);\n        return master;\n      }\n    }, {\n      key: 'start',\n      value: function start() {\n        var _this3 = this;\n\n        this.started = true; // We don't need to request the master manifest again\n        // Call this asynchronously to match the xhr request behavior below\n\n        if (this.masterPlaylistLoader_) {\n          this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n          return;\n        } // request the specified URL\n\n\n        this.request = this.hls_.xhr({\n          uri: this.srcUrl,\n          withCredentials: this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this3.request) {\n            return;\n          } // clear the loader's request reference\n\n\n          _this3.request = null;\n\n          if (error) {\n            _this3.error = {\n              status: req.status,\n              message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n              responseText: req.responseText,\n              // MEDIA_ERR_NETWORK\n              code: 2\n            };\n\n            if (_this3.state === 'HAVE_NOTHING') {\n              _this3.started = false;\n            }\n\n            return _this3.trigger('error');\n          }\n\n          _this3.masterXml_ = req.responseText;\n\n          if (req.responseHeaders && req.responseHeaders.date) {\n            _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n          } else {\n            _this3.masterLoaded_ = Date.now();\n          }\n\n          _this3.srcUrl = resolveManifestRedirect(_this3.handleManifestRedirects, _this3.srcUrl, req);\n\n          _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n        });\n      }\n      /**\n       * Parses the master xml for UTCTiming node to sync the client clock to the server\n       * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n       *\n       * @param {Function} done\n       *        Function to call when clock sync has completed\n       */\n\n    }, {\n      key: 'syncClientServerClock_',\n      value: function syncClientServerClock_(done) {\n        var _this4 = this;\n\n        var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n        // server clock\n\n        if (utcTiming === null) {\n          this.clientOffset_ = this.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        if (utcTiming.method === 'DIRECT') {\n          this.clientOffset_ = utcTiming.value - Date.now();\n          return done();\n        }\n\n        this.request = this.hls_.xhr({\n          uri: resolveUrl$1(this.srcUrl, utcTiming.value),\n          method: utcTiming.method,\n          withCredentials: this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this4.request) {\n            return;\n          }\n\n          if (error) {\n            // sync request failed, fall back to using date header from mpd\n            // TODO: log warning\n            _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n            return done();\n          }\n\n          var serverTime = void 0;\n\n          if (utcTiming.method === 'HEAD') {\n            if (!req.responseHeaders || !req.responseHeaders.date) {\n              // expected date header not preset, fall back to using date header from mpd\n              // TODO: log warning\n              serverTime = _this4.masterLoaded_;\n            } else {\n              serverTime = Date.parse(req.responseHeaders.date);\n            }\n          } else {\n            serverTime = Date.parse(req.responseText);\n          }\n\n          _this4.clientOffset_ = serverTime - Date.now();\n          done();\n        });\n      }\n    }, {\n      key: 'haveMaster_',\n      value: function haveMaster_() {\n        this.state = 'HAVE_MASTER'; // clear media request\n\n        this.mediaRequest_ = null;\n\n        if (!this.masterPlaylistLoader_) {\n          this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n          // trigger this to allow MasterPlaylistController\n          // to make an initial playlist selection\n\n          this.trigger('loadedplaylist');\n        } else if (!this.media_) {\n          // no media playlist was specifically selected so select\n          // the one the child playlist loader was created with\n          this.media(this.childPlaylist_);\n        }\n      }\n      /**\n       * Handler for after client/server clock synchronization has happened. Sets up\n       * xml refresh timer if specificed by the manifest.\n       */\n\n    }, {\n      key: 'onClientServerClockSync_',\n      value: function onClientServerClockSync_() {\n        var _this5 = this;\n\n        this.haveMaster_();\n\n        if (!this.hasPendingRequest() && !this.media_) {\n          this.media(this.master.playlists[0]);\n        } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n        // be refreshed when this is the case. The inter-op guide says that when the\n        // minimumUpdatePeriod is 0, the manifest should outline all currently available\n        // segments, but future segments may require an update. I think a good solution\n        // would be to update the manifest at the same rate that the media playlists\n        // are \"refreshed\", i.e. every targetDuration.\n\n\n        if (this.master && this.master.minimumUpdatePeriod) {\n          window$1.setTimeout(function () {\n            _this5.trigger('minimumUpdatePeriod');\n          }, this.master.minimumUpdatePeriod);\n        }\n      }\n      /**\n       * Sends request to refresh the master xml and updates the parsed master manifest\n       * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n       */\n\n    }, {\n      key: 'refreshXml_',\n      value: function refreshXml_() {\n        var _this6 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n        // sidx is implemented\n\n\n        this.request = this.hls_.xhr({\n          uri: this.srcUrl,\n          withCredentials: this.withCredentials\n        }, function (error, req) {\n          // disposed\n          if (!_this6.request) {\n            return;\n          } // clear the loader's request reference\n\n\n          _this6.request = null;\n\n          if (error) {\n            _this6.error = {\n              status: req.status,\n              message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n              responseText: req.responseText,\n              // MEDIA_ERR_NETWORK\n              code: 2\n            };\n\n            if (_this6.state === 'HAVE_NOTHING') {\n              _this6.started = false;\n            }\n\n            return _this6.trigger('error');\n          }\n\n          _this6.masterXml_ = req.responseText;\n\n          var newMaster = _this6.parseMasterXml();\n\n          var updatedMaster = updateMaster$1(_this6.master, newMaster);\n\n          if (updatedMaster) {\n            _this6.master = updatedMaster;\n          }\n\n          window$1.setTimeout(function () {\n            _this6.trigger('minimumUpdatePeriod');\n          }, _this6.master.minimumUpdatePeriod);\n        });\n      }\n      /**\n       * Refreshes the media playlist by re-parsing the master xml and updating playlist\n       * references. If this is an alternate loader, the updated parsed manifest is retrieved\n       * from the master loader.\n       */\n\n    }, {\n      key: 'refreshMedia_',\n      value: function refreshMedia_() {\n        var _this7 = this;\n\n        var oldMaster = void 0;\n        var newMaster = void 0;\n\n        if (this.masterPlaylistLoader_) {\n          oldMaster = this.masterPlaylistLoader_.master;\n          newMaster = this.masterPlaylistLoader_.parseMasterXml();\n        } else {\n          oldMaster = this.master;\n          newMaster = this.parseMasterXml();\n        }\n\n        var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n        if (updatedMaster) {\n          if (this.masterPlaylistLoader_) {\n            this.masterPlaylistLoader_.master = updatedMaster;\n          } else {\n            this.master = updatedMaster;\n          }\n\n          this.media_ = updatedMaster.playlists[this.media_.uri];\n        } else {\n          this.trigger('playlistunchanged');\n        }\n\n        if (!this.media().endList) {\n          this.mediaUpdateTimeout = window$1.setTimeout(function () {\n            _this7.trigger('mediaupdatetimeout');\n          }, refreshDelay(this.media(), !!updatedMaster));\n        }\n\n        this.trigger('loadedplaylist');\n      }\n    }]);\n    return DashPlaylistLoader;\n  }(EventTarget$1$1);\n\n  var logger = function logger(source) {\n    if (videojs$1.log.debug) {\n      return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n    }\n\n    return function () {};\n  };\n\n  function noop$1() {}\n  /**\n   * @file source-updater.js\n   */\n\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the\n   * SourceBuffer from\n   * @param {String} mimeType the desired MIME type of the underlying\n   * SourceBuffer\n   * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n   * added to the media source\n   */\n\n\n  var SourceUpdater = function () {\n    function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n      classCallCheck$1(this, SourceUpdater);\n      this.callbacks_ = [];\n      this.pendingCallback_ = null;\n      this.timestampOffset_ = 0;\n      this.mediaSource = mediaSource;\n      this.processedAppend_ = false;\n      this.type_ = type;\n      this.mimeType_ = mimeType;\n      this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n      if (mediaSource.readyState === 'closed') {\n        mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n      } else {\n        this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n      }\n    }\n\n    createClass$1(SourceUpdater, [{\n      key: 'createSourceBuffer_',\n      value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n        var _this = this;\n\n        this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n        this.logger_('created SourceBuffer');\n\n        if (sourceBufferEmitter) {\n          sourceBufferEmitter.trigger('sourcebufferadded');\n\n          if (this.mediaSource.sourceBuffers.length < 2) {\n            // There's another source buffer we must wait for before we can start updating\n            // our own (or else we can get into a bad state, i.e., appending video/audio data\n            // before the other video/audio source buffer is available and leading to a video\n            // or audio only buffer).\n            sourceBufferEmitter.on('sourcebufferadded', function () {\n              _this.start_();\n            });\n            return;\n          }\n        }\n\n        this.start_();\n      }\n    }, {\n      key: 'start_',\n      value: function start_() {\n        var _this2 = this;\n\n        this.started_ = true; // run completion handlers and process callbacks as updateend\n        // events fire\n\n        this.onUpdateendCallback_ = function () {\n          var pendingCallback = _this2.pendingCallback_;\n          _this2.pendingCallback_ = null;\n\n          _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n          if (pendingCallback) {\n            pendingCallback();\n          }\n\n          _this2.runCallback_();\n        };\n\n        this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n        this.runCallback_();\n      }\n      /**\n       * Aborts the current segment and resets the segment parser.\n       *\n       * @param {Function} done function to call when done\n       * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n       */\n\n    }, {\n      key: 'abort',\n      value: function abort(done) {\n        var _this3 = this;\n\n        if (this.processedAppend_) {\n          this.queueCallback_(function () {\n            _this3.sourceBuffer_.abort();\n          }, done);\n        }\n      }\n      /**\n       * Queue an update to append an ArrayBuffer.\n       *\n       * @param {ArrayBuffer} bytes\n       * @param {Function} done the function to call when done\n       * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n       */\n\n    }, {\n      key: 'appendBuffer',\n      value: function appendBuffer(config, done) {\n        var _this4 = this;\n\n        this.processedAppend_ = true;\n        this.queueCallback_(function () {\n          if (config.videoSegmentTimingInfoCallback) {\n            _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n          }\n\n          _this4.sourceBuffer_.appendBuffer(config.bytes);\n        }, function () {\n          if (config.videoSegmentTimingInfoCallback) {\n            _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n          }\n\n          done();\n        });\n      }\n      /**\n       * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n       *\n       * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n       */\n\n    }, {\n      key: 'buffered',\n      value: function buffered() {\n        if (!this.sourceBuffer_) {\n          return videojs$1.createTimeRanges();\n        }\n\n        return this.sourceBuffer_.buffered;\n      }\n      /**\n       * Queue an update to remove a time range from the buffer.\n       *\n       * @param {Number} start where to start the removal\n       * @param {Number} end where to end the removal\n       * @param {Function} [done=noop] optional callback to be executed when the remove\n       * operation is complete\n       * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(start, end) {\n        var _this5 = this;\n\n        var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop$1;\n\n        if (this.processedAppend_) {\n          this.queueCallback_(function () {\n            _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n            _this5.sourceBuffer_.remove(start, end);\n          }, done);\n        }\n      }\n      /**\n       * Whether the underlying sourceBuffer is updating or not\n       *\n       * @return {Boolean} the updating status of the SourceBuffer\n       */\n\n    }, {\n      key: 'updating',\n      value: function updating() {\n        // we are updating if the sourcebuffer is updating or\n        return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n        !!this.pendingCallback_ && this.pendingCallback_ !== noop$1;\n      }\n      /**\n       * Set/get the timestampoffset on the SourceBuffer\n       *\n       * @return {Number} the timestamp offset\n       */\n\n    }, {\n      key: 'timestampOffset',\n      value: function timestampOffset(offset) {\n        var _this6 = this;\n\n        if (typeof offset !== 'undefined') {\n          this.queueCallback_(function () {\n            _this6.sourceBuffer_.timestampOffset = offset;\n          });\n          this.timestampOffset_ = offset;\n        }\n\n        return this.timestampOffset_;\n      }\n      /**\n       * Queue a callback to run\n       */\n\n    }, {\n      key: 'queueCallback_',\n      value: function queueCallback_(callback, done) {\n        this.callbacks_.push([callback.bind(this), done]);\n        this.runCallback_();\n      }\n      /**\n       * Run a queued callback\n       */\n\n    }, {\n      key: 'runCallback_',\n      value: function runCallback_() {\n        var callbacks = void 0;\n\n        if (!this.updating() && this.callbacks_.length && this.started_) {\n          callbacks = this.callbacks_.shift();\n          this.pendingCallback_ = callbacks[1];\n          callbacks[0]();\n        }\n      }\n      /**\n       * dispose of the source updater and the underlying sourceBuffer\n       */\n\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n        if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n          this.sourceBuffer_.abort();\n        }\n      }\n    }]);\n    return SourceUpdater;\n  }();\n\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    BUFFER_LOW_WATER_LINE_RATE: 1\n  };\n  var REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n  var byterangeStr = function byterangeStr(byterange) {\n    var byterangeStart = void 0;\n    var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n\n    byterangeEnd = byterange.offset + byterange.length - 1;\n    byterangeStart = byterange.offset;\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n\n  var segmentXhrHeaders = function segmentXhrHeaders(segment) {\n    var headers = {};\n\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n\n    return headers;\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n\n  var abortAll = function abortAll(activeXhrs) {\n    activeXhrs.forEach(function (xhr) {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n\n  var getRequestStats = function getRequestStats(request) {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n\n  var getProgressStats = function getProgressStats(progressEvent) {\n    var request = progressEvent.target;\n    var roundTripTime = Date.now() - request.requestTime;\n    var stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n\n  var handleErrors = function handleErrors(error, request) {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      if (response.byteLength !== 16) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Invalid HLS key at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      var view = new DataView(response);\n      segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n      return finishProcessingFn(null, segment);\n    };\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      } // stop processing if received empty content\n\n\n      if (response.byteLength === 0) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Empty HLS segment content at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      segment.map.timescales = probe.timescale(segment.map.bytes);\n      segment.map.videoTrackIds = probe.videoTrackIds(segment.map.bytes);\n      return finishProcessingFn(null, segment);\n    };\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n      var parsed = void 0;\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      } // stop processing if received empty content\n\n\n      if (response.byteLength === 0) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Empty HLS segment content at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      segment.stats = getRequestStats(request);\n\n      if (segment.key) {\n        segment.encryptedBytes = new Uint8Array(request.response);\n      } else {\n        segment.bytes = new Uint8Array(request.response);\n      } // This is likely an FMP4 and has the init segment.\n      // Run through the CaptionParser in case there are captions.\n\n\n      if (segment.map && segment.map.bytes) {\n        // Initialize CaptionParser if it hasn't been yet\n        if (!captionParser.isInitialized()) {\n          captionParser.init();\n        }\n\n        parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n        if (parsed && parsed.captions) {\n          segment.captionStreams = parsed.captionStreams;\n          segment.fmp4Captions = parsed.captions;\n        }\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n\n  var decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n    var decryptionHandler = function decryptionHandler(event) {\n      if (event.data.source === segment.requestId) {\n        decrypter.removeEventListener('message', decryptionHandler);\n        var decrypted = event.data.decrypted;\n        segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n        return doneFn(null, segment);\n      }\n    };\n\n    decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n    // incrementally decrypt the segment\n\n    decrypter.postMessage(createTransferableMessage({\n      source: segment.requestId,\n      encrypted: segment.encryptedBytes,\n      key: segment.key.bytes,\n      iv: segment.key.iv\n    }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n\n  var waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n    var count = 0;\n    var didError = false;\n    return function (error, segment) {\n      if (didError) {\n        return;\n      }\n\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n\n      count += 1;\n\n      if (count === activeXhrs.length) {\n        // Keep track of when *all* of the requests have completed\n        segment.endOfAllRequests = Date.now();\n\n        if (segment.encryptedBytes) {\n          return decryptSegment(decrypter, segment, doneFn);\n        } // Otherwise, everything is ready just continue\n\n\n        return doneFn(null, segment);\n      }\n    };\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n\n  var handleProgress = function handleProgress(segment, progressFn) {\n    return function (event) {\n      segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n      if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n        segment.stats.firstBytesReceivedAt = Date.now();\n      }\n\n      return progressFn(event, segment);\n    };\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @returns {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n\n  var mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n    var activeXhrs = [];\n    var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n    if (segment.key) {\n      var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n      var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n\n    if (segment.map && !segment.map.bytes) {\n      var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n      var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n\n    var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n    var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n    activeXhrs.push(segmentXhr);\n    return function () {\n      return abortAll(activeXhrs);\n    };\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n\n  var safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n    var result = void 0;\n\n    if (!el) {\n      return '';\n    }\n\n    result = window$1.getComputedStyle(el);\n\n    if (!result) {\n      return '';\n    }\n\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n\n  var stableSort = function stableSort(array, sortFn) {\n    var newArray = array.slice();\n    array.sort(function (left, right) {\n      var cmp = sortFn(left, right);\n\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {Number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n    var leftBandwidth = void 0;\n    var rightBandwidth = void 0;\n\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n\n    leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n\n    rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {Number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n    var leftWidth = void 0;\n    var rightWidth = void 0;\n\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n\n    leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n\n    rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} master\n   *        Object representation of the master manifest\n   * @param {Number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {Number} playerWidth\n   *        Current width of the player element\n   * @param {Number} playerHeight\n   *        Current height of the player element\n   * @param {Boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n    // convert the playlists to an intermediary representation to make comparisons easier\n    var sortedPlaylistReps = master.playlists.map(function (playlist) {\n      var width = void 0;\n      var height = void 0;\n      var bandwidth = void 0;\n      width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n      return {\n        bandwidth: bandwidth,\n        width: width,\n        height: height,\n        playlist: playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, function (left, right) {\n      return left.bandwidth - right.bandwidth;\n    }); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isIncompatible(rep.playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return Playlist.isEnabled(rep.playlist);\n    });\n\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n        return !Playlist.isDisabled(rep.playlist);\n      });\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n\n    var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n      return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n    });\n    var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n      return _chosenRep ? _chosenRep.playlist : null;\n    } // filter out playlists without resolution information\n\n\n    var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.width && rep.height;\n    }); // sort variants by resolution\n\n    stableSort(haveResolution, function (left, right) {\n      return left.width - right.width;\n    }); // if we have the exact resolution as the player use it\n\n    var resolutionBestRepList = haveResolution.filter(function (rep) {\n      return rep.width === playerWidth && rep.height === playerHeight;\n    });\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n    var resolutionPlusOneList = void 0;\n    var resolutionPlusOneSmallest = void 0;\n    var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(function (rep) {\n        return rep.width > playerWidth || rep.height > playerHeight;\n      }); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n        return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n      }); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n        return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n      })[0];\n    } // fallback chain of variants\n\n\n    var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    return chosenRep ? chosenRep.playlist : null;\n  }; // Playlist Selectors\n\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of HlsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var lastBandwidthSelector = function lastBandwidthSelector() {\n    return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.master\n   *        Object representation of the master manifest\n   * @param {Number} settings.currentTime\n   *        The current time of the player\n   * @param {Number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {Number} settings.duration\n   *        Duration of the media\n   * @param {Number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {Number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {Number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n\n  var minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n    var master = settings.master,\n        currentTime = settings.currentTime,\n        bandwidth = settings.bandwidth,\n        duration$$1 = settings.duration,\n        segmentDuration = settings.segmentDuration,\n        timeUntilRebuffer = settings.timeUntilRebuffer,\n        currentTimeline = settings.currentTimeline,\n        syncController = settings.syncController; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    var compatiblePlaylists = master.playlists.filter(function (playlist) {\n      return !Playlist.isIncompatible(playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n        return !Playlist.isDisabled(playlist);\n      });\n    }\n\n    var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n      var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      var numRequests = syncPoint ? 1 : 2;\n      var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist: playlist,\n        rebufferingImpact: rebufferingImpact\n      };\n    });\n    var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n      return estimate.rebufferingImpact <= 0;\n    }); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, function (a, b) {\n      return comparePlaylistBandwidth(b.playlist, a.playlist);\n    });\n\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n\n    stableSort(rebufferingEstimates, function (a, b) {\n      return a.rebufferingImpact - b.rebufferingImpact;\n    });\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of HlsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n\n  var lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n    // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n    var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, function (a, b) {\n      return comparePlaylistBandwidth(a, b);\n    }); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    var playlistsWithVideo = playlists.filter(function (playlist) {\n      return parseCodecs(playlist.attributes.CODECS).videoCodec;\n    });\n    return playlistsWithVideo[0] || null;\n  };\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStreams the caption streams to create\n   * @private\n   */\n\n\n  var createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n    for (var trackId in captionStreams) {\n      if (!inbandTextTracks[trackId]) {\n        tech.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = tech.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          inbandTextTracks[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  };\n\n  var addCaptionData = function addCaptionData(_ref) {\n    var inbandTextTracks = _ref.inbandTextTracks,\n        captionArray = _ref.captionArray,\n        timestampOffset = _ref.timestampOffset;\n\n    if (!captionArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      var startTime = caption.startTime;\n      var endTime = caption.endTime;\n\n      if (!inbandTextTracks[track]) {\n        return;\n      }\n\n      startTime += timestampOffset;\n      endTime += timestampOffset;\n      inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n    });\n  };\n  /**\n   * @file segment-loader.js\n   */\n  // in ms\n\n\n  var CHECK_BUFFER_DELAY = 500;\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {Object} mediaSource the MediaSource object\n   * @param {Number} segmentIndex the index of segment we last appended\n   * @returns {Boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  var detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n    if (!playlist || !mediaSource) {\n      return false;\n    }\n\n    var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n    // to read\n\n    var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n  };\n\n  var finite = function finite(num) {\n    return typeof num === 'number' && isFinite(num);\n  };\n\n  var illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n      return null;\n    }\n\n    if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n\n    if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {Number} currentTime\n   *        The current time of the player\n   * @param {Number} targetDuration\n   *        The target duration of the current playlist\n   * @return {Number}\n   *         Time that is safe to remove from the back buffer without interupting playback\n   */\n\n\n  var safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n    var removeToTime = void 0;\n\n    if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n      // If we have a seekable range use that as the limit for what can be removed safely\n      removeToTime = seekable$$1.start(0);\n    } else {\n      // otherwise remove anything older than 30 seconds before the current play head\n      removeToTime = currentTime - 30;\n    } // Don't allow removing from the buffer within target duration of current time\n    // to avoid the possibility of removing the GOP currently being played which could\n    // cause playback stalls.\n\n\n    return Math.min(removeToTime, currentTime - targetDuration);\n  };\n\n  var segmentInfoString = function segmentInfoString(segmentInfo) {\n    var _segmentInfo$segment = segmentInfo.segment,\n        start = _segmentInfo$segment.start,\n        end = _segmentInfo$segment.end,\n        _segmentInfo$playlist = segmentInfo.playlist,\n        seq = _segmentInfo$playlist.mediaSequence,\n        id = _segmentInfo$playlist.id,\n        _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n        segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n        index = segmentInfo.mediaIndex,\n        timeline = segmentInfo.timeline;\n    return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n\n  var SegmentLoader = function (_videojs$EventTarget) {\n    inherits$1(SegmentLoader, _videojs$EventTarget);\n\n    function SegmentLoader(settings) {\n      classCallCheck$1(this, SegmentLoader); // check pre-conditions\n\n      var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n\n      _this.bandwidth = settings.bandwidth;\n      _this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      _this.roundTrip = NaN;\n\n      _this.resetStats_();\n\n      _this.mediaIndex = null; // private settings\n\n      _this.hasPlayed_ = settings.hasPlayed;\n      _this.currentTime_ = settings.currentTime;\n      _this.seekable_ = settings.seekable;\n      _this.seeking_ = settings.seeking;\n      _this.duration_ = settings.duration;\n      _this.mediaSource_ = settings.mediaSource;\n      _this.hls_ = settings.hls;\n      _this.loaderType_ = settings.loaderType;\n      _this.startingMedia_ = void 0;\n      _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      _this.goalBufferLength_ = settings.goalBufferLength;\n      _this.sourceType_ = settings.sourceType;\n      _this.inbandTextTracks_ = settings.inbandTextTracks;\n      _this.state_ = 'INIT'; // private instance variables\n\n      _this.checkBufferTimeout_ = null;\n      _this.error_ = void 0;\n      _this.currentTimeline_ = -1;\n      _this.pendingSegment_ = null;\n      _this.mimeType_ = null;\n      _this.sourceUpdater_ = null;\n      _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n      _this.activeInitSegmentId_ = null;\n      _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n      _this.captionParser_ = new mp4_6();\n      _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      _this.syncController_ = settings.syncController;\n      _this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n\n      _this.syncController_.on('syncinfoupdate', function () {\n        return _this.trigger('syncinfoupdate');\n      });\n\n      _this.mediaSource_.addEventListener('sourceopen', function () {\n        return _this.ended_ = false;\n      }); // ...for determining the fetch location\n\n\n      _this.fetchAtBuffer_ = false;\n      _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n      Object.defineProperty(_this, 'state', {\n        get: function get$$1() {\n          return this.state_;\n        },\n        set: function set$$1(newState) {\n          if (newState !== this.state_) {\n            this.logger_(this.state_ + ' -> ' + newState);\n            this.state_ = newState;\n          }\n        }\n      });\n      return _this;\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n\n\n    createClass$1(SegmentLoader, [{\n      key: 'resetStats_',\n      value: function resetStats_() {\n        this.mediaBytesTransferred = 0;\n        this.mediaRequests = 0;\n        this.mediaRequestsAborted = 0;\n        this.mediaRequestsTimedout = 0;\n        this.mediaRequestsErrored = 0;\n        this.mediaTransferDuration = 0;\n        this.mediaSecondsLoaded = 0;\n      }\n      /**\n       * dispose of the SegmentLoader and reset to the default state\n       */\n\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        this.state = 'DISPOSED';\n        this.pause();\n        this.abort_();\n\n        if (this.sourceUpdater_) {\n          this.sourceUpdater_.dispose();\n        }\n\n        this.resetStats_();\n        this.captionParser_.reset();\n      }\n      /**\n       * abort anything that is currently doing on with the SegmentLoader\n       * and reset to a default state\n       */\n\n    }, {\n      key: 'abort',\n      value: function abort() {\n        if (this.state !== 'WAITING') {\n          if (this.pendingSegment_) {\n            this.pendingSegment_ = null;\n          }\n\n          return;\n        }\n\n        this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n        // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n        // when the request is aborted. This will prevent the loader from being stuck in the\n        // WAITING state indefinitely.\n\n        this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n        // next segment\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n      }\n      /**\n       * abort all pending xhr requests and null any pending segements\n       *\n       * @private\n       */\n\n    }, {\n      key: 'abort_',\n      value: function abort_() {\n        if (this.pendingSegment_) {\n          this.pendingSegment_.abortRequests();\n        } // clear out the segment being processed\n\n\n        this.pendingSegment_ = null;\n      }\n      /**\n       * set an error on the segment loader and null out any pending segements\n       *\n       * @param {Error} error the error to set on the SegmentLoader\n       * @return {Error} the error that was set or that is currently set\n       */\n\n    }, {\n      key: 'error',\n      value: function error(_error) {\n        if (typeof _error !== 'undefined') {\n          this.error_ = _error;\n        }\n\n        this.pendingSegment_ = null;\n        return this.error_;\n      }\n    }, {\n      key: 'endOfStream',\n      value: function endOfStream() {\n        this.ended_ = true;\n        this.pause();\n        this.trigger('ended');\n      }\n      /**\n       * Indicates which time ranges are buffered\n       *\n       * @return {TimeRange}\n       *         TimeRange object representing the current buffered ranges\n       */\n\n    }, {\n      key: 'buffered_',\n      value: function buffered_() {\n        if (!this.sourceUpdater_) {\n          return videojs$1.createTimeRanges();\n        }\n\n        return this.sourceUpdater_.buffered();\n      }\n      /**\n       * Gets and sets init segment for the provided map\n       *\n       * @param {Object} map\n       *        The map object representing the init segment to get or set\n       * @param {Boolean=} set\n       *        If true, the init segment for the provided map should be saved\n       * @return {Object}\n       *         map object for desired init segment\n       */\n\n    }, {\n      key: 'initSegment',\n      value: function initSegment(map) {\n        var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (!map) {\n          return null;\n        }\n\n        var id = initSegmentId(map);\n        var storedMap = this.initSegments_[id];\n\n        if (set$$1 && !storedMap && map.bytes) {\n          this.initSegments_[id] = storedMap = {\n            resolvedUri: map.resolvedUri,\n            byterange: map.byterange,\n            bytes: map.bytes,\n            timescales: map.timescales,\n            videoTrackIds: map.videoTrackIds\n          };\n        }\n\n        return storedMap || map;\n      }\n      /**\n       * Returns true if all configuration required for loading is present, otherwise false.\n       *\n       * @return {Boolean} True if the all configuration is ready for loading\n       * @private\n       */\n\n    }, {\n      key: 'couldBeginLoading_',\n      value: function couldBeginLoading_() {\n        return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n        // source updater or being in the INIT state with a mimeType is enough\n        // to say we have all the needed configuration to start loading.\n        this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n      }\n      /**\n       * load a playlist and start to fill the buffer\n       */\n\n    }, {\n      key: 'load',\n      value: function load() {\n        // un-pause\n        this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n        // specified\n\n        if (!this.playlist_) {\n          return;\n        } // not sure if this is the best place for this\n\n\n        this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n        if (this.state === 'INIT' && this.couldBeginLoading_()) {\n          return this.init_();\n        } // if we're in the middle of processing a segment already, don't\n        // kick off an additional segment request\n\n\n        if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n          return;\n        }\n\n        this.state = 'READY';\n      }\n      /**\n       * Once all the starting parameters have been specified, begin\n       * operation. This method should only be invoked from the INIT\n       * state.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'init_',\n      value: function init_() {\n        this.state = 'READY';\n        this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n        this.resetEverything();\n        return this.monitorBuffer_();\n      }\n      /**\n       * set a playlist on the segment loader\n       *\n       * @param {PlaylistLoader} media the playlist to set on the segment loader\n       */\n\n    }, {\n      key: 'playlist',\n      value: function playlist(newPlaylist) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!newPlaylist) {\n          return;\n        }\n\n        var oldPlaylist = this.playlist_;\n        var segmentInfo = this.pendingSegment_;\n        this.playlist_ = newPlaylist;\n        this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n        // is always our zero-time so force a sync update each time the playlist\n        // is refreshed from the server\n\n        if (!this.hasPlayed_()) {\n          newPlaylist.syncInfo = {\n            mediaSequence: newPlaylist.mediaSequence,\n            time: 0\n          };\n        }\n\n        var oldId = null;\n\n        if (oldPlaylist) {\n          if (oldPlaylist.id) {\n            oldId = oldPlaylist.id;\n          } else if (oldPlaylist.uri) {\n            oldId = oldPlaylist.uri;\n          }\n        }\n\n        this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n        // in LIVE, we always want to update with new playlists (including refreshes)\n\n        this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n        // buffering now\n\n        if (this.state === 'INIT' && this.couldBeginLoading_()) {\n          return this.init_();\n        }\n\n        if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n          if (this.mediaIndex !== null) {\n            // we must \"resync\" the segment loader when we switch renditions and\n            // the segment loader is already synced to the previous rendition\n            this.resyncLoader();\n          } // the rest of this function depends on `oldPlaylist` being defined\n\n\n          return;\n        } // we reloaded the same playlist so we are in a live scenario\n        // and we will likely need to adjust the mediaIndex\n\n\n        var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n        this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n        // this is important because we can abort a request and this value must be\n        // equal to the last appended mediaIndex\n\n        if (this.mediaIndex !== null) {\n          this.mediaIndex -= mediaSequenceDiff;\n        } // update the mediaIndex on the SegmentInfo object\n        // this is important because we will update this.mediaIndex with this value\n        // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n        if (segmentInfo) {\n          segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n        }\n\n        this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n      }\n      /**\n       * Prevent the loader from fetching additional segments. If there\n       * is a segment request outstanding, it will finish processing\n       * before the loader halts. A segment loader can be unpaused by\n       * calling load().\n       */\n\n    }, {\n      key: 'pause',\n      value: function pause() {\n        if (this.checkBufferTimeout_) {\n          window$1.clearTimeout(this.checkBufferTimeout_);\n          this.checkBufferTimeout_ = null;\n        }\n      }\n      /**\n       * Returns whether the segment loader is fetching additional\n       * segments when given the opportunity. This property can be\n       * modified through calls to pause() and load().\n       */\n\n    }, {\n      key: 'paused',\n      value: function paused() {\n        return this.checkBufferTimeout_ === null;\n      }\n      /**\n       * create/set the following mimetype on the SourceBuffer through a\n       * SourceUpdater\n       *\n       * @param {String} mimeType the mime type string to use\n       * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n       * is added to the media source\n       */\n\n    }, {\n      key: 'mimeType',\n      value: function mimeType(_mimeType, sourceBufferEmitter) {\n        if (this.mimeType_) {\n          return;\n        }\n\n        this.mimeType_ = _mimeType;\n        this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n        // buffering now\n\n        if (this.state === 'INIT' && this.couldBeginLoading_()) {\n          this.init_();\n        }\n      }\n      /**\n       * Delete all the buffered data and reset the SegmentLoader\n       * @param {Function} [done] an optional callback to be executed when the remove\n       * operation is complete\n       */\n\n    }, {\n      key: 'resetEverything',\n      value: function resetEverything(done) {\n        this.ended_ = false;\n        this.resetLoader();\n        this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n        this.captionParser_.clearAllCaptions();\n        this.trigger('reseteverything');\n      }\n      /**\n       * Force the SegmentLoader to resync and start loading around the currentTime instead\n       * of starting at the end of the buffer\n       *\n       * Useful for fast quality changes\n       */\n\n    }, {\n      key: 'resetLoader',\n      value: function resetLoader() {\n        this.fetchAtBuffer_ = false;\n        this.resyncLoader();\n      }\n      /**\n       * Force the SegmentLoader to restart synchronization and make a conservative guess\n       * before returning to the simple walk-forward method\n       */\n\n    }, {\n      key: 'resyncLoader',\n      value: function resyncLoader() {\n        this.mediaIndex = null;\n        this.syncPoint_ = null;\n        this.abort();\n      }\n      /**\n       * Remove any data in the source buffer between start and end times\n       * @param {Number} start - the start time of the region to remove from the buffer\n       * @param {Number} end - the end time of the region to remove from the buffer\n       * @param {Function} [done] - an optional callback to be executed when the remove\n       * operation is complete\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(start, end, done) {\n        if (this.sourceUpdater_) {\n          this.sourceUpdater_.remove(start, end, done);\n        }\n\n        removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n        if (this.inbandTextTracks_) {\n          for (var id in this.inbandTextTracks_) {\n            removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n          }\n        }\n      }\n      /**\n       * (re-)schedule monitorBufferTick_ to run as soon as possible\n       *\n       * @private\n       */\n\n    }, {\n      key: 'monitorBuffer_',\n      value: function monitorBuffer_() {\n        if (this.checkBufferTimeout_) {\n          window$1.clearTimeout(this.checkBufferTimeout_);\n        }\n\n        this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n      }\n      /**\n       * As long as the SegmentLoader is in the READY state, periodically\n       * invoke fillBuffer_().\n       *\n       * @private\n       */\n\n    }, {\n      key: 'monitorBufferTick_',\n      value: function monitorBufferTick_() {\n        if (this.state === 'READY') {\n          this.fillBuffer_();\n        }\n\n        if (this.checkBufferTimeout_) {\n          window$1.clearTimeout(this.checkBufferTimeout_);\n        }\n\n        this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n      }\n      /**\n       * fill the buffer with segements unless the sourceBuffers are\n       * currently updating\n       *\n       * Note: this function should only ever be called by monitorBuffer_\n       * and never directly\n       *\n       * @private\n       */\n\n    }, {\n      key: 'fillBuffer_',\n      value: function fillBuffer_() {\n        if (this.sourceUpdater_.updating()) {\n          return;\n        }\n\n        if (!this.syncPoint_) {\n          this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n        } // see if we need to begin loading immediately\n\n\n        var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n        if (!segmentInfo) {\n          return;\n        }\n\n        if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n          this.endOfStream();\n          return;\n        }\n\n        if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n          return;\n        } // We will need to change timestampOffset of the sourceBuffer if either of\n        // the following conditions are true:\n        // - The segment.timeline !== this.currentTimeline\n        //   (we are crossing a discontinuity somehow)\n        // - The \"timestampOffset\" for the start of this segment is less than\n        //   the currently set timestampOffset\n        // Also, clear captions if we are crossing a discontinuity boundary\n\n\n        if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n          this.syncController_.reset();\n          segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n          this.captionParser_.clearAllCaptions();\n        }\n\n        this.loadSegment_(segmentInfo);\n      }\n      /**\n       * Determines if this segment loader is at the end of it's stream.\n       *\n       * @param {Number} mediaIndex the index of segment we last appended\n       * @param {Object} [playlist=this.playlist_] a media playlist object\n       * @returns {Boolean} true if at end of stream, false otherwise.\n       */\n\n    }, {\n      key: 'isEndOfStream_',\n      value: function isEndOfStream_(mediaIndex) {\n        var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n        return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n      }\n      /**\n       * Determines what segment request should be made, given current playback\n       * state.\n       *\n       * @param {TimeRanges} buffered - the state of the buffer\n       * @param {Object} playlist - the playlist object to fetch segments from\n       * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n       * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n       * @param {Number} currentTime - the playback position in seconds\n       * @param {Object} syncPoint - a segment info object that describes the\n       * @returns {Object} a segment request object that describes the segment to load\n       */\n\n    }, {\n      key: 'checkBuffer_',\n      value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n        var lastBufferedEnd = 0;\n        var startOfSegment = void 0;\n\n        if (buffered.length) {\n          lastBufferedEnd = buffered.end(buffered.length - 1);\n        }\n\n        var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n        if (!playlist.segments.length) {\n          return null;\n        } // if there is plenty of content buffered, and the video has\n        // been played before relax for awhile\n\n\n        if (bufferedTime >= this.goalBufferLength_()) {\n          return null;\n        } // if the video has not yet played once, and we already have\n        // one segment downloaded do nothing\n\n\n        if (!hasPlayed && bufferedTime >= 1) {\n          return null;\n        } // When the syncPoint is null, there is no way of determining a good\n        // conservative segment index to fetch from\n        // The best thing to do here is to get the kind of sync-point data by\n        // making a request\n\n\n        if (syncPoint === null) {\n          mediaIndex = this.getSyncSegmentCandidate_(playlist);\n          return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n        } // Under normal playback conditions fetching is a simple walk forward\n\n\n        if (mediaIndex !== null) {\n          var segment = playlist.segments[mediaIndex];\n\n          if (segment && segment.end) {\n            startOfSegment = segment.end;\n          } else {\n            startOfSegment = lastBufferedEnd;\n          }\n\n          return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n        } // There is a sync-point but the lack of a mediaIndex indicates that\n        // we need to make a good conservative guess about which segment to\n        // fetch\n\n\n        if (this.fetchAtBuffer_) {\n          // Find the segment containing the end of the buffer\n          var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n          mediaIndex = mediaSourceInfo.mediaIndex;\n          startOfSegment = mediaSourceInfo.startTime;\n        } else {\n          // Find the segment containing currentTime\n          var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n          mediaIndex = _mediaSourceInfo.mediaIndex;\n          startOfSegment = _mediaSourceInfo.startTime;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n      }\n      /**\n       * The segment loader has no recourse except to fetch a segment in the\n       * current playlist and use the internal timestamps in that segment to\n       * generate a syncPoint. This function returns a good candidate index\n       * for that process.\n       *\n       * @param {Object} playlist - the playlist object to look for a\n       * @returns {Number} An index of a segment from the playlist to load\n       */\n\n    }, {\n      key: 'getSyncSegmentCandidate_',\n      value: function getSyncSegmentCandidate_(playlist) {\n        var _this2 = this;\n\n        if (this.currentTimeline_ === -1) {\n          return 0;\n        }\n\n        var segmentIndexArray = playlist.segments.map(function (s, i) {\n          return {\n            timeline: s.timeline,\n            segmentIndex: i\n          };\n        }).filter(function (s) {\n          return s.timeline === _this2.currentTimeline_;\n        });\n\n        if (segmentIndexArray.length) {\n          return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n        }\n\n        return Math.max(playlist.segments.length - 1, 0);\n      }\n    }, {\n      key: 'generateSegmentInfo_',\n      value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n        if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n          return null;\n        }\n\n        var segment = playlist.segments[mediaIndex];\n        return {\n          requestId: 'segment-loader-' + Math.random(),\n          // resolve the segment URL relative to the playlist\n          uri: segment.resolvedUri,\n          // the segment's mediaIndex at the time it was requested\n          mediaIndex: mediaIndex,\n          // whether or not to update the SegmentLoader's state with this\n          // segment's mediaIndex\n          isSyncRequest: isSyncRequest,\n          startOfSegment: startOfSegment,\n          // the segment's playlist\n          playlist: playlist,\n          // unencrypted bytes of the segment\n          bytes: null,\n          // when a key is defined for this segment, the encrypted bytes\n          encryptedBytes: null,\n          // The target timestampOffset for this segment when we append it\n          // to the source buffer\n          timestampOffset: null,\n          // The timeline that the segment is in\n          timeline: segment.timeline,\n          // The expected duration of the segment in seconds\n          duration: segment.duration,\n          // retain the segment in case the playlist updates while doing an async process\n          segment: segment\n        };\n      }\n      /**\n       * Determines if the network has enough bandwidth to complete the current segment\n       * request in a timely manner. If not, the request will be aborted early and bandwidth\n       * updated to trigger a playlist switch.\n       *\n       * @param {Object} stats\n       *        Object containing stats about the request timing and size\n       * @return {Boolean} True if the request was aborted, false otherwise\n       * @private\n       */\n\n    }, {\n      key: 'abortRequestEarly_',\n      value: function abortRequestEarly_(stats) {\n        if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n        // TODO: Replace using timeout with a boolean indicating whether this playlist is\n        //       the lowestEnabledRendition.\n        !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n        !this.playlist_.attributes.BANDWIDTH) {\n          return false;\n        } // Wait at least 1 second since the first byte of data has been received before\n        // using the calculated bandwidth from the progress event to allow the bitrate\n        // to stabilize\n\n\n        if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n          return false;\n        }\n\n        var currentTime = this.currentTime_();\n        var measuredBandwidth = stats.bandwidth;\n        var segmentDuration = this.pendingSegment_.duration;\n        var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n        // if we are only left with less than 1 second when the request completes.\n        // A negative timeUntilRebuffering indicates we are already rebuffering\n\n        var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n        // is larger than the estimated time until the player runs out of forward buffer\n\n        if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n          return false;\n        }\n\n        var switchCandidate = minRebufferMaxBandwidthSelector({\n          master: this.hls_.playlists.master,\n          currentTime: currentTime,\n          bandwidth: measuredBandwidth,\n          duration: this.duration_(),\n          segmentDuration: segmentDuration,\n          timeUntilRebuffer: timeUntilRebuffer$$1,\n          currentTimeline: this.currentTimeline_,\n          syncController: this.syncController_\n        });\n\n        if (!switchCandidate) {\n          return;\n        }\n\n        var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n        var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n        var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n        // potential round trip time of the new request so that we are not too aggressive\n        // with switching to a playlist that might save us a fraction of a second.\n\n        if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n          minimumTimeSaving = 1;\n        }\n\n        if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n          return false;\n        } // set the bandwidth to that of the desired playlist being sure to scale by\n        // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n        // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n        this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n        this.abort();\n        this.trigger('earlyabort');\n        return true;\n      }\n      /**\n       * XHR `progress` event handler\n       *\n       * @param {Event}\n       *        The XHR `progress` event\n       * @param {Object} simpleSegment\n       *        A simplified segment object copy\n       * @private\n       */\n\n    }, {\n      key: 'handleProgress_',\n      value: function handleProgress_(event, simpleSegment) {\n        if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n          return;\n        }\n\n        this.trigger('progress');\n      }\n      /**\n       * load a specific segment from a request into the buffer\n       *\n       * @private\n       */\n\n    }, {\n      key: 'loadSegment_',\n      value: function loadSegment_(segmentInfo) {\n        this.state = 'WAITING';\n        this.pendingSegment_ = segmentInfo;\n        this.trimBackBuffer_(segmentInfo);\n        segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n        this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n      }\n      /**\n       * trim the back buffer so that we don't have too much data\n       * in the source buffer\n       *\n       * @private\n       *\n       * @param {Object} segmentInfo - the current segment\n       */\n\n    }, {\n      key: 'trimBackBuffer_',\n      value: function trimBackBuffer_(segmentInfo) {\n        var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n        // buffer and a very conservative \"garbage collector\"\n        // We manually clear out the old buffer to ensure\n        // we don't trigger the QuotaExceeded error\n        // on the source buffer during subsequent appends\n\n        if (removeToTime > 0) {\n          this.remove(0, removeToTime);\n        }\n      }\n      /**\n       * created a simplified copy of the segment object with just the\n       * information necessary to perform the XHR and decryption\n       *\n       * @private\n       *\n       * @param {Object} segmentInfo - the current segment\n       * @returns {Object} a simplified segment object copy\n       */\n\n    }, {\n      key: 'createSimplifiedSegmentObj_',\n      value: function createSimplifiedSegmentObj_(segmentInfo) {\n        var segment = segmentInfo.segment;\n        var simpleSegment = {\n          resolvedUri: segment.resolvedUri,\n          byterange: segment.byterange,\n          requestId: segmentInfo.requestId\n        };\n\n        if (segment.key) {\n          // if the media sequence is greater than 2^32, the IV will be incorrect\n          // assuming 10s segments, that would be about 1300 years\n          var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n          simpleSegment.key = {\n            resolvedUri: segment.key.resolvedUri,\n            iv: iv\n          };\n        }\n\n        if (segment.map) {\n          simpleSegment.map = this.initSegment(segment.map);\n        }\n\n        return simpleSegment;\n      }\n      /**\n       * Handle the callback from the segmentRequest function and set the\n       * associated SegmentLoader state and errors if necessary\n       *\n       * @private\n       */\n\n    }, {\n      key: 'segmentRequestFinished_',\n      value: function segmentRequestFinished_(error, simpleSegment) {\n        // every request counts as a media request even if it has been aborted\n        // or canceled due to a timeout\n        this.mediaRequests += 1;\n\n        if (simpleSegment.stats) {\n          this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n          this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n        } // The request was aborted and the SegmentLoader has already been reset\n\n\n        if (!this.pendingSegment_) {\n          this.mediaRequestsAborted += 1;\n          return;\n        } // the request was aborted and the SegmentLoader has already started\n        // another request. this can happen when the timeout for an aborted\n        // request triggers due to a limitation in the XHR library\n        // do not count this as any sort of request or we risk double-counting\n\n\n        if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n          return;\n        } // an error occurred from the active pendingSegment_ so reset everything\n\n\n        if (error) {\n          this.pendingSegment_ = null;\n          this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n          // this is not a true error condition and nothing corrective needs\n          // to be done\n\n          if (error.code === REQUEST_ERRORS.ABORTED) {\n            this.mediaRequestsAborted += 1;\n            return;\n          }\n\n          this.pause(); // the error is really just that at least one of the requests timed-out\n          // set the bandwidth to a very low value and trigger an ABR switch to\n          // take emergency action\n\n          if (error.code === REQUEST_ERRORS.TIMEOUT) {\n            this.mediaRequestsTimedout += 1;\n            this.bandwidth = 1;\n            this.roundTrip = NaN;\n            this.trigger('bandwidthupdate');\n            return;\n          } // if control-flow has arrived here, then the error is real\n          // emit an error event to blacklist the current playlist\n\n\n          this.mediaRequestsErrored += 1;\n          this.error(error);\n          this.trigger('error');\n          return;\n        } // the response was a success so set any bandwidth stats the request\n        // generated for ABR purposes\n\n\n        this.bandwidth = simpleSegment.stats.bandwidth;\n        this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n        // to the initSegment cache\n\n        if (simpleSegment.map) {\n          simpleSegment.map = this.initSegment(simpleSegment.map, true);\n        }\n\n        this.processSegmentResponse_(simpleSegment);\n      }\n      /**\n       * Move any important data from the simplified segment object\n       * back to the real segment object for future phases\n       *\n       * @private\n       */\n\n    }, {\n      key: 'processSegmentResponse_',\n      value: function processSegmentResponse_(simpleSegment) {\n        var segmentInfo = this.pendingSegment_;\n        segmentInfo.bytes = simpleSegment.bytes;\n\n        if (simpleSegment.map) {\n          segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n        }\n\n        segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n        if (simpleSegment.fmp4Captions) {\n          createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n          addCaptionData({\n            inbandTextTracks: this.inbandTextTracks_,\n            captionArray: simpleSegment.fmp4Captions,\n            // fmp4s will not have a timestamp offset\n            timestampOffset: 0\n          }); // Reset stored captions since we added parsed\n          // captions to a text track at this point\n\n          this.captionParser_.clearParsedCaptions();\n        }\n\n        this.handleSegment_();\n      }\n      /**\n       * append a decrypted segement to the SourceBuffer through a SourceUpdater\n       *\n       * @private\n       */\n\n    }, {\n      key: 'handleSegment_',\n      value: function handleSegment_() {\n        var _this3 = this;\n\n        if (!this.pendingSegment_) {\n          this.state = 'READY';\n          return;\n        }\n\n        var segmentInfo = this.pendingSegment_;\n        var segment = segmentInfo.segment;\n        var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n        // dealing with. Although we're maintaining extra state, it helps to preserve the\n        // separation of segment loader from the actual source buffers.\n\n        if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n        // certain that all streams will provide it.\n        timingInfo.containsAudio || timingInfo.containsVideo)) {\n          this.startingMedia_ = {\n            containsAudio: timingInfo.containsAudio,\n            containsVideo: timingInfo.containsVideo\n          };\n        }\n\n        var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n        if (illegalMediaSwitchError) {\n          this.error({\n            message: illegalMediaSwitchError,\n            blacklistDuration: Infinity\n          });\n          this.trigger('error');\n          return;\n        }\n\n        if (segmentInfo.isSyncRequest) {\n          this.trigger('syncinfoupdate');\n          this.pendingSegment_ = null;\n          this.state = 'READY';\n          return;\n        }\n\n        if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n          this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n          this.trigger('timestampoffset');\n        }\n\n        var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n        if (timelineMapping !== null) {\n          this.trigger({\n            type: 'segmenttimemapping',\n            mapping: timelineMapping\n          });\n        }\n\n        this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n        // before the content segment\n\n        if (segment.map) {\n          var initId = initSegmentId(segment.map);\n\n          if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n            var initSegment = this.initSegment(segment.map);\n            this.sourceUpdater_.appendBuffer({\n              bytes: initSegment.bytes\n            }, function () {\n              _this3.activeInitSegmentId_ = initId;\n            });\n          }\n        }\n\n        segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n        if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n          this.mediaSecondsLoaded += segment.end - segment.start;\n        } else {\n          this.mediaSecondsLoaded += segment.duration;\n        }\n\n        this.logger_(segmentInfoString(segmentInfo));\n        this.sourceUpdater_.appendBuffer({\n          bytes: segmentInfo.bytes,\n          videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n        }, this.handleUpdateEnd_.bind(this));\n      }\n    }, {\n      key: 'handleVideoSegmentTimingInfo_',\n      value: function handleVideoSegmentTimingInfo_(requestId, event) {\n        if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n          return;\n        }\n\n        var segment = this.pendingSegment_.segment;\n\n        if (!segment.videoTimingInfo) {\n          segment.videoTimingInfo = {};\n        }\n\n        segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n        segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n        segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n        segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n      }\n      /**\n       * callback to run when appendBuffer is finished. detects if we are\n       * in a good state to do things with the data we got, or if we need\n       * to wait for more\n       *\n       * @private\n       */\n\n    }, {\n      key: 'handleUpdateEnd_',\n      value: function handleUpdateEnd_() {\n        if (!this.pendingSegment_) {\n          this.state = 'READY';\n\n          if (!this.paused()) {\n            this.monitorBuffer_();\n          }\n\n          return;\n        }\n\n        var segmentInfo = this.pendingSegment_;\n        var segment = segmentInfo.segment;\n        var isWalkingForward = this.mediaIndex !== null;\n        this.pendingSegment_ = null;\n        this.recordThroughput_(segmentInfo);\n        this.addSegmentMetadataCue_(segmentInfo);\n        this.state = 'READY';\n        this.mediaIndex = segmentInfo.mediaIndex;\n        this.fetchAtBuffer_ = true;\n        this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n        // the following conditional otherwise it may consider this a bad \"guess\"\n        // and attempt to resync when the post-update seekable window and live\n        // point would mean that this was the perfect segment to fetch\n\n        this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n        // the currentTime_ that means that our conservative guess was too conservative.\n        // In that case, reset the loader state so that we try to use any information gained\n        // from the previous request to create a new, more accurate, sync-point.\n\n        if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n          this.resetEverything();\n          return;\n        } // Don't do a rendition switch unless we have enough time to get a sync segment\n        // and conservatively guess\n\n\n        if (isWalkingForward) {\n          this.trigger('bandwidthupdate');\n        }\n\n        this.trigger('progress'); // any time an update finishes and the last segment is in the\n        // buffer, end the stream. this ensures the \"ended\" event will\n        // fire if playback reaches that point.\n\n        if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n          this.endOfStream();\n        }\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n      }\n      /**\n       * Records the current throughput of the decrypt, transmux, and append\n       * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n       * moving average of the throughput. `throughput.count` is the number of\n       * data points in the average.\n       *\n       * @private\n       * @param {Object} segmentInfo the object returned by loadSegment\n       */\n\n    }, {\n      key: 'recordThroughput_',\n      value: function recordThroughput_(segmentInfo) {\n        var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n        // by zero in the case where the throughput is ridiculously high\n\n        var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n        var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n        //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n        this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n      }\n      /**\n       * Adds a cue to the segment-metadata track with some metadata information about the\n       * segment\n       *\n       * @private\n       * @param {Object} segmentInfo\n       *        the object returned by loadSegment\n       * @method addSegmentMetadataCue_\n       */\n\n    }, {\n      key: 'addSegmentMetadataCue_',\n      value: function addSegmentMetadataCue_(segmentInfo) {\n        if (!this.segmentMetadataTrack_) {\n          return;\n        }\n\n        var segment = segmentInfo.segment;\n        var start = segment.start;\n        var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n        if (!finite(start) || !finite(end)) {\n          return;\n        }\n\n        removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n        var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n        var value = {\n          custom: segment.custom,\n          dateTimeObject: segment.dateTimeObject,\n          dateTimeString: segment.dateTimeString,\n          bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n          resolution: segmentInfo.playlist.attributes.RESOLUTION,\n          codecs: segmentInfo.playlist.attributes.CODECS,\n          byteLength: segmentInfo.byteLength,\n          uri: segmentInfo.uri,\n          timeline: segmentInfo.timeline,\n          playlist: segmentInfo.playlist.uri,\n          start: start,\n          end: end\n        };\n        var data = JSON.stringify(value);\n        var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n        // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n        cue.value = value;\n        this.segmentMetadataTrack_.addCue(cue);\n      }\n    }]);\n    return SegmentLoader;\n  }(videojs$1.EventTarget);\n\n  var uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  };\n  /**\n   * @file vtt-segment-loader.js\n   */\n\n\n  var VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n    return char.charCodeAt(0);\n  }));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  var VTTSegmentLoader = function (_SegmentLoader) {\n    inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n    function VTTSegmentLoader(settings) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      classCallCheck$1(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n      _this.mediaSource_ = null;\n      _this.subtitlesTrack_ = null;\n      return _this;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n\n    createClass$1(VTTSegmentLoader, [{\n      key: 'buffered_',\n      value: function buffered_() {\n        if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n          return videojs$1.createTimeRanges();\n        }\n\n        var cues = this.subtitlesTrack_.cues;\n        var start = cues[0].startTime;\n        var end = cues[cues.length - 1].startTime;\n        return videojs$1.createTimeRanges([[start, end]]);\n      }\n      /**\n       * Gets and sets init segment for the provided map\n       *\n       * @param {Object} map\n       *        The map object representing the init segment to get or set\n       * @param {Boolean=} set\n       *        If true, the init segment for the provided map should be saved\n       * @return {Object}\n       *         map object for desired init segment\n       */\n\n    }, {\n      key: 'initSegment',\n      value: function initSegment(map) {\n        var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (!map) {\n          return null;\n        }\n\n        var id = initSegmentId(map);\n        var storedMap = this.initSegments_[id];\n\n        if (set$$1 && !storedMap && map.bytes) {\n          // append WebVTT line terminators to the media initialization segment if it exists\n          // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n          // requires two or more WebVTT line terminators between the WebVTT header and the\n          // rest of the file\n          var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n          var combinedSegment = new Uint8Array(combinedByteLength);\n          combinedSegment.set(map.bytes);\n          combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n          this.initSegments_[id] = storedMap = {\n            resolvedUri: map.resolvedUri,\n            byterange: map.byterange,\n            bytes: combinedSegment\n          };\n        }\n\n        return storedMap || map;\n      }\n      /**\n       * Returns true if all configuration required for loading is present, otherwise false.\n       *\n       * @return {Boolean} True if the all configuration is ready for loading\n       * @private\n       */\n\n    }, {\n      key: 'couldBeginLoading_',\n      value: function couldBeginLoading_() {\n        return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n      }\n      /**\n       * Once all the starting parameters have been specified, begin\n       * operation. This method should only be invoked from the INIT\n       * state.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'init_',\n      value: function init_() {\n        this.state = 'READY';\n        this.resetEverything();\n        return this.monitorBuffer_();\n      }\n      /**\n       * Set a subtitle track on the segment loader to add subtitles to\n       *\n       * @param {TextTrack=} track\n       *        The text track to add loaded subtitles to\n       * @return {TextTrack}\n       *        Returns the subtitles track\n       */\n\n    }, {\n      key: 'track',\n      value: function track(_track) {\n        if (typeof _track === 'undefined') {\n          return this.subtitlesTrack_;\n        }\n\n        this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n        // buffering now\n\n        if (this.state === 'INIT' && this.couldBeginLoading_()) {\n          this.init_();\n        }\n\n        return this.subtitlesTrack_;\n      }\n      /**\n       * Remove any data in the source buffer between start and end times\n       * @param {Number} start - the start time of the region to remove from the buffer\n       * @param {Number} end - the end time of the region to remove from the buffer\n       */\n\n    }, {\n      key: 'remove',\n      value: function remove(start, end) {\n        removeCuesFromTrack(start, end, this.subtitlesTrack_);\n      }\n      /**\n       * fill the buffer with segements unless the sourceBuffers are\n       * currently updating\n       *\n       * Note: this function should only ever be called by monitorBuffer_\n       * and never directly\n       *\n       * @private\n       */\n\n    }, {\n      key: 'fillBuffer_',\n      value: function fillBuffer_() {\n        var _this2 = this;\n\n        if (!this.syncPoint_) {\n          this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n        } // see if we need to begin loading immediately\n\n\n        var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n        segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n        if (!segmentInfo) {\n          return;\n        }\n\n        if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n          // We don't have the timestamp offset that we need to sync subtitles.\n          // Rerun on a timestamp offset or user interaction.\n          var checkTimestampOffset = function checkTimestampOffset() {\n            _this2.state = 'READY';\n\n            if (!_this2.paused()) {\n              // if not paused, queue a buffer check as soon as possible\n              _this2.monitorBuffer_();\n            }\n          };\n\n          this.syncController_.one('timestampoffset', checkTimestampOffset);\n          this.state = 'WAITING_ON_TIMELINE';\n          return;\n        }\n\n        this.loadSegment_(segmentInfo);\n      }\n      /**\n       * Prevents the segment loader from requesting segments we know contain no subtitles\n       * by walking forward until we find the next segment that we don't know whether it is\n       * empty or not.\n       *\n       * @param {Object} segmentInfo\n       *        a segment info object that describes the current segment\n       * @return {Object}\n       *         a segment info object that describes the current segment\n       */\n\n    }, {\n      key: 'skipEmptySegments_',\n      value: function skipEmptySegments_(segmentInfo) {\n        while (segmentInfo && segmentInfo.segment.empty) {\n          segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n        }\n\n        return segmentInfo;\n      }\n      /**\n       * append a decrypted segement to the SourceBuffer through a SourceUpdater\n       *\n       * @private\n       */\n\n    }, {\n      key: 'handleSegment_',\n      value: function handleSegment_() {\n        var _this3 = this;\n\n        if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n          this.state = 'READY';\n          return;\n        }\n\n        this.state = 'APPENDING';\n        var segmentInfo = this.pendingSegment_;\n        var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n        if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n          var loadHandler = function loadHandler() {\n            _this3.handleSegment_();\n          };\n\n          this.state = 'WAITING_ON_VTTJS';\n          this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n          this.subtitlesTrack_.tech_.one('vttjserror', function () {\n            _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n            _this3.error({\n              message: 'Error loading vtt.js'\n            });\n\n            _this3.state = 'READY';\n\n            _this3.pause();\n\n            _this3.trigger('error');\n          });\n          return;\n        }\n\n        segment.requested = true;\n\n        try {\n          this.parseVTTCues_(segmentInfo);\n        } catch (e) {\n          this.error({\n            message: e.message\n          });\n          this.state = 'READY';\n          this.pause();\n          return this.trigger('error');\n        }\n\n        this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n        if (segmentInfo.isSyncRequest) {\n          this.trigger('syncinfoupdate');\n          this.pendingSegment_ = null;\n          this.state = 'READY';\n          return;\n        }\n\n        segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n        this.mediaSecondsLoaded += segment.duration;\n\n        if (segmentInfo.cues.length) {\n          // remove any overlapping cues to prevent doubling\n          this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n        }\n\n        segmentInfo.cues.forEach(function (cue) {\n          _this3.subtitlesTrack_.addCue(cue);\n        });\n        this.handleUpdateEnd_();\n      }\n      /**\n       * Uses the WebVTT parser to parse the segment response\n       *\n       * @param {Object} segmentInfo\n       *        a segment info object that describes the current segment\n       * @private\n       */\n\n    }, {\n      key: 'parseVTTCues_',\n      value: function parseVTTCues_(segmentInfo) {\n        var decoder = void 0;\n        var decodeBytesToString = false;\n\n        if (typeof window$1.TextDecoder === 'function') {\n          decoder = new window$1.TextDecoder('utf8');\n        } else {\n          decoder = window$1.WebVTT.StringDecoder();\n          decodeBytesToString = true;\n        }\n\n        var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n        segmentInfo.cues = [];\n        segmentInfo.timestampmap = {\n          MPEGTS: 0,\n          LOCAL: 0\n        };\n        parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n        parser.ontimestampmap = function (map) {\n          return segmentInfo.timestampmap = map;\n        };\n\n        parser.onparsingerror = function (error) {\n          videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n        };\n\n        if (segmentInfo.segment.map) {\n          var mapData = segmentInfo.segment.map.bytes;\n\n          if (decodeBytesToString) {\n            mapData = uint8ToUtf8(mapData);\n          }\n\n          parser.parse(mapData);\n        }\n\n        var segmentData = segmentInfo.bytes;\n\n        if (decodeBytesToString) {\n          segmentData = uint8ToUtf8(segmentData);\n        }\n\n        parser.parse(segmentData);\n        parser.flush();\n      }\n      /**\n       * Updates the start and end times of any cues parsed by the WebVTT parser using\n       * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n       * from the SyncController\n       *\n       * @param {Object} segmentInfo\n       *        a segment info object that describes the current segment\n       * @param {Object} mappingObj\n       *        object containing a mapping from TS to media time\n       * @param {Object} playlist\n       *        the playlist object containing the segment\n       * @private\n       */\n\n    }, {\n      key: 'updateTimeMapping_',\n      value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n        var segment = segmentInfo.segment;\n\n        if (!mappingObj) {\n          // If the sync controller does not have a mapping of TS to Media Time for the\n          // timeline, then we don't have enough information to update the cue\n          // start/end times\n          return;\n        }\n\n        if (!segmentInfo.cues.length) {\n          // If there are no cues, we also do not have enough information to figure out\n          // segment timing. Mark that the segment contains no cues so we don't re-request\n          // an empty segment.\n          segment.empty = true;\n          return;\n        }\n\n        var timestampmap = segmentInfo.timestampmap;\n        var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n        segmentInfo.cues.forEach(function (cue) {\n          // First convert cue time to TS time using the timestamp-map provided within the vtt\n          cue.startTime += diff;\n          cue.endTime += diff;\n        });\n\n        if (!playlist.syncInfo) {\n          var firstStart = segmentInfo.cues[0].startTime;\n          var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n          playlist.syncInfo = {\n            mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: Math.min(firstStart, lastStart - segment.duration)\n          };\n        }\n      }\n    }]);\n    return VTTSegmentLoader;\n  }(SegmentLoader);\n  /**\n   * @file ad-cue-tags.js\n   */\n\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   */\n\n\n  var findAdCue = function findAdCue(track, mediaTime) {\n    var cues = track.cues;\n\n    for (var i = 0; i < cues.length; i++) {\n      var cue = cues[i];\n\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n\n    return null;\n  };\n\n  var updateAdCues = function updateAdCues(media, track) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    if (!media.segments) {\n      return;\n    }\n\n    var mediaTime = offset;\n    var cue = void 0;\n\n    for (var i = 0; i < media.segments.length; i++) {\n      var segment = media.segments[i];\n\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          var adOffset = void 0;\n          var adTotal = void 0; // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n\n          var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n          var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n          adOffset = _segment$cueOutCont$s2[0];\n          adTotal = _segment$cueOutCont$s2[1];\n          cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n\n      mediaTime += segment.duration;\n    }\n  };\n  /**\n   * @file sync-controller.js\n   */\n\n\n  var tsprobe = tsInspector.inspect;\n  var syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n      if (duration$$1 !== Infinity) {\n        var syncPoint = {\n          time: 0,\n          segmentIndex: 0\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n      if (!syncController.datetimeToDisplayTime) {\n        return null;\n      }\n\n      var segments = playlist.segments || [];\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n\n        if (segment.dateTimeObject) {\n          var segmentTime = segment.dateTimeObject.getTime() / 1000;\n          var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n          var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          lastDistance = distance;\n          syncPoint = {\n            time: segmentStart,\n            segmentIndex: i\n          };\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n      var segments = playlist.segments || [];\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n\n        if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n          var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: segment.start,\n              segmentIndex: i\n            };\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoint = null;\n      currentTime = currentTime || 0;\n\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        var lastDistance = null;\n\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var discontinuitySync = syncController.discontinuities[discontinuity];\n\n          if (discontinuitySync) {\n            var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex: segmentIndex\n              };\n            }\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n      if (playlist.syncInfo) {\n        var syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }];\n\n  var SyncController = function (_videojs$EventTarget) {\n    inherits$1(SyncController, _videojs$EventTarget);\n\n    function SyncController() {\n      classCallCheck$1(this, SyncController); // Segment Loader state variables...\n      // ...for synching across variants\n\n      var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n      _this.inspectCache_ = undefined; // ...for synching across variants\n\n      _this.timelines = [];\n      _this.discontinuities = [];\n      _this.datetimeToDisplayTime = null;\n      _this.logger_ = logger('SyncController');\n      return _this;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Object}\n     *          A sync-point object\n     */\n\n\n    createClass$1(SyncController, [{\n      key: 'getSyncPoint',\n      value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n        var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n        if (!syncPoints.length) {\n          // Signal that we need to attempt to get a sync-point manually\n          // by fetching a segment in the playlist and constructing\n          // a sync-point from that information\n          return null;\n        } // Now find the sync-point that is closest to the currentTime because\n        // that should result in the most accurate guess about which segment\n        // to fetch\n\n\n        return this.selectSyncPoint_(syncPoints, {\n          key: 'time',\n          value: currentTime\n        });\n      }\n      /**\n       * Calculate the amount of time that has expired off the playlist during playback\n       *\n       * @param {Playlist} playlist\n       *        Playlist object to calculate expired from\n       * @param {Number} duration\n       *        Duration of the MediaSource (Infinity if playling a live source)\n       * @returns {Number|null}\n       *          The amount of time that has expired off the playlist during playback. Null\n       *          if no sync-points for the playlist can be found.\n       */\n\n    }, {\n      key: 'getExpiredTime',\n      value: function getExpiredTime(playlist, duration$$1) {\n        if (!playlist || !playlist.segments) {\n          return null;\n        }\n\n        var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n        if (!syncPoints.length) {\n          return null;\n        }\n\n        var syncPoint = this.selectSyncPoint_(syncPoints, {\n          key: 'segmentIndex',\n          value: 0\n        }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n        // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n        if (syncPoint.segmentIndex > 0) {\n          syncPoint.time *= -1;\n        }\n\n        return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n      }\n      /**\n       * Runs each sync-point strategy and returns a list of sync-points returned by the\n       * strategies\n       *\n       * @private\n       * @param {Playlist} playlist\n       *        The playlist that needs a sync-point\n       * @param {Number} duration\n       *        Duration of the MediaSource (Infinity if playing a live source)\n       * @param {Number} currentTimeline\n       *        The last timeline from which a segment was loaded\n       * @returns {Array}\n       *          A list of sync-point objects\n       */\n\n    }, {\n      key: 'runStrategies_',\n      value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n        var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n        for (var i = 0; i < syncPointStrategies.length; i++) {\n          var strategy = syncPointStrategies[i];\n          var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n          if (syncPoint) {\n            syncPoint.strategy = strategy.name;\n            syncPoints.push({\n              strategy: strategy.name,\n              syncPoint: syncPoint\n            });\n          }\n        }\n\n        return syncPoints;\n      }\n      /**\n       * Selects the sync-point nearest the specified target\n       *\n       * @private\n       * @param {Array} syncPoints\n       *        List of sync-points to select from\n       * @param {Object} target\n       *        Object specifying the property and value we are targeting\n       * @param {String} target.key\n       *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n       * @param {Number} target.value\n       *        The value to target for the specified key.\n       * @returns {Object}\n       *          The sync-point nearest the target\n       */\n\n    }, {\n      key: 'selectSyncPoint_',\n      value: function selectSyncPoint_(syncPoints, target) {\n        var bestSyncPoint = syncPoints[0].syncPoint;\n        var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n        var bestStrategy = syncPoints[0].strategy;\n\n        for (var i = 1; i < syncPoints.length; i++) {\n          var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n          if (newDistance < bestDistance) {\n            bestDistance = newDistance;\n            bestSyncPoint = syncPoints[i].syncPoint;\n            bestStrategy = syncPoints[i].strategy;\n          }\n        }\n\n        this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n        return bestSyncPoint;\n      }\n      /**\n       * Save any meta-data present on the segments when segments leave\n       * the live window to the playlist to allow for synchronization at the\n       * playlist level later.\n       *\n       * @param {Playlist} oldPlaylist - The previous active playlist\n       * @param {Playlist} newPlaylist - The updated and most current playlist\n       */\n\n    }, {\n      key: 'saveExpiredSegmentInfo',\n      value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n        var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n        // save that information as a possible sync-point reference in future\n\n        for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n          var lastRemovedSegment = oldPlaylist.segments[i];\n\n          if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n            newPlaylist.syncInfo = {\n              mediaSequence: oldPlaylist.mediaSequence + i,\n              time: lastRemovedSegment.start\n            };\n            this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n            this.trigger('syncinfoupdate');\n            break;\n          }\n        }\n      }\n      /**\n       * Save the mapping from playlist's ProgramDateTime to display. This should\n       * only ever happen once at the start of playback.\n       *\n       * @param {Playlist} playlist - The currently active playlist\n       */\n\n    }, {\n      key: 'setDateTimeMapping',\n      value: function setDateTimeMapping(playlist) {\n        if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n          var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n          this.datetimeToDisplayTime = -playlistTimestamp;\n        }\n      }\n      /**\n       * Reset the state of the inspection cache when we do a rendition\n       * switch\n       */\n\n    }, {\n      key: 'reset',\n      value: function reset() {\n        this.inspectCache_ = undefined;\n      }\n      /**\n       * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n       * and end of the segment in it's internal \"media time\". Used to generate\n       * mappings from that internal \"media time\" to the display time that is\n       * shown on the player.\n       *\n       * @param {SegmentInfo} segmentInfo - The current active request information\n       */\n\n    }, {\n      key: 'probeSegmentInfo',\n      value: function probeSegmentInfo(segmentInfo) {\n        var segment = segmentInfo.segment;\n        var playlist = segmentInfo.playlist;\n        var timingInfo = void 0;\n\n        if (segment.map) {\n          timingInfo = this.probeMp4Segment_(segmentInfo);\n        } else {\n          timingInfo = this.probeTsSegment_(segmentInfo);\n        }\n\n        if (timingInfo) {\n          if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n            this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n            // now with segment timing information\n\n            if (!playlist.syncInfo) {\n              playlist.syncInfo = {\n                mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n                time: segment.start\n              };\n            }\n          }\n        }\n\n        return timingInfo;\n      }\n      /**\n       * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n       * in it's internal \"media time\".\n       *\n       * @private\n       * @param {SegmentInfo} segmentInfo - The current active request information\n       * @return {object} The start and end time of the current segment in \"media time\"\n       */\n\n    }, {\n      key: 'probeMp4Segment_',\n      value: function probeMp4Segment_(segmentInfo) {\n        var segment = segmentInfo.segment;\n        var timescales = probe.timescale(segment.map.bytes);\n        var startTime = probe.startTime(timescales, segmentInfo.bytes);\n\n        if (segmentInfo.timestampOffset !== null) {\n          segmentInfo.timestampOffset -= startTime;\n        }\n\n        return {\n          start: startTime,\n          end: startTime + segment.duration\n        };\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start and end of the segment\n       * in it's internal \"media time\".\n       *\n       * @private\n       * @param {SegmentInfo} segmentInfo - The current active request information\n       * @return {object} The start and end time of the current segment in \"media time\"\n       */\n\n    }, {\n      key: 'probeTsSegment_',\n      value: function probeTsSegment_(segmentInfo) {\n        var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n        var segmentStartTime = void 0;\n        var segmentEndTime = void 0;\n\n        if (!timeInfo) {\n          return null;\n        }\n\n        if (timeInfo.video && timeInfo.video.length === 2) {\n          this.inspectCache_ = timeInfo.video[1].dts;\n          segmentStartTime = timeInfo.video[0].dtsTime;\n          segmentEndTime = timeInfo.video[1].dtsTime;\n        } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n          this.inspectCache_ = timeInfo.audio[1].dts;\n          segmentStartTime = timeInfo.audio[0].dtsTime;\n          segmentEndTime = timeInfo.audio[1].dtsTime;\n        }\n\n        var probedInfo = {\n          start: segmentStartTime,\n          end: segmentEndTime,\n          containsVideo: timeInfo.video && timeInfo.video.length === 2,\n          containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n        };\n        return probedInfo;\n      }\n    }, {\n      key: 'timestampOffsetForTimeline',\n      value: function timestampOffsetForTimeline(timeline) {\n        if (typeof this.timelines[timeline] === 'undefined') {\n          return null;\n        }\n\n        return this.timelines[timeline].time;\n      }\n    }, {\n      key: 'mappingForTimeline',\n      value: function mappingForTimeline(timeline) {\n        if (typeof this.timelines[timeline] === 'undefined') {\n          return null;\n        }\n\n        return this.timelines[timeline].mapping;\n      }\n      /**\n       * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n       * save that display time to the segment.\n       *\n       * @private\n       * @param {SegmentInfo} segmentInfo\n       *        The current active request information\n       * @param {object} timingInfo\n       *        The start and end time of the current segment in \"media time\"\n       * @returns {Boolean}\n       *          Returns false if segment time mapping could not be calculated\n       */\n\n    }, {\n      key: 'calculateSegmentTimeMapping_',\n      value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n        var segment = segmentInfo.segment;\n        var mappingObj = this.timelines[segmentInfo.timeline];\n\n        if (segmentInfo.timestampOffset !== null) {\n          mappingObj = {\n            time: segmentInfo.startOfSegment,\n            mapping: segmentInfo.startOfSegment - timingInfo.start\n          };\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n          segment.start = segmentInfo.startOfSegment;\n          segment.end = timingInfo.end + mappingObj.mapping;\n        } else if (mappingObj) {\n          segment.start = timingInfo.start + mappingObj.mapping;\n          segment.end = timingInfo.end + mappingObj.mapping;\n        } else {\n          return false;\n        }\n\n        return true;\n      }\n      /**\n       * Each time we have discontinuity in the playlist, attempt to calculate the location\n       * in display of the start of the discontinuity and save that. We also save an accuracy\n       * value so that we save values with the most accuracy (closest to 0.)\n       *\n       * @private\n       * @param {SegmentInfo} segmentInfo - The current active request information\n       */\n\n    }, {\n      key: 'saveDiscontinuitySyncInfo_',\n      value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n        var playlist = segmentInfo.playlist;\n        var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n        // the start of the range and it's accuracy is 0 (greater accuracy values\n        // mean more approximation)\n\n        if (segment.discontinuity) {\n          this.discontinuities[segment.timeline] = {\n            time: segment.start,\n            accuracy: 0\n          };\n        } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n          // Search for future discontinuities that we can provide better timing\n          // information for and save that information for sync purposes\n          for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n            var segmentIndex = playlist.discontinuityStarts[i];\n            var discontinuity = playlist.discontinuitySequence + i + 1;\n            var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n            var accuracy = Math.abs(mediaIndexDiff);\n\n            if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n              var time = void 0;\n\n              if (mediaIndexDiff < 0) {\n                time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n              } else {\n                time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n              }\n\n              this.discontinuities[discontinuity] = {\n                time: time,\n                accuracy: accuracy\n              };\n            }\n          }\n        }\n      }\n    }]);\n    return SyncController;\n  }(videojs$1.EventTarget);\n\n  var Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n    var self = this;\n\n    var decrypterWorker = function () {\n      /*\n       * pkcs7.pad\n       * https://github.com/brightcove/pkcs7\n       *\n       * Copyright (c) 2014 Brightcove\n       * Licensed under the apache2 license.\n       */\n\n      /**\n       * Returns the subarray of a Uint8Array without PKCS#7 padding.\n       * @param padded {Uint8Array} unencrypted bytes that have been padded\n       * @return {Uint8Array} the unpadded bytes\n       * @see http://tools.ietf.org/html/rfc5652\n       */\n      function unpad(padded) {\n        return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n      }\n\n      var classCallCheck = function classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      };\n\n      var createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var inherits = function inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      };\n\n      var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      };\n      /**\n       * @file aes.js\n       *\n       * This file contains an adaptation of the AES decryption algorithm\n       * from the Standford Javascript Cryptography Library. That work is\n       * covered by the following copyright and permissions notice:\n       *\n       * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n       * All rights reserved.\n       *\n       * Redistribution and use in source and binary forms, with or without\n       * modification, are permitted provided that the following conditions are\n       * met:\n       *\n       * 1. Redistributions of source code must retain the above copyright\n       *    notice, this list of conditions and the following disclaimer.\n       *\n       * 2. Redistributions in binary form must reproduce the above\n       *    copyright notice, this list of conditions and the following\n       *    disclaimer in the documentation and/or other materials provided\n       *    with the distribution.\n       *\n       * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n       * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n       * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n       * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n       * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n       * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n       * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n       * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n       * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n       * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n       * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n       *\n       * The views and conclusions contained in the software and documentation\n       * are those of the authors and should not be interpreted as representing\n       * official policies, either expressed or implied, of the authors.\n       */\n\n      /**\n       * Expand the S-box tables.\n       *\n       * @private\n       */\n\n\n      var precompute = function precompute() {\n        var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n        var encTable = tables[0];\n        var decTable = tables[1];\n        var sbox = encTable[4];\n        var sboxInv = decTable[4];\n        var i = void 0;\n        var x = void 0;\n        var xInv = void 0;\n        var d = [];\n        var th = [];\n        var x2 = void 0;\n        var x4 = void 0;\n        var x8 = void 0;\n        var s = void 0;\n        var tEnc = void 0;\n        var tDec = void 0; // Compute double and third tables\n\n        for (i = 0; i < 256; i++) {\n          th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n        }\n\n        for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n          // Compute sbox\n          s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n          s = s >> 8 ^ s & 255 ^ 99;\n          sbox[x] = s;\n          sboxInv[s] = x; // Compute MixColumns\n\n          x8 = d[x4 = d[x2 = d[x]]];\n          tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n          tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n          for (i = 0; i < 4; i++) {\n            encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n            decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n          }\n        } // Compactify. Considerable speedup on Firefox.\n\n\n        for (i = 0; i < 5; i++) {\n          encTable[i] = encTable[i].slice(0);\n          decTable[i] = decTable[i].slice(0);\n        }\n\n        return tables;\n      };\n\n      var aesTables = null;\n      /**\n       * Schedule out an AES key for both encryption and decryption. This\n       * is a low-level class. Use a cipher mode to do bulk encryption.\n       *\n       * @class AES\n       * @param key {Array} The key as an array of 4, 6 or 8 words.\n       */\n\n      var AES = function () {\n        function AES(key) {\n          classCallCheck(this, AES);\n          /**\n           * The expanded S-box and inverse S-box tables. These will be computed\n           * on the client so that we don't have to send them down the wire.\n           *\n           * There are two tables, _tables[0] is for encryption and\n           * _tables[1] is for decryption.\n           *\n           * The first 4 sub-tables are the expanded S-box with MixColumns. The\n           * last (_tables[01][4]) is the S-box itself.\n           *\n           * @private\n           */\n          // if we have yet to precompute the S-box tables\n          // do so now\n\n          if (!aesTables) {\n            aesTables = precompute();\n          } // then make a copy of that object for use\n\n\n          this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n          var i = void 0;\n          var j = void 0;\n          var tmp = void 0;\n          var encKey = void 0;\n          var decKey = void 0;\n          var sbox = this._tables[0][4];\n          var decTable = this._tables[1];\n          var keyLen = key.length;\n          var rcon = 1;\n\n          if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n            throw new Error('Invalid aes key size');\n          }\n\n          encKey = key.slice(0);\n          decKey = [];\n          this._key = [encKey, decKey]; // schedule encryption keys\n\n          for (i = keyLen; i < 4 * keyLen + 28; i++) {\n            tmp = encKey[i - 1]; // apply sbox\n\n            if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n              tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n              if (i % keyLen === 0) {\n                tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n                rcon = rcon << 1 ^ (rcon >> 7) * 283;\n              }\n            }\n\n            encKey[i] = encKey[i - keyLen] ^ tmp;\n          } // schedule decryption keys\n\n\n          for (j = 0; i; j++, i--) {\n            tmp = encKey[j & 3 ? i : i - 4];\n\n            if (i <= 4 || j < 4) {\n              decKey[j] = tmp;\n            } else {\n              decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n            }\n          }\n        }\n        /**\n         * Decrypt 16 bytes, specified as four 32-bit words.\n         *\n         * @param {Number} encrypted0 the first word to decrypt\n         * @param {Number} encrypted1 the second word to decrypt\n         * @param {Number} encrypted2 the third word to decrypt\n         * @param {Number} encrypted3 the fourth word to decrypt\n         * @param {Int32Array} out the array to write the decrypted words\n         * into\n         * @param {Number} offset the offset into the output array to start\n         * writing results\n         * @return {Array} The plaintext.\n         */\n\n\n        AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n          var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n          var a = encrypted0 ^ key[0];\n          var b = encrypted3 ^ key[1];\n          var c = encrypted2 ^ key[2];\n          var d = encrypted1 ^ key[3];\n          var a2 = void 0;\n          var b2 = void 0;\n          var c2 = void 0; // key.length === 2 ?\n\n          var nInnerRounds = key.length / 4 - 2;\n          var i = void 0;\n          var kIndex = 4;\n          var table = this._tables[1]; // load up the tables\n\n          var table0 = table[0];\n          var table1 = table[1];\n          var table2 = table[2];\n          var table3 = table[3];\n          var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n          for (i = 0; i < nInnerRounds; i++) {\n            a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n            b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n            c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n            d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n            kIndex += 4;\n            a = a2;\n            b = b2;\n            c = c2;\n          } // Last round.\n\n\n          for (i = 0; i < 4; i++) {\n            out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n          }\n        };\n\n        return AES;\n      }();\n      /**\n       * @file stream.js\n       */\n\n      /**\n       * A lightweight readable stream implemention that handles event dispatching.\n       *\n       * @class Stream\n       */\n\n\n      var Stream = function () {\n        function Stream() {\n          classCallCheck(this, Stream);\n          this.listeners = {};\n        }\n        /**\n         * Add a listener for a specified event type.\n         *\n         * @param {String} type the event name\n         * @param {Function} listener the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n\n        Stream.prototype.on = function on(type, listener) {\n          if (!this.listeners[type]) {\n            this.listeners[type] = [];\n          }\n\n          this.listeners[type].push(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         *\n         * @param {String} type the event name\n         * @param {Function} listener  a function previously registered for this\n         * type of event through `on`\n         * @return {Boolean} if we could turn it off or not\n         */\n\n\n        Stream.prototype.off = function off(type, listener) {\n          if (!this.listeners[type]) {\n            return false;\n          }\n\n          var index = this.listeners[type].indexOf(listener);\n          this.listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         *\n         * @param {String} type the event name\n         */\n\n\n        Stream.prototype.trigger = function trigger(type) {\n          var callbacks = this.listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            var length = callbacks.length;\n\n            for (var i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var _length = callbacks.length;\n\n            for (var _i = 0; _i < _length; ++_i) {\n              callbacks[_i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        Stream.prototype.dispose = function dispose() {\n          this.listeners = {};\n        };\n        /**\n         * Forwards all `data` events on this stream to the destination stream. The\n         * destination stream should provide a method `push` to receive the data\n         * events as they arrive.\n         *\n         * @param {Stream} destination the stream that will receive all `data` events\n         * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n         */\n\n\n        Stream.prototype.pipe = function pipe(destination) {\n          this.on('data', function (data) {\n            destination.push(data);\n          });\n        };\n\n        return Stream;\n      }();\n      /**\n       * @file async-stream.js\n       */\n\n      /**\n       * A wrapper around the Stream class to use setTiemout\n       * and run stream \"jobs\" Asynchronously\n       *\n       * @class AsyncStream\n       * @extends Stream\n       */\n\n\n      var AsyncStream$$1 = function (_Stream) {\n        inherits(AsyncStream$$1, _Stream);\n\n        function AsyncStream$$1() {\n          classCallCheck(this, AsyncStream$$1);\n\n          var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n          _this.jobs = [];\n          _this.delay = 1;\n          _this.timeout_ = null;\n          return _this;\n        }\n        /**\n         * process an async job\n         *\n         * @private\n         */\n\n\n        AsyncStream$$1.prototype.processJob_ = function processJob_() {\n          this.jobs.shift()();\n\n          if (this.jobs.length) {\n            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n          } else {\n            this.timeout_ = null;\n          }\n        };\n        /**\n         * push a job into the stream\n         *\n         * @param {Function} job the job to push into the stream\n         */\n\n\n        AsyncStream$$1.prototype.push = function push(job) {\n          this.jobs.push(job);\n\n          if (!this.timeout_) {\n            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n          }\n        };\n\n        return AsyncStream$$1;\n      }(Stream);\n      /**\n       * @file decrypter.js\n       *\n       * An asynchronous implementation of AES-128 CBC decryption with\n       * PKCS#7 padding.\n       */\n\n      /**\n       * Convert network-order (big-endian) bytes into their little-endian\n       * representation.\n       */\n\n\n      var ntoh = function ntoh(word) {\n        return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n      };\n      /**\n       * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n       *\n       * @param {Uint8Array} encrypted the encrypted bytes\n       * @param {Uint32Array} key the bytes of the decryption key\n       * @param {Uint32Array} initVector the initialization vector (IV) to\n       * use for the first round of CBC.\n       * @return {Uint8Array} the decrypted bytes\n       *\n       * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n       * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n       * @see https://tools.ietf.org/html/rfc2315\n       */\n\n\n      var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n        // word-level access to the encrypted bytes\n        var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n        var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n        // decrypted data\n\n        var init0 = void 0;\n        var init1 = void 0;\n        var init2 = void 0;\n        var init3 = void 0;\n        var encrypted0 = void 0;\n        var encrypted1 = void 0;\n        var encrypted2 = void 0;\n        var encrypted3 = void 0; // iteration variable\n\n        var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n        // passed-in reference and easier access\n\n        init0 = initVector[0];\n        init1 = initVector[1];\n        init2 = initVector[2];\n        init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n        // to each decrypted block\n\n        for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n          // convert big-endian (network order) words into little-endian\n          // (javascript order)\n          encrypted0 = ntoh(encrypted32[wordIx]);\n          encrypted1 = ntoh(encrypted32[wordIx + 1]);\n          encrypted2 = ntoh(encrypted32[wordIx + 2]);\n          encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n          decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n          // plaintext\n\n          decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n          decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n          decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n          decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n          init0 = encrypted0;\n          init1 = encrypted1;\n          init2 = encrypted2;\n          init3 = encrypted3;\n        }\n\n        return decrypted;\n      };\n      /**\n       * The `Decrypter` class that manages decryption of AES\n       * data through `AsyncStream` objects and the `decrypt`\n       * function\n       *\n       * @param {Uint8Array} encrypted the encrypted bytes\n       * @param {Uint32Array} key the bytes of the decryption key\n       * @param {Uint32Array} initVector the initialization vector (IV) to\n       * @param {Function} done the function to run when done\n       * @class Decrypter\n       */\n\n\n      var Decrypter$$1 = function () {\n        function Decrypter$$1(encrypted, key, initVector, done) {\n          classCallCheck(this, Decrypter$$1);\n          var step = Decrypter$$1.STEP;\n          var encrypted32 = new Int32Array(encrypted.buffer);\n          var decrypted = new Uint8Array(encrypted.byteLength);\n          var i = 0;\n          this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n          for (i = step; i < encrypted32.length; i += step) {\n            initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n            this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n          } // invoke the done() callback when everything is finished\n\n\n          this.asyncStream_.push(function () {\n            // remove pkcs#7 padding from the decrypted bytes\n            done(null, unpad(decrypted));\n          });\n        }\n        /**\n         * a getter for step the maximum number of bytes to process at one time\n         *\n         * @return {Number} the value of step 32000\n         */\n\n        /**\n         * @private\n         */\n\n\n        Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n          return function () {\n            var bytes = decrypt$$1(encrypted, key, initVector);\n            decrypted.set(bytes, encrypted.byteOffset);\n          };\n        };\n\n        createClass(Decrypter$$1, null, [{\n          key: 'STEP',\n          get: function get$$1() {\n            // 4 * 8000;\n            return 32000;\n          }\n        }]);\n        return Decrypter$$1;\n      }();\n      /**\n       * @file bin-utils.js\n       */\n\n      /**\n       * Creates an object for sending to a web worker modifying properties that are TypedArrays\n       * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n       *\n       * @param {Object} message\n       *        Object of properties and values to send to the web worker\n       * @return {Object}\n       *         Modified message with TypedArray values expanded\n       * @function createTransferableMessage\n       */\n\n\n      var createTransferableMessage = function createTransferableMessage(message) {\n        var transferable = {};\n        Object.keys(message).forEach(function (key) {\n          var value = message[key];\n\n          if (ArrayBuffer.isView(value)) {\n            transferable[key] = {\n              bytes: value.buffer,\n              byteOffset: value.byteOffset,\n              byteLength: value.byteLength\n            };\n          } else {\n            transferable[key] = value;\n          }\n        });\n        return transferable;\n      };\n      /**\n       * Our web worker interface so that things can talk to aes-decrypter\n       * that will be running in a web worker. the scope is passed to this by\n       * webworkify.\n       *\n       * @param {Object} self\n       *        the scope for the web worker\n       */\n\n\n      var DecrypterWorker = function DecrypterWorker(self) {\n        self.onmessage = function (event) {\n          var data = event.data;\n          var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n          var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n          var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n          /* eslint-disable no-new, handle-callback-err */\n\n          new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n            self.postMessage(createTransferableMessage({\n              source: data.source,\n              decrypted: bytes\n            }), [bytes.buffer]);\n          });\n          /* eslint-enable */\n        };\n      };\n\n      var decrypterWorker = new DecrypterWorker(self);\n      return decrypterWorker;\n    }();\n  });\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  var audioTrackKind_ = function audioTrackKind_(properties) {\n    var kind = properties.default ? 'main' : 'alternative';\n\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n\n  var stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n    segmentLoader.abort();\n    segmentLoader.pause();\n\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n\n  var startLoaders = function startLoaders(playlistLoader, mediaType) {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n\n  var onGroupChanged = function onGroupChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad[type],\n          mainSegmentLoader = _settings$segmentLoad.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup(activeTrack);\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        if (previousActiveLoader) {\n          // The previous group had a playlist loader but the new active group does not\n          // this means we are switching from demuxed to muxed audio. In this case we want to\n          // do a destructive reset of the main segment loader and not restart the audio\n          // loaders.\n          mainSegmentLoader.resetEverything();\n        }\n\n        return;\n      } // Non-destructive resync\n\n\n      segmentLoader.resyncLoader();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n\n  var onTrackChanged = function onTrackChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad2 = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad2[type],\n          mainSegmentLoader = _settings$segmentLoad2.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup(activeTrack);\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active so we do not want to restart loaders\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n        // loader for the audio group), we want to do a destructive reset of the main segment\n        // loader and not restart the audio loaders\n        mainSegmentLoader.resetEverything();\n        return;\n      }\n\n      if (previousActiveLoader === activeGroup.playlistLoader) {\n        // Nothing has actually changed. This can happen because track change events can fire\n        // multiple times for a \"single\" change. One for enabling the new active track, and\n        // one for disabling the track that was active\n        startLoaders(activeGroup.playlistLoader, mediaType);\n        return;\n      }\n\n      if (segmentLoader.track) {\n        // For WebVTT, set the new text track in the segmentloader\n        segmentLoader.track(activeTrack);\n      } // destructive reset\n\n\n      segmentLoader.resetEverything();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type],\n            blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n        stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n        var activeTrack = mediaType.activeTrack();\n        var activeGroup = mediaType.activeGroup();\n        var id = (activeGroup.filter(function (group) {\n          return group.default;\n        })[0] || activeGroup[0]).id;\n        var defaultTrack = mediaType.tracks[id];\n\n        if (activeTrack === defaultTrack) {\n          // Default track encountered an error. All we can do now is blacklist the current\n          // rendition and hope another will switch audio groups\n          blacklistCurrentPlaylist({\n            message: 'Problem encountered loading the default audio track.'\n          });\n          return;\n        }\n\n        videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n        for (var trackId in mediaType.tracks) {\n          mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n        }\n\n        mediaType.onTrackChanged();\n      };\n    },\n\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type];\n        videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n        stopLoaders(segmentLoader, mediaType);\n        var track = mediaType.activeTrack();\n\n        if (track) {\n          track.mode = 'disabled';\n        }\n\n        mediaType.onTrackChanged();\n      };\n    }\n  };\n  var setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: function AUDIO(type, playlistLoader, settings) {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n\n  var byGroupId = function byGroupId(type, groupId) {\n    return function (playlist) {\n      return playlist.attributes[type] === groupId;\n    };\n  };\n\n  var byResolvedUri = function byResolvedUri(resolvedUri) {\n    return function (playlist) {\n      return playlist.resolvedUri === resolvedUri;\n    };\n  };\n\n  var initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': function AUDIO(type, settings) {\n      var hls = settings.hls,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          _settings$master = settings.master,\n          mediaGroups = _settings$master.mediaGroups,\n          playlists = _settings$master.playlists,\n          _settings$mediaTypes$ = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$.groups,\n          tracks = _settings$mediaTypes$.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            default: {\n              default: true\n            }\n          }\n        };\n      }\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        } // List of playlists that have an AUDIO attribute value matching the current\n        // group ID\n\n\n        var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n          // this alternate audio variant\n\n          var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n          if (matchingPlaylists.length) {\n            // If there is a playlist that has the same uri as this audio variant, assume\n            // that the playlist is audio only. We delete the resolvedUri property here\n            // to prevent a playlist loader from being created so that we don't have\n            // both the main and audio segment loaders loading the same audio segments\n            // from the same playlist.\n            delete properties.resolvedUri;\n          }\n\n          var playlistLoader = void 0;\n\n          if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n\n          properties = videojs$1.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = new videojs$1.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              default: properties.default,\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': function SUBTITLES(type, settings) {\n      var tech = settings.tech,\n          hls = settings.hls,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$2 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$2.groups,\n          tracks = _settings$mediaTypes$2.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n          } else if (sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n          }\n\n          properties = videojs$1.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              default: properties.default && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n      var tech = settings.tech,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$3 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$3.groups,\n          tracks = _settings$mediaTypes$3.tracks;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n          // doesn't use a CCx INSTREAM-ID\n\n          if (!properties.instreamId.match(/CC\\d/)) {\n            continue;\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n\n          groups[groupId].push(videojs$1.mergeOptions({\n            id: variantLabel\n          }, properties));\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: properties.instreamId,\n              kind: 'captions',\n              default: properties.default && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n  var activeGroup = function activeGroup(type, settings) {\n    return function (track) {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          groups = settings.mediaTypes[type].groups;\n      var media = masterPlaylistLoader.media();\n\n      if (!media) {\n        return null;\n      }\n\n      var variants = null;\n\n      if (media.attributes[type]) {\n        variants = groups[media.attributes[type]];\n      }\n\n      variants = variants || groups.main;\n\n      if (typeof track === 'undefined') {\n        return variants;\n      }\n\n      if (track === null) {\n        // An active track was specified so a corresponding group is expected. track === null\n        // means no track is currently active so there is no corresponding group\n        return null;\n      }\n\n      return variants.filter(function (props) {\n        return props.id === track.id;\n      })[0] || null;\n    };\n  };\n\n  var activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].enabled) {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    },\n\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].mode === 'showing') {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    }\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the master manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n   *        Audio segment loader\n   * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n   *        Subtitle segment loader\n   * @param {SegmentLoader} settings.segmentLoaders.main\n   *        Main segment loader\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.masterPlaylistLoader\n   *        PlaylistLoader for the master source\n   * @param {HlsHandler} settings.hls\n   *        HLS SourceHandler\n   * @param {Object} settings.master\n   *        The parsed master manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.blacklistCurrentPlaylist\n   *        Blacklists the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n  var setupMediaGroups = function setupMediaGroups(settings) {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      initialize[type](type, settings);\n    });\n    var mediaTypes = settings.mediaTypes,\n        masterPlaylistLoader = settings.masterPlaylistLoader,\n        tech = settings.tech,\n        hls = settings.hls; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    var audioGroup = mediaTypes.AUDIO.activeGroup();\n    var groupId = (audioGroup.filter(function (group) {\n      return group.default;\n    })[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onTrackChanged();\n    masterPlaylistLoader.on('mediachange', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanged();\n      });\n    }); // custom audio track change event handler for usage event\n\n    var onAudioTrackChanged = function onAudioTrackChanged() {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-audio-change'\n      });\n    };\n\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    hls.on('dispose', function () {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n\n    for (var id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n\n  var createMediaTypes = function createMediaTypes() {\n    var mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop$1,\n        activeTrack: noop$1,\n        onGroupChanged: noop$1,\n        onTrackChanged: noop$1\n      };\n    });\n    return mediaTypes;\n  };\n  /**\n   * @file master-playlist-controller.js\n   */\n\n\n  var ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n  var Hls = void 0; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  var loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\n  var sumLoaderStat = function sumLoaderStat(stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n  /**\n   * the master playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a master playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class MasterPlaylistController\n   * @extends videojs.EventTarget\n   */\n\n\n  var MasterPlaylistController = function (_videojs$EventTarget) {\n    inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n    function MasterPlaylistController(options) {\n      classCallCheck$1(this, MasterPlaylistController);\n\n      var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n      var url = options.url,\n          handleManifestRedirects = options.handleManifestRedirects,\n          withCredentials = options.withCredentials,\n          tech = options.tech,\n          bandwidth = options.bandwidth,\n          externHls = options.externHls,\n          useCueTags = options.useCueTags,\n          blacklistDuration = options.blacklistDuration,\n          enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n          sourceType = options.sourceType,\n          seekTo = options.seekTo;\n\n      if (!url) {\n        throw new Error('A non-empty playlist URL is required');\n      }\n\n      Hls = externHls;\n      _this.withCredentials = withCredentials;\n      _this.tech_ = tech;\n      _this.hls_ = tech.hls;\n      _this.seekTo_ = seekTo;\n      _this.sourceType_ = sourceType;\n      _this.useCueTags_ = useCueTags;\n      _this.blacklistDuration = blacklistDuration;\n      _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n      if (_this.useCueTags_) {\n        _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n        _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n\n      _this.requestOptions_ = {\n        withCredentials: withCredentials,\n        handleManifestRedirects: handleManifestRedirects,\n        timeout: null\n      };\n      _this.mediaTypes_ = createMediaTypes();\n      _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n      _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n      _this.seekable_ = videojs$1.createTimeRanges();\n\n      _this.hasPlayed_ = function () {\n        return false;\n      };\n\n      _this.syncController_ = new SyncController(options);\n      _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      _this.decrypter_ = new Decrypter$1();\n      _this.inbandTextTracks_ = {};\n      var segmentLoaderSettings = {\n        hls: _this.hls_,\n        mediaSource: _this.mediaSource,\n        currentTime: _this.tech_.currentTime.bind(_this.tech_),\n        seekable: function seekable$$1() {\n          return _this.seekable();\n        },\n        seeking: function seeking() {\n          return _this.tech_.seeking();\n        },\n        duration: function duration$$1() {\n          return _this.mediaSource.duration;\n        },\n        hasPlayed: function hasPlayed() {\n          return _this.hasPlayed_();\n        },\n        goalBufferLength: function goalBufferLength() {\n          return _this.goalBufferLength();\n        },\n        bandwidth: bandwidth,\n        syncController: _this.syncController_,\n        decrypter: _this.decrypter_,\n        sourceType: _this.sourceType_,\n        inbandTextTracks: _this.inbandTextTracks_\n      };\n      _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n      _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n\n      _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n        segmentMetadataTrack: _this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'vtt'\n      }), options);\n\n      _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n      loaderStats.forEach(function (stat) {\n        _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n      });\n      _this.logger_ = logger('MPC');\n\n      _this.masterPlaylistLoader_.load();\n\n      return _this;\n    }\n    /**\n     * Register event handlers on the master playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n\n\n    createClass$1(MasterPlaylistController, [{\n      key: 'setupMasterPlaylistLoaderListeners_',\n      value: function setupMasterPlaylistLoaderListeners_() {\n        var _this2 = this;\n\n        this.masterPlaylistLoader_.on('loadedmetadata', function () {\n          var media = _this2.masterPlaylistLoader_.media();\n\n          var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n          // timeout the request.\n\n          if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n            _this2.requestOptions_.timeout = 0;\n          } else {\n            _this2.requestOptions_.timeout = requestTimeout;\n          } // if this isn't a live video and preload permits, start\n          // downloading segments\n\n\n          if (media.endList && _this2.tech_.preload() !== 'none') {\n            _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n            _this2.mainSegmentLoader_.load();\n          }\n\n          setupMediaGroups({\n            sourceType: _this2.sourceType_,\n            segmentLoaders: {\n              AUDIO: _this2.audioSegmentLoader_,\n              SUBTITLES: _this2.subtitleSegmentLoader_,\n              main: _this2.mainSegmentLoader_\n            },\n            tech: _this2.tech_,\n            requestOptions: _this2.requestOptions_,\n            masterPlaylistLoader: _this2.masterPlaylistLoader_,\n            hls: _this2.hls_,\n            master: _this2.master(),\n            mediaTypes: _this2.mediaTypes_,\n            blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n          });\n\n          _this2.triggerPresenceUsage_(_this2.master(), media);\n\n          try {\n            _this2.setupSourceBuffers_();\n          } catch (e) {\n            videojs$1.log.warn('Failed to create SourceBuffers', e);\n            return _this2.mediaSource.endOfStream('decode');\n          }\n\n          _this2.setupFirstPlay();\n\n          if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n            _this2.trigger('selectedinitialmedia');\n          } else {\n            // We must wait for the active audio playlist loader to\n            // finish setting up before triggering this event so the\n            // representations API and EME setup is correct\n            _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n              _this2.trigger('selectedinitialmedia');\n            });\n          }\n        });\n        this.masterPlaylistLoader_.on('loadedplaylist', function () {\n          var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n          if (!updatedPlaylist) {\n            // blacklist any variants that are not supported by the browser before selecting\n            // an initial media as the playlist selectors do not consider browser support\n            _this2.excludeUnsupportedVariants_();\n\n            var selectedMedia = void 0;\n\n            if (_this2.enableLowInitialPlaylist) {\n              selectedMedia = _this2.selectInitialPlaylist();\n            }\n\n            if (!selectedMedia) {\n              selectedMedia = _this2.selectPlaylist();\n            }\n\n            _this2.initialMedia_ = selectedMedia;\n\n            _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n            return;\n          }\n\n          if (_this2.useCueTags_) {\n            _this2.updateAdCues_(updatedPlaylist);\n          } // TODO: Create a new event on the PlaylistLoader that signals\n          // that the segments have changed in some way and use that to\n          // update the SegmentLoader instead of doing it twice here and\n          // on `mediachange`\n\n\n          _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n          _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n          // as it is possible that it was temporarily stopped while waiting for\n          // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n          if (!_this2.tech_.paused()) {\n            _this2.mainSegmentLoader_.load();\n\n            if (_this2.audioSegmentLoader_) {\n              _this2.audioSegmentLoader_.load();\n            }\n          }\n\n          if (!updatedPlaylist.endList) {\n            var addSeekableRange = function addSeekableRange() {\n              var seekable$$1 = _this2.seekable();\n\n              if (seekable$$1.length !== 0) {\n                _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n              }\n            };\n\n            if (_this2.duration() !== Infinity) {\n              var onDurationchange = function onDurationchange() {\n                if (_this2.duration() === Infinity) {\n                  addSeekableRange();\n                } else {\n                  _this2.tech_.one('durationchange', onDurationchange);\n                }\n              };\n\n              _this2.tech_.one('durationchange', onDurationchange);\n            } else {\n              addSeekableRange();\n            }\n          }\n        });\n        this.masterPlaylistLoader_.on('error', function () {\n          _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n        });\n        this.masterPlaylistLoader_.on('mediachanging', function () {\n          _this2.mainSegmentLoader_.abort();\n\n          _this2.mainSegmentLoader_.pause();\n        });\n        this.masterPlaylistLoader_.on('mediachange', function () {\n          var media = _this2.masterPlaylistLoader_.media();\n\n          var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n          // timeout the request.\n\n          if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n            _this2.requestOptions_.timeout = 0;\n          } else {\n            _this2.requestOptions_.timeout = requestTimeout;\n          } // TODO: Create a new event on the PlaylistLoader that signals\n          // that the segments have changed in some way and use that to\n          // update the SegmentLoader instead of doing it twice here and\n          // on `loadedplaylist`\n\n\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n\n          _this2.tech_.trigger({\n            type: 'mediachange',\n            bubbles: true\n          });\n        });\n        this.masterPlaylistLoader_.on('playlistunchanged', function () {\n          var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n          var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n          if (playlistOutdated) {\n            // Playlist has stopped updating and we're stuck at its end. Try to\n            // blacklist it and switch to another playlist in the hope that that\n            // one is updating (and give the player a chance to re-adjust to the\n            // safe live point).\n            _this2.blacklistCurrentPlaylist({\n              message: 'Playlist no longer updating.'\n            }); // useful for monitoring QoS\n\n\n            _this2.tech_.trigger('playliststuck');\n          }\n        });\n        this.masterPlaylistLoader_.on('renditiondisabled', function () {\n          _this2.tech_.trigger({\n            type: 'usage',\n            name: 'hls-rendition-disabled'\n          });\n        });\n        this.masterPlaylistLoader_.on('renditionenabled', function () {\n          _this2.tech_.trigger({\n            type: 'usage',\n            name: 'hls-rendition-enabled'\n          });\n        });\n      }\n      /**\n       * A helper function for triggerring presence usage events once per source\n       *\n       * @private\n       */\n\n    }, {\n      key: 'triggerPresenceUsage_',\n      value: function triggerPresenceUsage_(master, media) {\n        var mediaGroups = master.mediaGroups || {};\n        var defaultDemuxed = true;\n        var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n        for (var mediaGroup in mediaGroups.AUDIO) {\n          for (var label in mediaGroups.AUDIO[mediaGroup]) {\n            var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n            if (!properties.uri) {\n              defaultDemuxed = false;\n            }\n          }\n        }\n\n        if (defaultDemuxed) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-demuxed'\n          });\n        }\n\n        if (Object.keys(mediaGroups.SUBTITLES).length) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-webvtt'\n          });\n        }\n\n        if (Hls.Playlist.isAes(media)) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-aes'\n          });\n        }\n\n        if (Hls.Playlist.isFmp4(media)) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n        }\n\n        if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-alternate-audio'\n          });\n        }\n\n        if (this.useCueTags_) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-playlist-cue-tags'\n          });\n        }\n      }\n      /**\n       * Register event handlers on the segment loaders. A helper function\n       * for construction time.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'setupSegmentLoaderListeners_',\n      value: function setupSegmentLoaderListeners_() {\n        var _this3 = this;\n\n        this.mainSegmentLoader_.on('bandwidthupdate', function () {\n          var nextPlaylist = _this3.selectPlaylist();\n\n          var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n          var buffered = _this3.tech_.buffered();\n\n          var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n          var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n          // This is because in LIVE, the player plays 3 segments from the end of the\n          // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n          // in those segments, a viewer will never experience a rendition upswitch.\n\n\n          if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n          // duration is below the max potential low water line\n          _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n          nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n          // buffer while loading a higher rendition.\n          forwardBuffer >= bufferLowWaterLine) {\n            _this3.masterPlaylistLoader_.media(nextPlaylist);\n          }\n\n          _this3.tech_.trigger('bandwidthupdate');\n        });\n        this.mainSegmentLoader_.on('progress', function () {\n          _this3.trigger('progress');\n        });\n        this.mainSegmentLoader_.on('error', function () {\n          _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n        });\n        this.mainSegmentLoader_.on('syncinfoupdate', function () {\n          _this3.onSyncInfoUpdate_();\n        });\n        this.mainSegmentLoader_.on('timestampoffset', function () {\n          _this3.tech_.trigger({\n            type: 'usage',\n            name: 'hls-timestamp-offset'\n          });\n        });\n        this.audioSegmentLoader_.on('syncinfoupdate', function () {\n          _this3.onSyncInfoUpdate_();\n        });\n        this.mainSegmentLoader_.on('ended', function () {\n          _this3.onEndOfStream();\n        });\n        this.mainSegmentLoader_.on('earlyabort', function () {\n          _this3.blacklistCurrentPlaylist({\n            message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n          }, ABORT_EARLY_BLACKLIST_SECONDS);\n        });\n        this.mainSegmentLoader_.on('reseteverything', function () {\n          // If playing an MTS stream, a videojs.MediaSource is listening for\n          // hls-reset to reset caption parsing state in the transmuxer\n          _this3.tech_.trigger('hls-reset');\n        });\n        this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n          // If playing an MTS stream in html, a videojs.MediaSource is listening for\n          // hls-segment-time-mapping update its internal mapping of stream to display time\n          _this3.tech_.trigger({\n            type: 'hls-segment-time-mapping',\n            mapping: event.mapping\n          });\n        });\n        this.audioSegmentLoader_.on('ended', function () {\n          _this3.onEndOfStream();\n        });\n      }\n    }, {\n      key: 'mediaSecondsLoaded_',\n      value: function mediaSecondsLoaded_() {\n        return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n      }\n      /**\n       * Call load on our SegmentLoaders\n       */\n\n    }, {\n      key: 'load',\n      value: function load() {\n        this.mainSegmentLoader_.load();\n\n        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n          this.audioSegmentLoader_.load();\n        }\n\n        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n          this.subtitleSegmentLoader_.load();\n        }\n      }\n      /**\n       * Re-tune playback quality level for the current player\n       * conditions without performing destructive actions, like\n       * removing already buffered content\n       *\n       * @private\n       */\n\n    }, {\n      key: 'smoothQualityChange_',\n      value: function smoothQualityChange_() {\n        var media = this.selectPlaylist();\n\n        if (media !== this.masterPlaylistLoader_.media()) {\n          this.masterPlaylistLoader_.media(media);\n          this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n        }\n      }\n      /**\n       * Re-tune playback quality level for the current player\n       * conditions. This method will perform destructive actions like removing\n       * already buffered content in order to readjust the currently active\n       * playlist quickly. This is good for manual quality changes\n       *\n       * @private\n       */\n\n    }, {\n      key: 'fastQualityChange_',\n      value: function fastQualityChange_() {\n        var _this4 = this;\n\n        var media = this.selectPlaylist();\n\n        if (media === this.masterPlaylistLoader_.media()) {\n          return;\n        }\n\n        this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n        // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n        // ahead is roughly the minimum that will accomplish this across a variety of content\n        // in IE and Edge, but seeking in place is sufficient on all other browsers)\n        // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n        // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n        this.mainSegmentLoader_.resetEverything(function () {\n          // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n          // from the previously enabled rendition to load before the new playlist has finished loading\n          if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n            _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n          } else {\n            _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n          }\n        }); // don't need to reset audio as it is reset when media changes\n      }\n      /**\n       * Begin playback.\n       */\n\n    }, {\n      key: 'play',\n      value: function play() {\n        if (this.setupFirstPlay()) {\n          return;\n        }\n\n        if (this.tech_.ended()) {\n          this.seekTo_(0);\n        }\n\n        if (this.hasPlayed_()) {\n          this.load();\n        }\n\n        var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n        // seek forward to the live point\n\n        if (this.tech_.duration() === Infinity) {\n          if (this.tech_.currentTime() < seekable$$1.start(0)) {\n            return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n          }\n        }\n      }\n      /**\n       * Seek to the latest media position if this is a live video and the\n       * player and video are loaded and initialized.\n       */\n\n    }, {\n      key: 'setupFirstPlay',\n      value: function setupFirstPlay() {\n        var _this5 = this;\n\n        var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n        //  If 1) there is no active media\n        //     2) the player is paused\n        //     3) the first play has already been setup\n        // then exit early\n\n        if (!media || this.tech_.paused() || this.hasPlayed_()) {\n          return false;\n        } // when the video is a live stream\n\n\n        if (!media.endList) {\n          var seekable$$1 = this.seekable();\n\n          if (!seekable$$1.length) {\n            // without a seekable range, the player cannot seek to begin buffering at the live\n            // point\n            return false;\n          }\n\n          if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n            // IE11 throws an InvalidStateError if you try to set currentTime while the\n            // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n            this.tech_.one('loadedmetadata', function () {\n              _this5.trigger('firstplay');\n\n              _this5.seekTo_(seekable$$1.end(0));\n\n              _this5.hasPlayed_ = function () {\n                return true;\n              };\n            });\n            return false;\n          } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n          this.trigger('firstplay'); // seek to the live point\n\n          this.seekTo_(seekable$$1.end(0));\n        }\n\n        this.hasPlayed_ = function () {\n          return true;\n        }; // we can begin loading now that everything is ready\n\n\n        this.load();\n        return true;\n      }\n      /**\n       * handle the sourceopen event on the MediaSource\n       *\n       * @private\n       */\n\n    }, {\n      key: 'handleSourceOpen_',\n      value: function handleSourceOpen_() {\n        // Only attempt to create the source buffer if none already exist.\n        // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n        // after `endOfStream` has been called (in response to a seek for instance)\n        try {\n          this.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create Source Buffers', e);\n          return this.mediaSource.endOfStream('decode');\n        } // if autoplay is enabled, begin playback. This is duplicative of\n        // code in video.js but is required because play() must be invoked\n        // *after* the media source has opened.\n\n\n        if (this.tech_.autoplay()) {\n          var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n          // on browsers which return a promise\n\n          if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n            playPromise.then(null, function (e) {});\n          }\n        }\n\n        this.trigger('sourceopen');\n      }\n      /**\n       * Calls endOfStream on the media source when all active stream types have called\n       * endOfStream\n       *\n       * @param {string} streamType\n       *        Stream type of the segment loader that called endOfStream\n       * @private\n       */\n\n    }, {\n      key: 'onEndOfStream',\n      value: function onEndOfStream() {\n        var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n          // if the audio playlist loader exists, then alternate audio is active\n          if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n            // if we do not know if the main segment loader contains video yet or if we\n            // definitively know the main segment loader contains video, then we need to wait\n            // for both main and audio segment loaders to call endOfStream\n            isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n          } else {\n            // otherwise just rely on the audio loader\n            isEndOfStream = this.audioSegmentLoader_.ended_;\n          }\n        }\n\n        if (!isEndOfStream) {\n          return;\n        }\n\n        this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n        // even when the media source is in a valid state.\n\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          videojs$1.log.warn('Failed to call media source endOfStream', e);\n        }\n      }\n      /**\n       * Check if a playlist has stopped being updated\n       * @param {Object} playlist the media playlist object\n       * @return {boolean} whether the playlist has stopped being updated or not\n       */\n\n    }, {\n      key: 'stuckAtPlaylistEnd_',\n      value: function stuckAtPlaylistEnd_(playlist) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // playlist doesn't have enough information to determine whether we are stuck\n          return false;\n        }\n\n        var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n        if (expired === null) {\n          return false;\n        } // does not use the safe live end to calculate playlist end, since we\n        // don't want to say we are stuck while there is still content\n\n\n        var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n        var currentTime = this.tech_.currentTime();\n        var buffered = this.tech_.buffered();\n\n        if (!buffered.length) {\n          // return true if the playhead reached the absolute end of the playlist\n          return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n        }\n\n        var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n        // end of playlist\n\n        return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n      }\n      /**\n       * Blacklists a playlist when an error occurs for a set amount of time\n       * making it unavailable for selection by the rendition selection algorithm\n       * and then forces a new playlist (rendition) selection.\n       *\n       * @param {Object=} error an optional error that may include the playlist\n       * to blacklist\n       * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n       * playlist\n       */\n\n    }, {\n      key: 'blacklistCurrentPlaylist',\n      value: function blacklistCurrentPlaylist() {\n        var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var blacklistDuration = arguments[1];\n        var currentPlaylist = void 0;\n        var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n        // the playlist we were trying to load (but failed) and that should be\n        // blacklisted instead of the currently selected playlist which is likely\n        // out-of-date in this scenario\n\n        currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n        blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n        // trying to load the master OR while we were disposing of the tech\n\n        if (!currentPlaylist) {\n          this.error = error;\n\n          try {\n            return this.mediaSource.endOfStream('network');\n          } catch (e) {\n            return this.trigger('error');\n          }\n        }\n\n        var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n        if (isFinalRendition) {\n          // Never blacklisting this playlist because it's final rendition\n          videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n          this.tech_.trigger('retryplaylist');\n          return this.masterPlaylistLoader_.load(isFinalRendition);\n        } // Blacklist this playlist\n\n\n        currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n        this.tech_.trigger('blacklistplaylist');\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-blacklisted'\n        }); // Select a new playlist\n\n        nextPlaylist = this.selectPlaylist();\n        videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n        return this.masterPlaylistLoader_.media(nextPlaylist);\n      }\n      /**\n       * Pause all segment loaders\n       */\n\n    }, {\n      key: 'pauseLoading',\n      value: function pauseLoading() {\n        this.mainSegmentLoader_.pause();\n\n        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n          this.audioSegmentLoader_.pause();\n        }\n\n        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n          this.subtitleSegmentLoader_.pause();\n        }\n      }\n      /**\n       * set the current time on all segment loaders\n       *\n       * @param {TimeRange} currentTime the current time to set\n       * @return {TimeRange} the current time\n       */\n\n    }, {\n      key: 'setCurrentTime',\n      value: function setCurrentTime(currentTime) {\n        var buffered = findRange(this.tech_.buffered(), currentTime);\n\n        if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n          // return immediately if the metadata is not ready yet\n          return 0;\n        } // it's clearly an edge-case but don't thrown an error if asked to\n        // seek within an empty playlist\n\n\n        if (!this.masterPlaylistLoader_.media().segments) {\n          return 0;\n        } // In flash playback, the segment loaders should be reset on every seek, even\n        // in buffer seeks. If the seek location is already buffered, continue buffering as\n        // usual\n        // TODO: redo this comment\n\n\n        if (buffered && buffered.length) {\n          return currentTime;\n        } // cancel outstanding requests so we begin buffering at the new\n        // location\n\n\n        this.mainSegmentLoader_.resetEverything();\n        this.mainSegmentLoader_.abort();\n\n        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n          this.audioSegmentLoader_.resetEverything();\n          this.audioSegmentLoader_.abort();\n        }\n\n        if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n          this.subtitleSegmentLoader_.resetEverything();\n          this.subtitleSegmentLoader_.abort();\n        } // start segment loader loading in case they are paused\n\n\n        this.load();\n      }\n      /**\n       * get the current duration\n       *\n       * @return {TimeRange} the duration\n       */\n\n    }, {\n      key: 'duration',\n      value: function duration$$1() {\n        if (!this.masterPlaylistLoader_) {\n          return 0;\n        }\n\n        if (this.mediaSource) {\n          return this.mediaSource.duration;\n        }\n\n        return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      }\n      /**\n       * check the seekable range\n       *\n       * @return {TimeRange} the seekable range\n       */\n\n    }, {\n      key: 'seekable',\n      value: function seekable$$1() {\n        return this.seekable_;\n      }\n    }, {\n      key: 'onSyncInfoUpdate_',\n      value: function onSyncInfoUpdate_() {\n        var mainSeekable = void 0;\n        var audioSeekable = void 0;\n\n        if (!this.masterPlaylistLoader_) {\n          return;\n        }\n\n        var media = this.masterPlaylistLoader_.media();\n\n        if (!media) {\n          return;\n        }\n\n        var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          // not enough information to update seekable\n          return;\n        }\n\n        mainSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (mainSeekable.length === 0) {\n          return;\n        }\n\n        if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n          media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n          expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n          if (expired === null) {\n            return;\n          }\n\n          audioSeekable = Hls.Playlist.seekable(media, expired);\n\n          if (audioSeekable.length === 0) {\n            return;\n          }\n        }\n\n        var oldEnd = void 0;\n        var oldStart = void 0;\n\n        if (this.seekable_ && this.seekable_.length) {\n          oldEnd = this.seekable_.end(0);\n          oldStart = this.seekable_.start(0);\n        }\n\n        if (!audioSeekable) {\n          // seekable has been calculated based on buffering video data so it\n          // can be returned directly\n          this.seekable_ = mainSeekable;\n        } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n          // seekables are pretty far off, rely on main\n          this.seekable_ = mainSeekable;\n        } else {\n          this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n        } // seekable is the same as last time\n\n\n        if (this.seekable_ && this.seekable_.length) {\n          if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n            return;\n          }\n        }\n\n        this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n        this.tech_.trigger('seekablechanged');\n      }\n      /**\n       * Update the player duration\n       */\n\n    }, {\n      key: 'updateDuration',\n      value: function updateDuration() {\n        var _this6 = this;\n\n        var oldDuration = this.mediaSource.duration;\n        var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n        var buffered = this.tech_.buffered();\n\n        var setDuration = function setDuration() {\n          // on firefox setting the duration may sometimes cause an exception\n          // even if the media source is open and source buffers are not\n          // updating, something about the media source being in an invalid state.\n          _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n          try {\n            _this6.mediaSource.duration = newDuration;\n          } catch (e) {\n            videojs$1.log.warn('Failed to set media source duration', e);\n          }\n\n          _this6.tech_.trigger('durationchange');\n\n          _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n        };\n\n        if (buffered.length > 0) {\n          newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n        } // if the duration has changed, invalidate the cached value\n\n\n        if (oldDuration !== newDuration) {\n          // update the duration\n          if (this.mediaSource.readyState !== 'open') {\n            this.mediaSource.addEventListener('sourceopen', setDuration);\n          } else {\n            setDuration();\n          }\n        }\n      }\n      /**\n       * dispose of the MasterPlaylistController and everything\n       * that it controls\n       */\n\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        var _this7 = this;\n\n        this.decrypter_.terminate();\n        this.masterPlaylistLoader_.dispose();\n        this.mainSegmentLoader_.dispose();\n        ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n          var groups = _this7.mediaTypes_[type].groups;\n\n          for (var id in groups) {\n            groups[id].forEach(function (group) {\n              if (group.playlistLoader) {\n                group.playlistLoader.dispose();\n              }\n            });\n          }\n        });\n        this.audioSegmentLoader_.dispose();\n        this.subtitleSegmentLoader_.dispose();\n      }\n      /**\n       * return the master playlist object if we have one\n       *\n       * @return {Object} the master playlist object that we parsed\n       */\n\n    }, {\n      key: 'master',\n      value: function master() {\n        return this.masterPlaylistLoader_.master;\n      }\n      /**\n       * return the currently selected playlist\n       *\n       * @return {Object} the currently selected playlist object that we parsed\n       */\n\n    }, {\n      key: 'media',\n      value: function media() {\n        // playlist loader will not return media if it has not been fully loaded\n        return this.masterPlaylistLoader_.media() || this.initialMedia_;\n      }\n      /**\n       * setup our internal source buffers on our segment Loaders\n       *\n       * @private\n       */\n\n    }, {\n      key: 'setupSourceBuffers_',\n      value: function setupSourceBuffers_() {\n        var media = this.masterPlaylistLoader_.media();\n        var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n        // attached\n\n        if (!media || this.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n        if (mimeTypes.length < 1) {\n          this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n          return this.mediaSource.endOfStream('decode');\n        }\n\n        this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n        // selection\n\n        this.excludeIncompatibleVariants_(media);\n      }\n    }, {\n      key: 'configureLoaderMimeTypes_',\n      value: function configureLoaderMimeTypes_(mimeTypes) {\n        // If the content is demuxed, we can't start appending segments to a source buffer\n        // until both source buffers are set up, or else the browser may not let us add the\n        // second source buffer (it will assume we are playing either audio only or video\n        // only).\n        var sourceBufferEmitter = // If there is more than one mime type\n        mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n        mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n        // only with alternate audio)\n        mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n        new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n        // video only, or muxed content.\n        null;\n        this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n        if (mimeTypes[1]) {\n          this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n        }\n      }\n      /**\n       * Blacklists playlists with codecs that are unsupported by the browser.\n       */\n\n    }, {\n      key: 'excludeUnsupportedVariants_',\n      value: function excludeUnsupportedVariants_() {\n        this.master().playlists.forEach(function (variant) {\n          if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n      }\n      /**\n       * Blacklist playlists that are known to be codec or\n       * stream-incompatible with the SourceBuffer configuration. For\n       * instance, Media Source Extensions would cause the video element to\n       * stall waiting for video data if you switched from a variant with\n       * video and audio to an audio-only one.\n       *\n       * @param {Object} media a media playlist compatible with the current\n       * set of SourceBuffers. Variants in the current master playlist that\n       * do not appear to have compatible codec or stream configurations\n       * will be excluded from the default playlist selection algorithm\n       * indefinitely.\n       * @private\n       */\n\n    }, {\n      key: 'excludeIncompatibleVariants_',\n      value: function excludeIncompatibleVariants_(media) {\n        var codecCount = 2;\n        var videoCodec = null;\n        var codecs = void 0;\n\n        if (media.attributes.CODECS) {\n          codecs = parseCodecs(media.attributes.CODECS);\n          videoCodec = codecs.videoCodec;\n          codecCount = codecs.codecCount;\n        }\n\n        this.master().playlists.forEach(function (variant) {\n          var variantCodecs = {\n            codecCount: 2,\n            videoCodec: null\n          };\n\n          if (variant.attributes.CODECS) {\n            variantCodecs = parseCodecs(variant.attributes.CODECS);\n          } // if the streams differ in the presence or absence of audio or\n          // video, they are incompatible\n\n\n          if (variantCodecs.codecCount !== codecCount) {\n            variant.excludeUntil = Infinity;\n          } // if h.264 is specified on the current playlist, some flavor of\n          // it must be specified on all compatible variants\n\n\n          if (variantCodecs.videoCodec !== videoCodec) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n      }\n    }, {\n      key: 'updateAdCues_',\n      value: function updateAdCues_(media) {\n        var offset = 0;\n        var seekable$$1 = this.seekable();\n\n        if (seekable$$1.length) {\n          offset = seekable$$1.start(0);\n        }\n\n        updateAdCues(media, this.cueTagsTrack_, offset);\n      }\n      /**\n       * Calculates the desired forward buffer length based on current time\n       *\n       * @return {Number} Desired forward buffer length in seconds\n       */\n\n    }, {\n      key: 'goalBufferLength',\n      value: function goalBufferLength() {\n        var currentTime = this.tech_.currentTime();\n        var initial = Config.GOAL_BUFFER_LENGTH;\n        var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n        var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n        return Math.min(initial + currentTime * rate, max);\n      }\n      /**\n       * Calculates the desired buffer low water line based on current time\n       *\n       * @return {Number} Desired buffer low water line in seconds\n       */\n\n    }, {\n      key: 'bufferLowWaterLine',\n      value: function bufferLowWaterLine() {\n        var currentTime = this.tech_.currentTime();\n        var initial = Config.BUFFER_LOW_WATER_LINE;\n        var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n        var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n        return Math.min(initial + currentTime * rate, max);\n      }\n    }]);\n    return MasterPlaylistController;\n  }(videojs$1.EventTarget);\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The master playlist loader\n   * @param {String} playlistUri - uri of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {Boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n\n  var enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n    return function (enable) {\n      var playlist = loader.master.playlists[playlistUri];\n      var incompatible = isIncompatible(playlist);\n      var currentlyEnabled = isEnabled(playlist);\n\n      if (typeof enable === 'undefined') {\n        return currentlyEnabled;\n      }\n\n      if (enable) {\n        delete playlist.disabled;\n      } else {\n        playlist.disabled = true;\n      }\n\n      if (enable !== currentlyEnabled && !incompatible) {\n        // Ensure the outside world knows about our changes\n        changePlaylistFn();\n\n        if (enable) {\n          loader.trigger('renditionenabled');\n        } else {\n          loader.trigger('renditiondisabled');\n        }\n      }\n\n      return enable;\n    };\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n\n  var Representation = function Representation(hlsHandler, playlist, id) {\n    classCallCheck$1(this, Representation);\n    var mpc = hlsHandler.masterPlaylistController_,\n        smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n    var changeType = smoothQualityChange ? 'smooth' : 'fast';\n    var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n    if (playlist.attributes.RESOLUTION) {\n      var resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution.width;\n      this.height = resolution.height;\n    }\n\n    this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n    // within the master playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n  };\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the HlsHandler class\n   * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n   * representation API into\n   */\n\n\n  var renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n    var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n    hlsHandler.representations = function () {\n      return playlists.master.playlists.filter(function (media) {\n        return !isIncompatible(media);\n      }).map(function (e, i) {\n        return new Representation(hlsHandler, e, e.uri);\n      });\n    };\n  };\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n  // Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\n  var timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  var PlaybackWatcher = function () {\n    /**\n     * Represents an PlaybackWatcher object.\n     * @constructor\n     * @param {object} options an object that includes the tech and settings\n     */\n    function PlaybackWatcher(options) {\n      var _this = this;\n\n      classCallCheck$1(this, PlaybackWatcher);\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.seekTo = options.seekTo;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.timer_ = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n\n      var canPlayHandler = function canPlayHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var waitingHandler = function waitingHandler() {\n        return _this.techWaiting_();\n      };\n\n      var cancelTimerHandler = function cancelTimerHandler() {\n        return _this.cancelTimer_();\n      };\n\n      var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n        return _this.fixesBadSeeks_();\n      };\n\n      this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n      this.dispose = function () {\n        _this.logger_('dispose');\n\n        _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n        _this.tech_.off('waiting', waitingHandler);\n\n        _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n        _this.tech_.off('canplay', canPlayHandler);\n\n        if (_this.checkCurrentTimeTimeout_) {\n          window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n        }\n\n        _this.cancelTimer_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n\n    createClass$1(PlaybackWatcher, [{\n      key: 'monitorCurrentTime_',\n      value: function monitorCurrentTime_() {\n        this.checkCurrentTime_();\n\n        if (this.checkCurrentTimeTimeout_) {\n          window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n        } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n        this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n      }\n      /**\n       * The purpose of this function is to emulate the \"waiting\" event on\n       * browsers that do not emit it when they are waiting for more\n       * data to continue playback\n       *\n       * @private\n       */\n\n    }, {\n      key: 'checkCurrentTime_',\n      value: function checkCurrentTime_() {\n        if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n          this.consecutiveUpdates = 0;\n          this.lastRecordedTime = this.tech_.currentTime();\n          return;\n        }\n\n        if (this.tech_.paused() || this.tech_.seeking()) {\n          return;\n        }\n\n        var currentTime = this.tech_.currentTime();\n        var buffered = this.tech_.buffered();\n\n        if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n          // If current time is at the end of the final buffered region, then any playback\n          // stall is most likely caused by buffering in a low bandwidth environment. The tech\n          // should fire a `waiting` event in this scenario, but due to browser and tech\n          // inconsistencies. Calling `techWaiting_` here allows us to simulate\n          // responding to a native `waiting` event when the tech fails to emit one.\n          return this.techWaiting_();\n        }\n\n        if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n          this.consecutiveUpdates++;\n          this.waiting_();\n        } else if (currentTime === this.lastRecordedTime) {\n          this.consecutiveUpdates++;\n        } else {\n          this.consecutiveUpdates = 0;\n          this.lastRecordedTime = currentTime;\n        }\n      }\n      /**\n       * Cancels any pending timers and resets the 'timeupdate' mechanism\n       * designed to detect that we are stalled\n       *\n       * @private\n       */\n\n    }, {\n      key: 'cancelTimer_',\n      value: function cancelTimer_() {\n        this.consecutiveUpdates = 0;\n\n        if (this.timer_) {\n          this.logger_('cancelTimer_');\n          clearTimeout(this.timer_);\n        }\n\n        this.timer_ = null;\n      }\n      /**\n       * Fixes situations where there's a bad seek\n       *\n       * @return {Boolean} whether an action was taken to fix the seek\n       * @private\n       */\n\n    }, {\n      key: 'fixesBadSeeks_',\n      value: function fixesBadSeeks_() {\n        var seeking = this.tech_.seeking();\n\n        if (!seeking) {\n          return false;\n        }\n\n        var seekable = this.seekable();\n        var currentTime = this.tech_.currentTime();\n        var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n        var seekTo = void 0;\n\n        if (isAfterSeekableRange) {\n          var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n          seekTo = seekableEnd;\n        }\n\n        if (this.beforeSeekableWindow_(seekable, currentTime)) {\n          var seekableStart = seekable.start(0); // sync to the beginning of the live window\n          // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n          seekTo = seekableStart + SAFE_TIME_DELTA;\n        }\n\n        if (typeof seekTo !== 'undefined') {\n          this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n          this.seekTo(seekTo);\n          return true;\n        }\n\n        return false;\n      }\n      /**\n       * Handler for situations when we determine the player is waiting.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'waiting_',\n      value: function waiting_() {\n        if (this.techWaiting_()) {\n          return;\n        } // All tech waiting checks failed. Use last resort correction\n\n\n        var currentTime = this.tech_.currentTime();\n        var buffered = this.tech_.buffered();\n        var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n        // region with no indication that anything is amiss (seen in Firefox). Seeking to\n        // currentTime is usually enough to kickstart the player. This checks that the player\n        // is currently within a buffered region before attempting a corrective seek.\n        // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n        // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n        // make sure there is ~3 seconds of forward buffer before taking any corrective action\n        // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n        if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n          this.cancelTimer_();\n          this.seekTo(currentTime);\n          this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-unknown-waiting'\n          });\n          return;\n        }\n      }\n      /**\n       * Handler for situations when the tech fires a `waiting` event\n       *\n       * @return {Boolean}\n       *         True if an action (or none) was needed to correct the waiting. False if no\n       *         checks passed\n       * @private\n       */\n\n    }, {\n      key: 'techWaiting_',\n      value: function techWaiting_() {\n        var seekable = this.seekable();\n        var currentTime = this.tech_.currentTime();\n\n        if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n          // Tech is seeking or bad seek fixed, no action needed\n          return true;\n        }\n\n        if (this.tech_.seeking() || this.timer_ !== null) {\n          // Tech is seeking or already waiting on another action, no action needed\n          return true;\n        }\n\n        if (this.beforeSeekableWindow_(seekable, currentTime)) {\n          var livePoint = seekable.end(seekable.length - 1);\n          this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n          this.cancelTimer_();\n          this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-live-resync'\n          });\n          return true;\n        }\n\n        var buffered = this.tech_.buffered();\n        var nextRange = findNextRange(buffered, currentTime);\n\n        if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n          // Even though the video underflowed and was stuck in a gap, the audio overplayed\n          // the gap, leading currentTime into a buffered range. Seeking to currentTime\n          // allows the video to catch up to the audio position without losing any audio\n          // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n          this.cancelTimer_();\n          this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-video-underflow'\n          });\n          return true;\n        } // check for gap\n\n\n        if (nextRange.length > 0) {\n          var difference = nextRange.start(0) - currentTime;\n          this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n          this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n          return true;\n        } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n        return false;\n      }\n    }, {\n      key: 'afterSeekableWindow_',\n      value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n        var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        if (!seekable.length) {\n          // we can't make a solid case if there's no seekable, default to false\n          return false;\n        }\n\n        var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n        var isLive = !playlist.endList;\n\n        if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n          allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n        }\n\n        if (currentTime > allowedEnd) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: 'beforeSeekableWindow_',\n      value: function beforeSeekableWindow_(seekable, currentTime) {\n        if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n        seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: 'videoUnderflow_',\n      value: function videoUnderflow_(nextRange, buffered, currentTime) {\n        if (nextRange.length === 0) {\n          // Even if there is no available next range, there is still a possibility we are\n          // stuck in a gap due to video underflow.\n          var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n          if (gap) {\n            this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n            return true;\n          }\n        }\n\n        return false;\n      }\n      /**\n       * Timer callback. If playback still has not proceeded, then we seek\n       * to the start of the next buffered region.\n       *\n       * @private\n       */\n\n    }, {\n      key: 'skipTheGap_',\n      value: function skipTheGap_(scheduledCurrentTime) {\n        var buffered = this.tech_.buffered();\n        var currentTime = this.tech_.currentTime();\n        var nextRange = findNextRange(buffered, currentTime);\n        this.cancelTimer_();\n\n        if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n          return;\n        }\n\n        this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n        this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-gap-skip'\n        });\n      }\n    }, {\n      key: 'gapFromVideoUnderflow_',\n      value: function gapFromVideoUnderflow_(buffered, currentTime) {\n        // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n        // playing for ~3 seconds after the video gap starts. This is done to account for\n        // video buffer underflow/underrun (note that this is not done when there is audio\n        // buffer underflow/underrun -- in that case the video will stop as soon as it\n        // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n        // video stalls). The player's time will reflect the playthrough of audio, so the\n        // time will appear as if we are in a buffered region, even if we are stuck in a\n        // \"gap.\"\n        //\n        // Example:\n        // video buffer:   0 => 10.1, 10.2 => 20\n        // audio buffer:   0 => 20\n        // overall buffer: 0 => 10.1, 10.2 => 20\n        // current time: 13\n        //\n        // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n        // however, the audio continued playing until it reached ~3 seconds past the gap\n        // (13 seconds), at which point it stops as well. Since current time is past the\n        // gap, findNextRange will return no ranges.\n        //\n        // To check for this issue, we see if there is a gap that starts somewhere within\n        // a 3 second range (3 seconds +/- 1 second) back from our current time.\n        var gaps = findGaps(buffered);\n\n        for (var i = 0; i < gaps.length; i++) {\n          var start = gaps.start(i);\n          var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n          if (currentTime - start < 4 && currentTime - start > 2) {\n            return {\n              start: start,\n              end: end\n            };\n          }\n        }\n\n        return null;\n      }\n    }]);\n    return PlaybackWatcher;\n  }();\n\n  var defaultOptions = {\n    errorInterval: 30,\n    getSource: function getSource(next) {\n      var tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      var sourceObj = tech.currentSource_;\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  var initPlugin = function initPlugin(player, options) {\n    var lastCalled = 0;\n    var seekTo = 0;\n    var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n    player.ready(function () {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    var loadedMetadataHandler = function loadedMetadataHandler() {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n\n    var setSource = function setSource(sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n\n    var errorHandler = function errorHandler() {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'hls-error-reload-canceled'\n        });\n        return;\n      }\n\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n\n    var cleanupEvents = function cleanupEvents() {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n\n    var reinitPlugin = function reinitPlugin(newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n\n  var reloadSourceOnError = function reloadSourceOnError(options) {\n    initPlugin(this, options);\n  };\n\n  var version$3 = \"1.9.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\n  videojs$1.use('*', function (player) {\n    return {\n      setSource: function setSource(srcObj, next) {\n        // pass null as the first argument to indicate that the source is not rejected\n        next(null, srcObj);\n      },\n      // VHS needs to know when seeks happen. For external seeks (generated at the player\n      // level), this middleware will capture the action. For internal seeks (generated at\n      // the tech level), we use a wrapped function so that we can handle it on our own\n      // (specified elsewhere).\n      setCurrentTime: function setCurrentTime(time) {\n        if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n          player.vhs.setCurrentTime(time);\n        }\n\n        return time;\n      },\n      // Sync VHS after play requests.\n      // This specifically handles replay where the order of actions is\n      // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n      // then triggers a play event.\n      play: function play() {\n        if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n          player.vhs.setCurrentTime(player.tech_.currentTime());\n        }\n      }\n    };\n  });\n  /**\n   * @file videojs-http-streaming.js\n   *\n   * The main file for the HLS project.\n   * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n   */\n\n  var Hls$1 = {\n    PlaylistLoader: PlaylistLoader,\n    Playlist: Playlist,\n    Decrypter: Decrypter,\n    AsyncStream: AsyncStream,\n    decrypt: decrypt,\n    utils: utils$1,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    comparePlaylistBandwidth: comparePlaylistBandwidth,\n    comparePlaylistResolution: comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properites\n\n  ['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n    Object.defineProperty(Hls$1, prop, {\n      get: function get$$1() {\n        videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n        return Config[prop];\n      },\n      set: function set$$1(value) {\n        videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n        if (typeof value !== 'number' || value < 0) {\n          videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n          return;\n        }\n\n        Config[prop] = value;\n      }\n    });\n  });\n  var LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n    if (mpegurlRE.test(type)) {\n      return 'hls';\n    }\n\n    var dashRE = /^application\\/dash\\+xml/i;\n\n    if (dashRE.test(type)) {\n      return 'dash';\n    }\n\n    return null;\n  };\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleHlsMediaChange\n   */\n\n\n  var handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n    var newPlaylist = playlistLoader.media();\n    var selectedIndex = -1;\n\n    for (var i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.uri) {\n        selectedIndex = i;\n        break;\n      }\n    }\n\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex: selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} hls Hls object to listen to for media events.\n   * @function handleHlsLoadedMetadata\n   */\n\n\n  var handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n    hls.representations().forEach(function (rep) {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleHlsMediaChange(qualityLevels, hls.playlists);\n  }; // HLS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n\n  Hls$1.canPlaySource = function () {\n    return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    } // upsert the content types based on the selected playlist\n\n\n    var keySystemContentTypes = {};\n\n    for (var keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {\n        audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n        videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n      };\n\n      if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n\n    return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n  };\n\n  var setupEmeOptions = function setupEmeOptions(hlsHandler) {\n    if (hlsHandler.options_.sourceType !== 'dash') {\n      return;\n    }\n\n    var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n    if (player.eme) {\n      var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n      if (sourceOptions) {\n        player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n        if (player.eme.initializeMediaKeys) {\n          player.eme.initializeMediaKeys();\n        }\n      }\n    }\n  };\n\n  var getVhsLocalStorage = function getVhsLocalStorage() {\n    if (!window.localStorage) {\n      return null;\n    }\n\n    var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n    if (!storedObject) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n\n  var updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n    if (!window.localStorage) {\n      return false;\n    }\n\n    var objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n\n    return objectToStore;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n\n  Hls$1.supportsNativeHls = function () {\n    var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs$1.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n\n    var canPlay = [// Apple santioned\n    'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n    'audio/mpegurl', // Very common\n    'audio/x-mpegurl', // Very common\n    'application/x-mpegurl', // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n\n  Hls$1.supportsNativeDash = function () {\n    if (!videojs$1.getTech('Html5').isSupported()) {\n      return false;\n    }\n\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n\n  Hls$1.supportsTypeNatively = function (type) {\n    if (type === 'hls') {\n      return Hls$1.supportsNativeHls;\n    }\n\n    if (type === 'dash') {\n      return Hls$1.supportsNativeDash;\n    }\n\n    return false;\n  };\n  /**\n   * HLS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n\n  Hls$1.isSupported = function () {\n    return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var Component$1 = videojs$1.getComponent('Component');\n  /**\n   * The Hls Handler object, where we orchestrate all of the parts\n   * of HLS to interact with video.js\n   *\n   * @class HlsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  var HlsHandler = function (_Component) {\n    inherits$1(HlsHandler, _Component);\n\n    function HlsHandler(source, tech, options) {\n      classCallCheck$1(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n      // backwards-compatibility\n\n      var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n      if (tech.options_ && tech.options_.playerId) {\n        var _player = videojs$1(tech.options_.playerId);\n\n        if (!_player.hasOwnProperty('hls')) {\n          Object.defineProperty(_player, 'hls', {\n            get: function get$$1() {\n              videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'hls-player-access'\n              });\n              return _this;\n            },\n            configurable: true\n          });\n        } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n        // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n        // isn't the most appropriate form of reference for video.js (since all APIs should\n        // be provided through core video.js), it is a common pattern for plugins, and vhs\n        // will act accordingly.\n\n\n        _player.vhs = _this; // deprecated, for backwards compatibility\n\n        _player.dash = _this;\n        _this.player_ = _player;\n      }\n\n      _this.tech_ = tech;\n      _this.source_ = source;\n      _this.stats = {};\n\n      _this.setOptions_();\n\n      if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native HLS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n\n      _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n        var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n        if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n          _this.masterPlaylistController_.smoothQualityChange_();\n        }\n      }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n      _this.on(_this.tech_, 'seeking', function () {\n        if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n          this.setCurrentTime(0);\n        }\n      });\n\n      _this.on(_this.tech_, 'error', function () {\n        if (this.masterPlaylistController_) {\n          this.masterPlaylistController_.pauseLoading();\n        }\n      });\n\n      _this.on(_this.tech_, 'play', _this.play);\n\n      return _this;\n    }\n\n    createClass$1(HlsHandler, [{\n      key: 'setOptions_',\n      value: function setOptions_() {\n        var _this2 = this; // defaults\n\n\n        this.options_.withCredentials = this.options_.withCredentials || false;\n        this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n        this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n        this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n        this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n        this.options_.customTagParsers = this.options_.customTagParsers || [];\n        this.options_.customTagMappers = this.options_.customTagMappers || [];\n\n        if (typeof this.options_.blacklistDuration !== 'number') {\n          this.options_.blacklistDuration = 5 * 60;\n        }\n\n        if (typeof this.options_.bandwidth !== 'number') {\n          if (this.options_.useBandwidthFromLocalStorage) {\n            var storedObject = getVhsLocalStorage();\n\n            if (storedObject && storedObject.bandwidth) {\n              this.options_.bandwidth = storedObject.bandwidth;\n              this.tech_.trigger({\n                type: 'usage',\n                name: 'hls-bandwidth-from-local-storage'\n              });\n            }\n\n            if (storedObject && storedObject.throughput) {\n              this.options_.throughput = storedObject.throughput;\n              this.tech_.trigger({\n                type: 'usage',\n                name: 'hls-throughput-from-local-storage'\n              });\n            }\n          }\n        } // if bandwidth was not set by options or pulled from local storage, start playlist\n        // selection at a reasonable bandwidth\n\n\n        if (typeof this.options_.bandwidth !== 'number') {\n          this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n        } // If the bandwidth number is unchanged from the initial setting\n        // then this takes precedence over the enableLowInitialPlaylist option\n\n\n        this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n        ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects'].forEach(function (option) {\n          if (typeof _this2.source_[option] !== 'undefined') {\n            _this2.options_[option] = _this2.source_[option];\n          }\n        });\n        this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      }\n      /**\n       * called when player.src gets called, handle a new source\n       *\n       * @param {Object} src the source object to handle\n       */\n\n    }, {\n      key: 'src',\n      value: function src(_src, type) {\n        var _this3 = this; // do nothing if the src is falsey\n\n\n        if (!_src) {\n          return;\n        }\n\n        this.setOptions_(); // add master playlist controller options\n\n        this.options_.url = this.source_.src;\n        this.options_.tech = this.tech_;\n        this.options_.externHls = Hls$1;\n        this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n        // setCurrentTime function. This is needed because \"seeking\" events aren't always\n        // reliable. External seeks (via the player object) are handled via middleware.\n\n        this.options_.seekTo = function (time) {\n          _this3.tech_.setCurrentTime(time);\n\n          _this3.setCurrentTime(time);\n        };\n\n        this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n        this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n          seekable: function seekable$$1() {\n            return _this3.seekable();\n          },\n          media: function media() {\n            return _this3.masterPlaylistController_.media();\n          }\n        }));\n        this.masterPlaylistController_.on('error', function () {\n          var player = videojs$1.players[_this3.tech_.options_.playerId];\n          player.error(_this3.masterPlaylistController_.error);\n        }); // `this` in selectPlaylist should be the HlsHandler for backwards\n        // compatibility with < v2\n\n        this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n        this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n        this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n        this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n        // controller. Using a custom property for backwards compatibility\n        // with < v2\n\n        Object.defineProperties(this, {\n          selectPlaylist: {\n            get: function get$$1() {\n              return this.masterPlaylistController_.selectPlaylist;\n            },\n            set: function set$$1(selectPlaylist) {\n              this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n            }\n          },\n          throughput: {\n            get: function get$$1() {\n              return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n            },\n            set: function set$$1(throughput) {\n              this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n              // for the cumulative average\n\n              this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n            }\n          },\n          bandwidth: {\n            get: function get$$1() {\n              return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n            },\n            set: function set$$1(bandwidth) {\n              this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n              // `count` is set to zero that current value of `rate` isn't included\n              // in the cumulative average\n\n              this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n                rate: 0,\n                count: 0\n              };\n            }\n          },\n\n          /**\n           * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n           * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n           * the entire process after that - decryption, transmuxing, and appending - provided\n           * by `throughput`.\n           *\n           * Since the two process are serial, the overall system bandwidth is given by:\n           *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n           */\n          systemBandwidth: {\n            get: function get$$1() {\n              var invBandwidth = 1 / (this.bandwidth || 1);\n              var invThroughput = void 0;\n\n              if (this.throughput > 0) {\n                invThroughput = 1 / this.throughput;\n              } else {\n                invThroughput = 0;\n              }\n\n              var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n              return systemBitrate;\n            },\n            set: function set$$1() {\n              videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n            }\n          }\n        });\n\n        if (this.options_.bandwidth) {\n          this.bandwidth = this.options_.bandwidth;\n        }\n\n        if (this.options_.throughput) {\n          this.throughput = this.options_.throughput;\n        }\n\n        Object.defineProperties(this.stats, {\n          bandwidth: {\n            get: function get$$1() {\n              return _this3.bandwidth || 0;\n            },\n            enumerable: true\n          },\n          mediaRequests: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaRequests_() || 0;\n            },\n            enumerable: true\n          },\n          mediaRequestsAborted: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n            },\n            enumerable: true\n          },\n          mediaRequestsTimedout: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n            },\n            enumerable: true\n          },\n          mediaRequestsErrored: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n            },\n            enumerable: true\n          },\n          mediaTransferDuration: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n            },\n            enumerable: true\n          },\n          mediaBytesTransferred: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n            },\n            enumerable: true\n          },\n          mediaSecondsLoaded: {\n            get: function get$$1() {\n              return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n            },\n            enumerable: true\n          },\n          buffered: {\n            get: function get$$1() {\n              return timeRangesToArray(_this3.tech_.buffered());\n            },\n            enumerable: true\n          },\n          currentTime: {\n            get: function get$$1() {\n              return _this3.tech_.currentTime();\n            },\n            enumerable: true\n          },\n          currentSource: {\n            get: function get$$1() {\n              return _this3.tech_.currentSource_;\n            },\n            enumerable: true\n          },\n          currentTech: {\n            get: function get$$1() {\n              return _this3.tech_.name_;\n            },\n            enumerable: true\n          },\n          duration: {\n            get: function get$$1() {\n              return _this3.tech_.duration();\n            },\n            enumerable: true\n          },\n          master: {\n            get: function get$$1() {\n              return _this3.playlists.master;\n            },\n            enumerable: true\n          },\n          playerDimensions: {\n            get: function get$$1() {\n              return _this3.tech_.currentDimensions();\n            },\n            enumerable: true\n          },\n          seekable: {\n            get: function get$$1() {\n              return timeRangesToArray(_this3.tech_.seekable());\n            },\n            enumerable: true\n          },\n          timestamp: {\n            get: function get$$1() {\n              return Date.now();\n            },\n            enumerable: true\n          },\n          videoPlaybackQuality: {\n            get: function get$$1() {\n              return _this3.tech_.getVideoPlaybackQuality();\n            },\n            enumerable: true\n          }\n        });\n        this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n        this.tech_.on('bandwidthupdate', function () {\n          if (_this3.options_.useBandwidthFromLocalStorage) {\n            updateVhsLocalStorage({\n              bandwidth: _this3.bandwidth,\n              throughput: Math.round(_this3.throughput)\n            });\n          }\n        });\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          // Add the manual rendition mix-in to HlsHandler\n          renditionSelectionMixin(_this3);\n          setupEmeOptions(_this3);\n        }); // the bandwidth of the primary segment loader is our best\n        // estimate of overall bandwidth\n\n        this.on(this.masterPlaylistController_, 'progress', function () {\n          this.tech_.trigger('progress');\n        });\n        this.tech_.ready(function () {\n          return _this3.setupQualityLevels_();\n        }); // do nothing if the tech has been disposed already\n        // this can occur if someone sets the src in player.ready(), for instance\n\n        if (!this.tech_.el()) {\n          return;\n        }\n\n        this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n      }\n      /**\n       * Initializes the quality levels and sets listeners to update them.\n       *\n       * @method setupQualityLevels_\n       * @private\n       */\n\n    }, {\n      key: 'setupQualityLevels_',\n      value: function setupQualityLevels_() {\n        var _this4 = this;\n\n        var player = videojs$1.players[this.tech_.options_.playerId];\n\n        if (player && player.qualityLevels) {\n          this.qualityLevels_ = player.qualityLevels();\n          this.masterPlaylistController_.on('selectedinitialmedia', function () {\n            handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n          });\n          this.playlists.on('mediachange', function () {\n            handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n          });\n        }\n      }\n      /**\n       * Begin playing the video.\n       */\n\n    }, {\n      key: 'play',\n      value: function play() {\n        this.masterPlaylistController_.play();\n      }\n      /**\n       * a wrapper around the function in MasterPlaylistController\n       */\n\n    }, {\n      key: 'setCurrentTime',\n      value: function setCurrentTime(currentTime) {\n        this.masterPlaylistController_.setCurrentTime(currentTime);\n      }\n      /**\n       * a wrapper around the function in MasterPlaylistController\n       */\n\n    }, {\n      key: 'duration',\n      value: function duration$$1() {\n        return this.masterPlaylistController_.duration();\n      }\n      /**\n       * a wrapper around the function in MasterPlaylistController\n       */\n\n    }, {\n      key: 'seekable',\n      value: function seekable$$1() {\n        return this.masterPlaylistController_.seekable();\n      }\n      /**\n       * Abort all outstanding work and cleanup.\n       */\n\n    }, {\n      key: 'dispose',\n      value: function dispose() {\n        if (this.playbackWatcher_) {\n          this.playbackWatcher_.dispose();\n        }\n\n        if (this.masterPlaylistController_) {\n          this.masterPlaylistController_.dispose();\n        }\n\n        if (this.qualityLevels_) {\n          this.qualityLevels_.dispose();\n        }\n\n        if (this.player_) {\n          delete this.player_.vhs;\n          delete this.player_.dash;\n          delete this.player_.hls;\n        }\n\n        if (this.tech_ && this.tech_.hls) {\n          delete this.tech_.hls;\n        }\n\n        get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n      }\n    }, {\n      key: 'convertToProgramTime',\n      value: function convertToProgramTime(time, callback) {\n        return getProgramTime({\n          playlist: this.masterPlaylistController_.media(),\n          time: time,\n          callback: callback\n        });\n      } // the player must be playing before calling this\n\n    }, {\n      key: 'seekToProgramTime',\n      value: function seekToProgramTime$$1(programTime, callback) {\n        var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n        return seekToProgramTime({\n          programTime: programTime,\n          playlist: this.masterPlaylistController_.media(),\n          retryCount: retryCount,\n          pauseAfterSeek: pauseAfterSeek,\n          seekTo: this.options_.seekTo,\n          tech: this.options_.tech,\n          callback: callback\n        });\n      }\n    }]);\n    return HlsHandler;\n  }(Component$1);\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n\n  var HlsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$3,\n    canHandleSource: function canHandleSource(srcObj) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n      return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n      tech.hls = new HlsHandler(source, tech, localOptions);\n      tech.hls.xhr = xhrFactory();\n      tech.hls.src(source.src, source.type);\n      return tech.hls;\n    },\n    canPlayType: function canPlayType(type) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n          overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n      var supportedType = simpleTypeFromSourceType(type);\n      var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n\n  if (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n    videojs$1.MediaSource = MediaSource;\n    videojs$1.URL = URL$1;\n  } // register source handlers with the appropriate techs\n\n\n  if (MediaSource.supportsNativeMediaSources()) {\n    videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n  }\n\n  videojs$1.HlsHandler = HlsHandler;\n  videojs$1.HlsSourceHandler = HlsSourceHandler;\n  videojs$1.Hls = Hls$1;\n\n  if (!videojs$1.use) {\n    videojs$1.registerComponent('Hls', Hls$1);\n  }\n\n  videojs$1.options.hls = videojs$1.options.hls || {};\n\n  if (videojs$1.registerPlugin) {\n    videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  } else {\n    videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs$1;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_video.js@7.5.5@video.js/dist/video.js\n// module id = ACdS\n// module chunks = 1","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"swiper/dist/js/swiper.js\")):\"function\"==typeof define&&define.amd?define(\"VueAwesomeSwiper\",[\"swiper\"],t):\"object\"==typeof exports?exports.VueAwesomeSwiper=t(require(\"swiper/dist/js/swiper.js\")):e.VueAwesomeSwiper=t(e.Swiper)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=4)}([function(t,n){t.exports=e},function(e,t){e.exports=function(e,t,n,i,s,r){var o,a=e=e||{},u=typeof e.default;\"object\"!==u&&\"function\"!==u||(o=e,a=e.default);var p=\"function\"==typeof a?a.options:a;t&&(p.render=t.render,p.staticRenderFns=t.staticRenderFns,p._compiled=!0),n&&(p.functional=!0),s&&(p._scopeId=s);var l;if(r?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},p._ssrRegister=l):i&&(l=i),l){var c=p.functional,d=c?p.render:p.beforeCreate;c?(p._injectStyles=l,p.render=function(e,t){return l.call(t),d(e,t)}):p.beforeCreate=d?[].concat(d,l):[l]}return{esModule:o,exports:a,options:p}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(5),s=n.n(i),r=n(8),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(6),s=n.n(i),r=n(7),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.swiperSlide=t.swiper=t.Swiper=void 0;var s=n(0),r=i(s),o=n(2),a=i(o),u=n(3),p=i(u),l=window.Swiper||r.default,c=p.default,d=a.default,f=function(e,t){t&&(p.default.props.globalOptions.default=function(){return t}),e.component(p.default.name,p.default),e.component(a.default.name,a.default)},h={Swiper:l,swiper:c,swiperSlide:d,install:f};t.default=h,t.Swiper=l,t.swiper=c,t.swiperSlide=d,t.install=f},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={name:\"swiper-slide\",data:function(){return{slideClass:\"swiper-slide\"}},ready:function(){this.update()},mounted:function(){this.update(),this.$parent&&this.$parent.options&&this.$parent.options.slideClass&&(this.slideClass=this.$parent.options.slideClass)},updated:function(){this.update()},attached:function(){this.update()},methods:{update:function(){this.$parent&&this.$parent.swiper&&this.$parent.update()}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),r=window.Swiper||s.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var s=arguments[i];if(null!=s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(n[r]=s[r])}return n},writable:!0,configurable:!0});var o=[\"beforeDestroy\",\"slideChange\",\"slideChangeTransitionStart\",\"slideChangeTransitionEnd\",\"slideNextTransitionStart\",\"slideNextTransitionEnd\",\"slidePrevTransitionStart\",\"slidePrevTransitionEnd\",\"transitionStart\",\"transitionEnd\",\"touchStart\",\"touchMove\",\"touchMoveOpposite\",\"sliderMove\",\"touchEnd\",\"click\",\"tap\",\"doubleTap\",\"imagesReady\",\"progress\",\"reachBeginning\",\"reachEnd\",\"fromEdge\",\"setTranslate\",\"setTransition\",\"resize\"];t.default={name:\"swiper\",props:{options:{type:Object,default:function(){return{}}},globalOptions:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{swiper:null,classes:{wrapperClass:\"swiper-wrapper\"}}},ready:function(){this.swiper||this.mountInstance()},mounted:function(){if(!this.swiper){var e=!1;for(var t in this.classes)this.classes.hasOwnProperty(t)&&this.options[t]&&(e=!0,this.classes[t]=this.options[t]);e?this.$nextTick(this.mountInstance):this.mountInstance()}},activated:function(){this.update()},updated:function(){this.update()},beforeDestroy:function(){this.$nextTick(function(){this.swiper&&(this.swiper.destroy&&this.swiper.destroy(),delete this.swiper)})},methods:{update:function(){this.swiper&&(this.swiper.update&&this.swiper.update(),this.swiper.navigation&&this.swiper.navigation.update(),this.swiper.pagination&&this.swiper.pagination.render(),this.swiper.pagination&&this.swiper.pagination.update())},mountInstance:function(){var e=Object.assign({},this.globalOptions,this.options);this.swiper=new r(this.$el,e),this.bindEvents(),this.$emit(\"ready\",this.swiper)},bindEvents:function(){var e=this,t=this;o.forEach(function(n){e.swiper.on(n,function(){t.$emit.apply(t,[n].concat(Array.prototype.slice.call(arguments))),t.$emit.apply(t,[n.replace(/([A-Z])/g,\"-$1\").toLowerCase()].concat(Array.prototype.slice.call(arguments)))})})}}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"swiper-container\"},[e._t(\"parallax-bg\"),e._v(\" \"),n(\"div\",{class:e.classes.wrapperClass},[e._t(\"default\")],2),e._v(\" \"),e._t(\"pagination\"),e._v(\" \"),e._t(\"button-prev\"),e._v(\" \"),e._t(\"button-next\"),e._v(\" \"),e._t(\"scrollbar\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{class:e.slideClass},[e._t(\"default\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-awesome-swiper@3.1.3@vue-awesome-swiper/dist/vue-awesome-swiper.js\n// module id = DMPO\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 1","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/window.js\n// module id = VBq3\n// module chunks = 1","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 1","(function() {\n  var MutationObserver, Util, WeakMap, getComputedStyle, getComputedStyleRX,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Util = (function() {\n    function Util() {}\n\n    Util.prototype.extend = function(custom, defaults) {\n      var key, value;\n      for (key in defaults) {\n        value = defaults[key];\n        if (custom[key] == null) {\n          custom[key] = value;\n        }\n      }\n      return custom;\n    };\n\n    Util.prototype.isMobile = function(agent) {\n      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(agent);\n    };\n\n    Util.prototype.createEvent = function(event, bubble, cancel, detail) {\n      var customEvent;\n      if (bubble == null) {\n        bubble = false;\n      }\n      if (cancel == null) {\n        cancel = false;\n      }\n      if (detail == null) {\n        detail = null;\n      }\n      if (document.createEvent != null) {\n        customEvent = document.createEvent('CustomEvent');\n        customEvent.initCustomEvent(event, bubble, cancel, detail);\n      } else if (document.createEventObject != null) {\n        customEvent = document.createEventObject();\n        customEvent.eventType = event;\n      } else {\n        customEvent.eventName = event;\n      }\n      return customEvent;\n    };\n\n    Util.prototype.emitEvent = function(elem, event) {\n      if (elem.dispatchEvent != null) {\n        return elem.dispatchEvent(event);\n      } else if (event in (elem != null)) {\n        return elem[event]();\n      } else if ((\"on\" + event) in (elem != null)) {\n        return elem[\"on\" + event]();\n      }\n    };\n\n    Util.prototype.addEvent = function(elem, event, fn) {\n      if (elem.addEventListener != null) {\n        return elem.addEventListener(event, fn, false);\n      } else if (elem.attachEvent != null) {\n        return elem.attachEvent(\"on\" + event, fn);\n      } else {\n        return elem[event] = fn;\n      }\n    };\n\n    Util.prototype.removeEvent = function(elem, event, fn) {\n      if (elem.removeEventListener != null) {\n        return elem.removeEventListener(event, fn, false);\n      } else if (elem.detachEvent != null) {\n        return elem.detachEvent(\"on\" + event, fn);\n      } else {\n        return delete elem[event];\n      }\n    };\n\n    Util.prototype.innerHeight = function() {\n      if ('innerHeight' in window) {\n        return window.innerHeight;\n      } else {\n        return document.documentElement.clientHeight;\n      }\n    };\n\n    return Util;\n\n  })();\n\n  WeakMap = this.WeakMap || this.MozWeakMap || (WeakMap = (function() {\n    function WeakMap() {\n      this.keys = [];\n      this.values = [];\n    }\n\n    WeakMap.prototype.get = function(key) {\n      var i, item, j, len, ref;\n      ref = this.keys;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        item = ref[i];\n        if (item === key) {\n          return this.values[i];\n        }\n      }\n    };\n\n    WeakMap.prototype.set = function(key, value) {\n      var i, item, j, len, ref;\n      ref = this.keys;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        item = ref[i];\n        if (item === key) {\n          this.values[i] = value;\n          return;\n        }\n      }\n      this.keys.push(key);\n      return this.values.push(value);\n    };\n\n    return WeakMap;\n\n  })());\n\n  MutationObserver = this.MutationObserver || this.WebkitMutationObserver || this.MozMutationObserver || (MutationObserver = (function() {\n    function MutationObserver() {\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn('MutationObserver is not supported by your browser.');\n      }\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn('WOW.js cannot detect dom mutations, please call .sync() after loading new content.');\n      }\n    }\n\n    MutationObserver.notSupported = true;\n\n    MutationObserver.prototype.observe = function() {};\n\n    return MutationObserver;\n\n  })());\n\n  getComputedStyle = this.getComputedStyle || function(el, pseudo) {\n    this.getPropertyValue = function(prop) {\n      var ref;\n      if (prop === 'float') {\n        prop = 'styleFloat';\n      }\n      if (getComputedStyleRX.test(prop)) {\n        prop.replace(getComputedStyleRX, function(_, _char) {\n          return _char.toUpperCase();\n        });\n      }\n      return ((ref = el.currentStyle) != null ? ref[prop] : void 0) || null;\n    };\n    return this;\n  };\n\n  getComputedStyleRX = /(\\-([a-z]){1})/g;\n\n  this.WOW = (function() {\n    WOW.prototype.defaults = {\n      boxClass: 'wow',\n      animateClass: 'animated',\n      offset: 0,\n      mobile: true,\n      live: true,\n      callback: null,\n      scrollContainer: null\n    };\n\n    function WOW(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.scrollCallback = bind(this.scrollCallback, this);\n      this.scrollHandler = bind(this.scrollHandler, this);\n      this.resetAnimation = bind(this.resetAnimation, this);\n      this.start = bind(this.start, this);\n      this.scrolled = true;\n      this.config = this.util().extend(options, this.defaults);\n      if (options.scrollContainer != null) {\n        this.config.scrollContainer = document.querySelector(options.scrollContainer);\n      }\n      this.animationNameCache = new WeakMap();\n      this.wowEvent = this.util().createEvent(this.config.boxClass);\n    }\n\n    WOW.prototype.init = function() {\n      var ref;\n      this.element = window.document.documentElement;\n      if ((ref = document.readyState) === \"interactive\" || ref === \"complete\") {\n        this.start();\n      } else {\n        this.util().addEvent(document, 'DOMContentLoaded', this.start);\n      }\n      return this.finished = [];\n    };\n\n    WOW.prototype.start = function() {\n      var box, j, len, ref;\n      this.stopped = false;\n      this.boxes = (function() {\n        var j, len, ref, results;\n        ref = this.element.querySelectorAll(\".\" + this.config.boxClass);\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          box = ref[j];\n          results.push(box);\n        }\n        return results;\n      }).call(this);\n      this.all = (function() {\n        var j, len, ref, results;\n        ref = this.boxes;\n        results = [];\n        for (j = 0, len = ref.length; j < len; j++) {\n          box = ref[j];\n          results.push(box);\n        }\n        return results;\n      }).call(this);\n      if (this.boxes.length) {\n        if (this.disabled()) {\n          this.resetStyle();\n        } else {\n          ref = this.boxes;\n          for (j = 0, len = ref.length; j < len; j++) {\n            box = ref[j];\n            this.applyStyle(box, true);\n          }\n        }\n      }\n      if (!this.disabled()) {\n        this.util().addEvent(this.config.scrollContainer || window, 'scroll', this.scrollHandler);\n        this.util().addEvent(window, 'resize', this.scrollHandler);\n        this.interval = setInterval(this.scrollCallback, 50);\n      }\n      if (this.config.live) {\n        return new MutationObserver((function(_this) {\n          return function(records) {\n            var k, len1, node, record, results;\n            results = [];\n            for (k = 0, len1 = records.length; k < len1; k++) {\n              record = records[k];\n              results.push((function() {\n                var l, len2, ref1, results1;\n                ref1 = record.addedNodes || [];\n                results1 = [];\n                for (l = 0, len2 = ref1.length; l < len2; l++) {\n                  node = ref1[l];\n                  results1.push(this.doSync(node));\n                }\n                return results1;\n              }).call(_this));\n            }\n            return results;\n          };\n        })(this)).observe(document.body, {\n          childList: true,\n          subtree: true\n        });\n      }\n    };\n\n    WOW.prototype.stop = function() {\n      this.stopped = true;\n      this.util().removeEvent(this.config.scrollContainer || window, 'scroll', this.scrollHandler);\n      this.util().removeEvent(window, 'resize', this.scrollHandler);\n      if (this.interval != null) {\n        return clearInterval(this.interval);\n      }\n    };\n\n    WOW.prototype.sync = function(element) {\n      if (MutationObserver.notSupported) {\n        return this.doSync(this.element);\n      }\n    };\n\n    WOW.prototype.doSync = function(element) {\n      var box, j, len, ref, results;\n      if (element == null) {\n        element = this.element;\n      }\n      if (element.nodeType !== 1) {\n        return;\n      }\n      element = element.parentNode || element;\n      ref = element.querySelectorAll(\".\" + this.config.boxClass);\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        box = ref[j];\n        if (indexOf.call(this.all, box) < 0) {\n          this.boxes.push(box);\n          this.all.push(box);\n          if (this.stopped || this.disabled()) {\n            this.resetStyle();\n          } else {\n            this.applyStyle(box, true);\n          }\n          results.push(this.scrolled = true);\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    WOW.prototype.show = function(box) {\n      this.applyStyle(box);\n      box.className = box.className + \" \" + this.config.animateClass;\n      if (this.config.callback != null) {\n        this.config.callback(box);\n      }\n      this.util().emitEvent(box, this.wowEvent);\n      this.util().addEvent(box, 'animationend', this.resetAnimation);\n      this.util().addEvent(box, 'oanimationend', this.resetAnimation);\n      this.util().addEvent(box, 'webkitAnimationEnd', this.resetAnimation);\n      this.util().addEvent(box, 'MSAnimationEnd', this.resetAnimation);\n      return box;\n    };\n\n    WOW.prototype.applyStyle = function(box, hidden) {\n      var delay, duration, iteration;\n      duration = box.getAttribute('data-wow-duration');\n      delay = box.getAttribute('data-wow-delay');\n      iteration = box.getAttribute('data-wow-iteration');\n      return this.animate((function(_this) {\n        return function() {\n          return _this.customStyle(box, hidden, duration, delay, iteration);\n        };\n      })(this));\n    };\n\n    WOW.prototype.animate = (function() {\n      if ('requestAnimationFrame' in window) {\n        return function(callback) {\n          return window.requestAnimationFrame(callback);\n        };\n      } else {\n        return function(callback) {\n          return callback();\n        };\n      }\n    })();\n\n    WOW.prototype.resetStyle = function() {\n      var box, j, len, ref, results;\n      ref = this.boxes;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        box = ref[j];\n        results.push(box.style.visibility = 'visible');\n      }\n      return results;\n    };\n\n    WOW.prototype.resetAnimation = function(event) {\n      var target;\n      if (event.type.toLowerCase().indexOf('animationend') >= 0) {\n        target = event.target || event.srcElement;\n        return target.className = target.className.replace(this.config.animateClass, '').trim();\n      }\n    };\n\n    WOW.prototype.customStyle = function(box, hidden, duration, delay, iteration) {\n      if (hidden) {\n        this.cacheAnimationName(box);\n      }\n      box.style.visibility = hidden ? 'hidden' : 'visible';\n      if (duration) {\n        this.vendorSet(box.style, {\n          animationDuration: duration\n        });\n      }\n      if (delay) {\n        this.vendorSet(box.style, {\n          animationDelay: delay\n        });\n      }\n      if (iteration) {\n        this.vendorSet(box.style, {\n          animationIterationCount: iteration\n        });\n      }\n      this.vendorSet(box.style, {\n        animationName: hidden ? 'none' : this.cachedAnimationName(box)\n      });\n      return box;\n    };\n\n    WOW.prototype.vendors = [\"moz\", \"webkit\"];\n\n    WOW.prototype.vendorSet = function(elem, properties) {\n      var name, results, value, vendor;\n      results = [];\n      for (name in properties) {\n        value = properties[name];\n        elem[\"\" + name] = value;\n        results.push((function() {\n          var j, len, ref, results1;\n          ref = this.vendors;\n          results1 = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            vendor = ref[j];\n            results1.push(elem[\"\" + vendor + (name.charAt(0).toUpperCase()) + (name.substr(1))] = value);\n          }\n          return results1;\n        }).call(this));\n      }\n      return results;\n    };\n\n    WOW.prototype.vendorCSS = function(elem, property) {\n      var j, len, ref, result, style, vendor;\n      style = getComputedStyle(elem);\n      result = style.getPropertyCSSValue(property);\n      ref = this.vendors;\n      for (j = 0, len = ref.length; j < len; j++) {\n        vendor = ref[j];\n        result = result || style.getPropertyCSSValue(\"-\" + vendor + \"-\" + property);\n      }\n      return result;\n    };\n\n    WOW.prototype.animationName = function(box) {\n      var animationName, error;\n      try {\n        animationName = this.vendorCSS(box, 'animation-name').cssText;\n      } catch (error) {\n        animationName = getComputedStyle(box).getPropertyValue('animation-name');\n      }\n      if (animationName === 'none') {\n        return '';\n      } else {\n        return animationName;\n      }\n    };\n\n    WOW.prototype.cacheAnimationName = function(box) {\n      return this.animationNameCache.set(box, this.animationName(box));\n    };\n\n    WOW.prototype.cachedAnimationName = function(box) {\n      return this.animationNameCache.get(box);\n    };\n\n    WOW.prototype.scrollHandler = function() {\n      return this.scrolled = true;\n    };\n\n    WOW.prototype.scrollCallback = function() {\n      var box;\n      if (this.scrolled) {\n        this.scrolled = false;\n        this.boxes = (function() {\n          var j, len, ref, results;\n          ref = this.boxes;\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            box = ref[j];\n            if (!(box)) {\n              continue;\n            }\n            if (this.isVisible(box)) {\n              this.show(box);\n              continue;\n            }\n            results.push(box);\n          }\n          return results;\n        }).call(this);\n        if (!(this.boxes.length || this.config.live)) {\n          return this.stop();\n        }\n      }\n    };\n\n    WOW.prototype.offsetTop = function(element) {\n      var top;\n      while (element.offsetTop === void 0) {\n        element = element.parentNode;\n      }\n      top = element.offsetTop;\n      while (element = element.offsetParent) {\n        top += element.offsetTop;\n      }\n      return top;\n    };\n\n    WOW.prototype.isVisible = function(box) {\n      var bottom, offset, top, viewBottom, viewTop;\n      offset = box.getAttribute('data-wow-offset') || this.config.offset;\n      viewTop = (this.config.scrollContainer && this.config.scrollContainer.scrollTop) || window.pageYOffset;\n      viewBottom = viewTop + Math.min(this.element.clientHeight, this.util().innerHeight()) - offset;\n      top = this.offsetTop(box);\n      bottom = top + box.clientHeight;\n      return top <= viewBottom && bottom >= viewTop;\n    };\n\n    WOW.prototype.util = function() {\n      return this._util != null ? this._util : this._util = new Util();\n    };\n\n    WOW.prototype.disabled = function() {\n      return !this.config.mobile && this.util().isMobile(navigator.userAgent);\n    };\n\n    return WOW;\n\n  })();\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_wowjs@1.1.3@wowjs/dist/wow.js\n// module id = aYx4\n// module chunks = 1","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_global@4.3.2@global/document.js\n// module id = e3Mc\n// module chunks = 1","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Swiper = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.3\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2019, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 11, 2019\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass ) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create( SwiperClass && SwiperClass.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection (newDirection, needUpdate) {\n      if ( needUpdate === void 0 ) needUpdate = true;\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n        return swiper;\n      }\n\n      if (currentDirection === 'vertical') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"vertical wp8-vertical\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n      if (currentDirection === 'horizontal') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"horizontal wp8-horizontal\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n\n      swiper.params.direction = newDirection;\n\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n\n      swiper.emit('changeDirection');\n      if (needUpdate) { swiper.update(); }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.push(slides[i]); }\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.unshift(slides[i]); }\n        }\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) { return; }\n      var activeIndex = swiper.activeIndex;\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n          if (slidesIndexes[i] < activeIndex) { activeIndex -= 1; }\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n        if (slidesIndexes < activeIndex) { activeIndex -= 1; }\n        activeIndex = Math.max(activeIndex, 0);\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          removeSlide: Virtual.removeSlide.bind(swiper),\n          removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          var isHidden;\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            swiper.emit('paginationShow', swiper);\n          } else {\n            swiper.emit('paginationHide', swiper);\n          }\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.js\n// module id = p/Ka\n// module chunks = 1"],"sourceRoot":""}